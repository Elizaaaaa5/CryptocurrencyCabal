<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Classes on Cryptocurrency Cabal</title>
    <link>http://bitcoin-class.org/classes/</link>
    <description>Recent content in Classes on Cryptocurrency Cabal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 19 Oct 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://bitcoin-class.org/classes/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Class 15: Scripting Transactions</title>
      <link>http://bitcoin-class.org/classes/class15/</link>
      <pubDate>Mon, 19 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>http://bitcoin-class.org/classes/class15/</guid>
      <description>

&lt;h2 id=&#34;midterm-exam:82758e0aba59693fe0fb1bf5353fa6c7&#34;&gt;Midterm Exam&lt;/h2&gt;

&lt;p&gt;The midterm exam will be in class, &lt;strong&gt;Wednesday, 21
  October&lt;/strong&gt;.  The midterm will be closed-resources, but is meant to test
  understanding, not memorization.&lt;/p&gt;

&lt;p&gt;The midterm covers: Classes 1-15, Checkups 1-2, Problem Sets 1-2, and
  the assigned readings: Chapters 1, 2, 3, and 5 from &lt;a href=&#34;https://piazza.com/princeton/spring2015/btctech/resources&#34;&gt;&lt;em&gt;Bitcoin and
  Cryptocurrency
  Technologies&lt;/em&gt;&lt;/a&gt;;
  Chapters 1, 2, 3, 4, 6, and 7 from &lt;a href=&#34;https://github.com/aantonop/bitcoinbook&#34;&gt;&lt;em&gt;Mastering Bitcoin: Unlocking
  Digital Cryptocurrencies&lt;/em&gt;&lt;/a&gt;;
  Satoshi Nakamoto, &lt;a href=&#34;https://bitcoin.org/bitcoin.pdf&#34;&gt;&lt;em&gt;Bitcoin: A Peer-to-Peer Electronic Cash
  System&lt;/em&gt;&lt;/a&gt;; Ittay Eyal and Emin
  G&amp;uuml;n Sirer, &lt;a href=&#34;http://arxiv.org/pdf/1311.0243v5.pdf&#34;&gt;&lt;em&gt;Majority is not Enough: Bitcoin Mining is
  Vulnerable&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The first two questions on the midterm will ask you to comment on the
  technical validity of some statements in the &lt;a href=&#34;https://www.fas.org/sgp/crs/misc/R43339.pdf&#34;&gt;Congressional Research
  Service report&lt;/a&gt; (in the
  first 8 pages, not the policy issues).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Extra Office Hours.&lt;/strong&gt; There will be some additional office hours this week:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Monday, 5-6:30pm (Ori, Rice 442)&lt;/li&gt;
&lt;li&gt;Tuesday, 2-3:30pm (Dave, Rice 507) &lt;strong&gt;(Added)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Tuesday, 3:30-4:30pm (Samee, Rice 442) &lt;strong&gt;(Added)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Wednesday, 3:30-4:30pm (Samee, Rice 442)&lt;/li&gt;
&lt;li&gt;Thursday, 2:30-3:30 (Dave, Rice 507)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;scripting-transactions:82758e0aba59693fe0fb1bf5353fa6c7&#34;&gt;Scripting Transactions&lt;/h2&gt;

&lt;p&gt;&lt;center&gt;
&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/key/cYC6B2BCdrtoy6&#34; width=&#34;625&#34; height=&#34;400&#34; frameborder=&#34;2&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34;&gt; &lt;/iframe&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;caption&#34;&gt;
&lt;a href=&#34;http://bitcoin-class.org/classes/class15-post.pptx&#34;&gt;Download the slides&lt;/a&gt;
   &lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Recall from class 12: Transaction outputs in bitcoin are protected by
&lt;em&gt;locking scripts&lt;/em&gt;, and must be unlocked by &lt;em&gt;unlocking scripts&lt;/em&gt;.  A
transaction output is not unlocked unless an unlocking script is
provided such that the result of executing the unlocking script,
followed by executing the locking script, is a stack with value True on
top.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;OP_IF&lt;/code&gt; &lt;em&gt;statements&lt;/em&gt; &lt;code&gt;OP_ENDIF&lt;/code&gt; - If the top of the stack is &lt;strong&gt;1&lt;/strong&gt;, executes &lt;em&gt;statements&lt;/em&gt;.  Otherwise does nothing.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;OP_CHECKSIG&lt;/code&gt; - Pops two items from the stack, &lt;em&gt;publickey&lt;/em&gt; and &lt;em&gt;sig&lt;/em&gt;.
Verifies the entire transaction (known from node state, not the stack)
using the &lt;em&gt;publickey&lt;/em&gt; and &lt;em&gt;sig&lt;/em&gt;.  If the signature is valid, push &lt;strong&gt;1&lt;/strong&gt;;
otherwise, &lt;strong&gt;0&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;OP_1 OP_DUP OP_ADD OP_DUP OP_SUB OP_VERIFY&lt;/code&gt;
&lt;div class=&#34;gap&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;The most common locking script (send to public address):&lt;/p&gt;

&lt;p&gt;&lt;code&gt;OP_DUP&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;OP_HASH160&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;OP_DATA20&lt;/code&gt; &lt;em&gt;(bitcoin address)&lt;/em&gt;&lt;br /&gt;
&lt;code&gt;OP_EQUALVERIFY&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;OP_CHECKSIG&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;What must be on the stack for the locking script to succeed (end with &lt;strong&gt;1&lt;/strong&gt; on top of stack)?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;!-- page--&gt;

&lt;p&gt;&lt;code&gt;OP_HASH160&lt;/code&gt;&lt;br /&gt;
&lt;em&gt;20-byte hash&lt;/em&gt;&lt;br /&gt;
&lt;code&gt;OP_EQUAL&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;What must be on the stack for the locking script above (&amp;ldquo;Pay-to-Script-Hash&amp;rdquo;) to succeed?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;According to &lt;a href=&#34;http://www.quantabytes.com/articles/a-survey-of-bitcoin-transaction-types&#34;&gt;Most Popular Transaction
Scripts&lt;/a&gt;
(analysis of all transactions in first 290,000 blocks), the ninth most popular script is:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;OP_RETURN&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;OP_DATA_40&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;What must be on the stack for the &lt;code&gt;OP_RETURN OP_DATA_40&lt;/code&gt; locking script to succeed (end with
&lt;strong&gt;1&lt;/strong&gt; on top of stack)? (Trick question: what happens to the coin
protected by this locking script?)&lt;/p&gt;

&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;

&lt;h2 id=&#34;btcd-code:82758e0aba59693fe0fb1bf5353fa6c7&#34;&gt;BTCD Code&lt;/h2&gt;

&lt;p&gt;Type: &lt;a href=&#34;https://github.com/btcsuite/btcd/blob/c153596542b3d87dd774c29aa5be5117ac01a234/txscript/script.go#L206&#34;&gt;Script&lt;/a&gt; is the virtual machine the executes scripts (note that it has two Stacks)&lt;/p&gt;

&lt;p&gt;Execute a script: &lt;a href=&#34;https://github.com/btcsuite/btcd/blob/c153596542b3d87dd774c29aa5be5117ac01a234/txscript/script.go#L723&#34;&gt;Execute&lt;/a&gt;&lt;br /&gt;
Execute one instruction: &lt;a href=&#34;https://github.com/btcsuite/btcd/blob/c153596542b3d87dd774c29aa5be5117ac01a234/txscript/script.go#L782&#34;&gt;Step&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/btcsuite/btcd/blob/c153596542b3d87dd774c29aa5be5117ac01a234/txscript/opcode.go#L38&#34;&gt;Opcodes&lt;/a&gt;: &lt;a href=&#34;https://github.com/btcsuite/btcd/blob/c153596542b3d87dd774c29aa5be5117ac01a234/txscript/opcode.go#L971&#34;&gt;exec&lt;/a&gt; function executes one instruction&lt;/p&gt;

&lt;p&gt;Some interesting opcode implementations: &lt;a href=&#34;https://github.com/btcsuite/btcd/blob/c153596542b3d87dd774c29aa5be5117ac01a234/txscript/opcode.go#L1143&#34;&gt;OP_IF&lt;/a&gt;, &lt;a href=&#34;https://github.com/btcsuite/btcd/blob/c153596542b3d87dd774c29aa5be5117ac01a234/txscript/opcode.go#L1235&#34;&gt;OP_RETURN&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;bitcoin-core-code:82758e0aba59693fe0fb1bf5353fa6c7&#34;&gt;Bitcoin Core Code&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/bitcoin/bitcoin/blob/41e6e4caba9899ce7c165b0784461c55c867ee24/src/script/interpreter.cpp&#34;&gt;script/interpreter.cpp&lt;/a&gt;, &lt;a href=&#34;https://github.com/bitcoin/bitcoin/blob/41e6e4caba9899ce7c165b0784461c55c867ee24/src/script/interpreter.cpp#L524&#34;&gt;OP_DUP&lt;/a&gt;, &lt;a href=&#34;https://github.com/bitcoin/bitcoin/blob/41e6e4caba9899ce7c165b0784461c55c867ee24/src/script/interpreter.cpp#L752&#34;&gt;Crypto&lt;/a&gt;, &lt;a href=&#34;https://github.com/bitcoin/bitcoin/blob/41e6e4caba9899ce7c165b0784461c55c867ee24/src/script/interpreter.cpp#L785&#34;&gt;OP_CHECKSIG&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;links:82758e0aba59693fe0fb1bf5353fa6c7&#34;&gt;Links&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://www.crmarsh.com/script-playground/&#34;&gt;Script Playground&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Some interesting things you can do with bitcoin scripts:&lt;br /&gt;
&lt;a href=&#34;https://en.bitcoin.it/wiki/Contracts&#34;&gt;Contracts&lt;/a&gt; (see also Nick Szabo&amp;rsquo;s &lt;a href=&#34;http://szabo.best.vwh.net/formalize.html&#34;&gt;&lt;em&gt;Formalizing and Securing Relationships on Public Networks&lt;/em&gt;&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://eprint.iacr.org/2013/784&#34;&gt;Secure Multiparty Computations&lt;/a&gt; (to implement lotteries)&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;OP_RETURN&lt;/code&gt;/pasted script execution bug doesn&amp;rsquo;t even make this list of &lt;a href=&#34;http://www.coindesk.com/9-biggest-screwups-bitcoin-history/&#34;&gt;&lt;em&gt;The 9 Biggest Screwups in Bitcoin History&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;!-- [Block 71036](http://blockexplorer.com/rawblock/00000000000997f9fd2fe1ee376293ef8c42ad09193a5d2086dddf8e5c426b56)--&gt;
</description>
    </item>
    
    <item>
      <title>Class 14: FBI Visit</title>
      <link>http://bitcoin-class.org/classes/class14/</link>
      <pubDate>Wed, 14 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>http://bitcoin-class.org/classes/class14/</guid>
      <description>

&lt;h2 id=&#34;schedule:69e304a0e65e98722637abe379145c02&#34;&gt;Schedule&lt;/h2&gt;

&lt;p&gt;&lt;div class=&#34;todo&#34;&gt; &lt;strong&gt;Monday-Wednesday, October &lt;sup&gt;19&lt;/sup&gt;&amp;frasl;&lt;sub&gt;21&lt;/sub&gt;&lt;/strong&gt;: Midterm Exam.
Part of the midterm will be handed out in class on Monday, Oct 19. The
midterm will be in class on Wednesday, October 21.&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Today&amp;rsquo;s class was a visit from Special Agent Jeremy D&amp;rsquo;Errico, Special
Benjamin Blome, David Cochran, and Stuart VonCanon from the Federal
Bureau of Investigation (Richmond Division).&lt;/p&gt;

&lt;p&gt;For Problem Set 3, you will be analyzing the blockchain to understand
transactions involving bitcoin ransomware crimes.  Some links to
relevant posts and papers:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.secureworks.com/cyber-threat-intelligence/threats/cryptowall-ransomware/&#34;&gt;CryptoWall Ransomware&lt;/a&gt;,
Dell SecureWorks Counter Threat, August 2014.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.cylance.com/tearing-down-cryptowall&#34;&gt;Tearing Down
Cryptowall&lt;/a&gt;, Brian
Wallace, 4 November 2014.&lt;/p&gt;

&lt;p&gt;Amin Kharraz, William Robertson, Davide Balzarotti, Leyla Bilge, and
Engin Kirda.  &lt;a href=&#34;http://www.seclab.nu/static/publications/dimva2015ransomware.pdf&#34;&gt;&lt;em&gt;Cutting the Gordian Knot: A Look Under the Hood of
Ransomware
Attacks&lt;/em&gt;&lt;/a&gt;. DIMVA
2015.&lt;/p&gt;

&lt;p&gt;Shuang Hao, Kevin Borgolte, Nick Nikiforakis, Gianluca Stringhini,
Manuel Egele, Michael Eubanks, Brian Krebs, Giovanni Vigna. &lt;a href=&#34;https://www.cs.ucsb.edu/~vigna/publications/2015_CCS_ShippingMules.pdf&#34;&gt;&lt;em&gt;Drops for
Stuff: An Analysis of Reshipping Mule
Scams&lt;/em&gt;&lt;/a&gt;. ACM
Conference on Computer and Communications Security 2015.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Class 13: Law and Policy</title>
      <link>http://bitcoin-class.org/classes/class13/</link>
      <pubDate>Mon, 12 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>http://bitcoin-class.org/classes/class13/</guid>
      <description>

&lt;h2 id=&#34;schedule:af2ff3ef0db44829d3ff131eac0d7ec7&#34;&gt;Schedule&lt;/h2&gt;

&lt;p&gt;&lt;div class=&#34;todo&#34;&gt; &lt;strong&gt;Monday-Wednesday, October &lt;sup&gt;19&lt;/sup&gt;&amp;frasl;&lt;sub&gt;21&lt;/sub&gt;&lt;/strong&gt;: Midterm Exam.
Part of the midterm will be handed out in class on Monday, Oct 19. The
midterm will be in class on Wednesday, October 21.&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Today&amp;rsquo;s class was a visit from Tom Dukes on law and policy related to cryptocurrencies.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.law.virginia.edu/lawweb/faculty.nsf/FHPbI/1378405&#34;&gt;Tom Duke&amp;rsquo;s Bio&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Congressional Research Service report he mentioned: &lt;a href=&#34;https://www.fas.org/sgp/crs/misc/R43339.pdf&#34;&gt;&lt;em&gt;Bitcoin:
Questions, Answers, and Analysis of Legal
Issues&lt;/em&gt;&lt;/a&gt;, 14 August
2015. This provides a good summary of US laws and regulations that apply
to bitcoin, and why Congress is interested in it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Class 12: Script</title>
      <link>http://bitcoin-class.org/classes/class12/</link>
      <pubDate>Wed, 07 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>http://bitcoin-class.org/classes/class12/</guid>
      <description>

&lt;h2 id=&#34;schedule:bc216d98f3ca2300699af2d41b8a2a45&#34;&gt;Schedule&lt;/h2&gt;

&lt;p&gt;&lt;div class=&#34;todo&#34;&gt;
&lt;strong&gt;Read&lt;/strong&gt;: &lt;a href=&#34;http://bitcoin-class.org/docs/princeton-book/chapter_3.pdf&#34;&gt;&lt;em&gt;Chapter 3: Mechanics of Bitcoin&lt;/em&gt;&lt;/a&gt;, from
Arvind Narayanan, Joseph Bonneau, Edward Felten, Andrew Miller, Steven
Goldfeder. &lt;a href=&#34;https://piazza.com/princeton/spring2015/btctech/resources&#34;&gt;&lt;em&gt;Bitcoin and Cryptocurrency
Technologies&lt;/em&gt;&lt;/a&gt;.
Sections 3.2 and 3.3 are about bitcoin scripts, and should be read
carefully.  (You should read the whole chapter, but those sections are
most relevant to today&amp;rsquo;s class.)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Friday, October 9&lt;/strong&gt;: Problem Set 2 (8:29pm).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Monday, October 19&lt;/strong&gt;: Midterm Exam&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/key/aQYiH6zGCIgxbO&#34; width=&#34;625&#34; height=&#34;400&#34; frameborder=&#34;2&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34;&gt; &lt;/iframe&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;caption&#34;&gt;
Sorry, ink markings were lost from today.  &lt;a href=&#34;http://bitcoin-class.org/classes/class12-post.pptx&#34;&gt;Download the slides&lt;/a&gt;
   &lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;h1 id=&#34;hash-collisions:bc216d98f3ca2300699af2d41b8a2a45&#34;&gt;Hash Collisions!&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Computing a bitcoin address:&lt;/strong&gt; (&lt;a href=&#34;https://en.bitcoin.it/wiki/Technical_background_of_version_1_Bitcoin_addresses&#34;&gt;bitcoinwiki&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Private Key: pick a random number, &lt;em&gt;k&lt;/em&gt;.&lt;br /&gt;
Public Key: compute (&lt;em&gt;Ux&lt;/em&gt;, &lt;em&gt;Uy&lt;/em&gt;) = &lt;em&gt;Gk&lt;/em&gt;
&lt;div class=&#34;indented&#34;&gt;(elliptic curve multiplication, &lt;em&gt;G&lt;/em&gt; is specified generator point)&lt;/div&gt;
&lt;em&gt;Ux&lt;/em&gt; and &lt;em&gt;Uy&lt;/em&gt; are 32 bytes each.&lt;/p&gt;

&lt;p&gt;The bitcoin address is (|| is bitstring concatenation):&lt;br /&gt;
    &lt;div class=&#34;indented&#34;&gt;
    raw = &lt;code&gt;1&lt;/code&gt; || RIPEMD160(SHA256(&lt;em&gt;Ux&lt;/em&gt; || &lt;em&gt;Uy&lt;/em&gt;))&lt;br /&gt;
         &lt;div class=&#34;indented&#34;&gt;&lt;em&gt;RIPEMD output is 160 bits (20 bytes) + one byte for &lt;code&gt;1&lt;/code&gt;&lt;/em&gt;&lt;/div&gt;
    checksum = first 4 bytes of SHA256(SHA256(raw))  &lt;div class=&#34;indented&#34;&gt;&lt;em&gt;Compute a checksum using SHA256 double hash&lt;/em&gt;&lt;/div&gt;
    address = Base58Check(raw || checksum)  &lt;div class=&#34;indented&#34;&gt;&lt;em&gt;convert to printable, unambiguous characters&lt;/em&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;How important is pre-image resistance for the security of bitcoin addresses?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;How important is collision resistance for the security of bitcoin addresses?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;How important is pre-image resistance for the integrity of bitcoin&amp;rsquo;s proof-of-work?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;How important is collision resistance for the integrity of bitcoin&amp;rsquo;s proof-of-work?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Xiaoyun Wang and Hongbo Yu, &lt;a href=&#34;http://www.bitcoin-class.org/docs/hashcollisions.pdf&#34;&gt;&lt;em&gt;How to Break MD5 and Other Hash Functions&lt;/em&gt;&lt;/a&gt;, EuroCrypt 2005.&lt;/p&gt;

&lt;h1 id=&#34;bitcoin-script:bc216d98f3ca2300699af2d41b8a2a45&#34;&gt;Bitcoin Script&lt;/h1&gt;

&lt;p&gt;Transaction outputs in bitcoin are protected by &lt;em&gt;locking scripts&lt;/em&gt;, and
must be unlocked by &lt;em&gt;unlocking scripts&lt;/em&gt;.  The scripts are written in a
simple (compared to, say, the Java Virtual Machine language, but quite
complex and poorly specified for what one might expect would be needed
for bitcoin transactions) stack-based language.  A transaction output is
not unlocked unless an unlocking script is provided such that the result
of executing the unlocking script, followed by executing the locking
script, is a stack with value True on top (and no invalid transaction
results during the execution).&lt;/p&gt;

&lt;p&gt;Some script instructions:&lt;/p&gt;

&lt;p&gt;&lt;table cellpadding=5&gt;
   &lt;tr&gt;
   &lt;td align=&#34;center&#34;&gt;&lt;b&gt;Opcode&lt;/b&gt;&lt;/td&gt;&lt;td align=&#34;center&#34;&gt;&lt;b&gt;Input&lt;/b&gt;&lt;/td&gt;&lt;td align=&#34;center&#34;&gt;&lt;b&gt;Output&lt;/b&gt;&lt;/td&gt;&lt;td align=&#34;center&#34;&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
   &lt;tr&gt;&lt;td&gt;&lt;code&gt;OP_1&lt;/code&gt;&lt;/td&gt;&lt;td&gt; - &lt;/td&gt;&lt;td&gt; &lt;strong&gt;1&lt;/strong&gt; &lt;/td&gt;&lt;td&gt; Pushes a &lt;strong&gt;1&lt;/strong&gt; (True) on the stack &lt;/td&gt;&lt;/tr&gt;
   &lt;tr&gt;&lt;td&gt;&lt;code&gt;OP_DUP&lt;/code&gt;&lt;/td&gt;&lt;td&gt; &lt;em&gt;a&lt;/em&gt; &lt;/td&gt;&lt;td&gt; &lt;em&gt;a&lt;/em&gt; &lt;em&gt;a&lt;/em&gt; &lt;/td&gt;&lt;td&gt; Duplicates the top element of the stack &lt;/td&gt;&lt;/tr&gt;
   &lt;tr&gt;&lt;td&gt;&lt;code&gt;OP_ADD&lt;/code&gt;&lt;/td&gt;&lt;td&gt; &lt;em&gt;a&lt;/em&gt; &lt;em&gt;b&lt;/em&gt; &lt;/td&gt;&lt;td&gt; (&lt;em&gt;a&lt;/em&gt;+&lt;em&gt;b&lt;/em&gt;) &lt;/td&gt;&lt;td&gt; Pushes the sum of the top two elements. &lt;/td&gt;&lt;/tr&gt;
   &lt;tr&gt;&lt;td&gt;&lt;code&gt;OP_EQUAL&lt;/code&gt;&lt;/td&gt;&lt;td&gt; &lt;em&gt;a&lt;/em&gt; &lt;em&gt;b&lt;/em&gt; &lt;/td&gt;&lt;td&gt; &lt;strong&gt;0&lt;/strong&gt; or &lt;strong&gt;1&lt;/strong&gt; &lt;/td&gt;&lt;td&gt; Pushes &lt;strong&gt;1&lt;/strong&gt; if the top two elements are exactly equal, otherwise &lt;strong&gt;0&lt;/strong&gt;. &lt;/td&gt;&lt;/tr&gt;
   &lt;tr&gt;&lt;td&gt;&lt;code&gt;OP_VERIFY&lt;/code&gt; &lt;/td&gt;&lt;td&gt; &lt;em&gt;a&lt;/em&gt; &lt;/td&gt;&lt;td&gt; - &lt;/td&gt;&lt;td&gt; If &lt;em&gt;a&lt;/em&gt; is not &lt;strong&gt;True&lt;/strong&gt; (&lt;strong&gt;1&lt;/strong&gt;), terminates as Invalid. &lt;/td&gt;&lt;/tr&gt;
   &lt;tr&gt;&lt;td&gt;&lt;code&gt;OP_RETURN&lt;/code&gt;&lt;/td&gt;&lt;td&gt; - &lt;/td&gt;&lt;td&gt; - &lt;/td&gt;&lt;td&gt; Terminates as Invalid. &lt;/td&gt;&lt;/tr&gt;
   &lt;tr&gt;&lt;td&gt;&lt;code&gt;OP_EQUALVERIFY&lt;/code&gt; &lt;/td&gt;&lt;td&gt; &lt;em&gt;a&lt;/em&gt; &lt;em&gt;b&lt;/em&gt; &lt;/td&gt;&lt;td&gt; - &lt;/td&gt;&lt;td&gt; If &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; are not equal, terminates as Invalid. &lt;/td&gt;&lt;/tr&gt;
   &lt;tr&gt;&lt;td&gt;&lt;code&gt;OP_HASH160&lt;/code&gt; &lt;/td&gt;&lt;td&gt; &lt;em&gt;a&lt;/em&gt; &lt;/td&gt;&lt;td&gt; H(&lt;em&gt;a&lt;/em&gt;) &lt;/td&gt;&lt;td&gt; Pushes bitcoin address, RIPEMD160(SHA256(&lt;em&gt;a&lt;/em&gt;)). &lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/p&gt;

&lt;p&gt;Is the bitcoin scripting language Turing-complete?
&lt;div class=&#34;gap&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;If you are not clear on what Turing-complete means (and why real
machines are not ideal), see &lt;a href=&#34;http://www.dori-mic.org&#34;&gt;&lt;em&gt;Dori-Mic and the Universal
Machine!&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Class 11: More Mining</title>
      <link>http://bitcoin-class.org/classes/class11/</link>
      <pubDate>Wed, 30 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://bitcoin-class.org/classes/class11/</guid>
      <description>

&lt;h2 id=&#34;schedule:af81afa25b288e26509ba0728268a3b7&#34;&gt;Schedule&lt;/h2&gt;

&lt;p&gt;&lt;div class=&#34;todo&#34;&gt;
&lt;strong&gt;Wednesday, September 30&lt;/strong&gt;: Checkup 2 revisions (if desired), due at the beginning of class or end of office hours today.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Friday, October 9&lt;/strong&gt;: Problem Set 2 (moved from original deadline of
  October 2).  Problem Set 2 will be posted by tomorrow.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Monday, October 19&lt;/strong&gt;: Midterm Exam&lt;/p&gt;

&lt;p&gt;No classes Monday, October 5!
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/key/31bDBGxrcPo6b9&#34; width=&#34;625&#34; height=&#34;400&#34; frameborder=&#34;2&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34;&gt; &lt;/iframe&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;caption&#34;&gt;
Note: ink markings may not appear in the
embedded viewer.  To see them, &lt;a href=&#34;http://bitcoin-class.org/classes/class11.pptx&#34;&gt;download the slides&lt;/a&gt;.
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;/center&gt;&lt;/p&gt;

&lt;h1 id=&#34;notes:af81afa25b288e26509ba0728268a3b7&#34;&gt;Notes&lt;/h1&gt;

&lt;p&gt;If we have 20% of the network hashing power, calculate the proportion of blocks we will win if we mine selfishly. Do we come out ahead or behind?&lt;/p&gt;

&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;

&lt;p&gt;Why does our formular for E not work for alpha greater than a half?&lt;/p&gt;

&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;

&lt;p&gt;Compute the constant on slide 29, &amp;ldquo;Expected share reward&amp;rdquo;. You may have to look up the Taylor&amp;rsquo;s expansion series for natural logarithm.&lt;/p&gt;

&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;

&lt;!--page--&gt;

&lt;p&gt;Does mining in a pool increase your reward or decrease it? Explain.&lt;/p&gt;

&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;

&lt;p&gt;If a pool is paying out proportionally, and you are profiting by pool hopping in and out of it, is somebody else making a loss? Who and how?&lt;/p&gt;

&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Class 10: Subverting Bitcoin</title>
      <link>http://bitcoin-class.org/classes/class10/</link>
      <pubDate>Mon, 28 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://bitcoin-class.org/classes/class10/</guid>
      <description>

&lt;h2 id=&#34;schedule:cefb84ebc6e45e7105a37c4f4d413033&#34;&gt;Schedule&lt;/h2&gt;

&lt;p&gt;&lt;div class=&#34;todo&#34;&gt;
&lt;strong&gt;Wednesday, September 30&lt;/strong&gt;: Checkup 2 revisions (if desired), due at the beginning of class.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Friday, October 9&lt;/strong&gt;: Problem Set 2 (moved from original deadline of October 2).  Problem Set 2 will be posted later.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Monday, October 19&lt;/strong&gt;: Midterm Exam
   &lt;/div&gt;&lt;/p&gt;

&lt;h1 id=&#34;checkup-2:cefb84ebc6e45e7105a37c4f4d413033&#34;&gt;Checkup 2&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://bitcoin-class.org/checkup2.pdf&#34;&gt;Checkup 2 (PDF)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/key/tLGdRxu6IVVzni&#34; width=&#34;625&#34; height=&#34;400&#34; frameborder=&#34;2&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34;&gt; &lt;/iframe&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;caption&#34;&gt;
Note: ink markings may not appear in the
embedded viewer.  To see them, &lt;a href=&#34;http://bitcoin-class.org/classes/class10.pptx&#34;&gt;download the slides&lt;/a&gt;.
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;/center&gt;&lt;/p&gt;

&lt;h1 id=&#34;notes:cefb84ebc6e45e7105a37c4f4d413033&#34;&gt;Notes&lt;/h1&gt;

&lt;p&gt;Why would a hypothetical cryptocurrency without miners not work? What is the
essential service rendered by a miner?&lt;/p&gt;

&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;

&lt;p&gt;How does Bitcoin handle forks? What criteria does it use to decide the branch
to converge on?&lt;/p&gt;

&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;

&lt;!--page--&gt;

&lt;p&gt;What is a Nash Equilibrium in a game? What is the equilibrium strategy in
a game of rock-paper-scissors?&lt;/p&gt;

&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;

&lt;p&gt;What would happen to the bitcoin currency if everyone started mining selfishly?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Class 09: Economics of Mining</title>
      <link>http://bitcoin-class.org/classes/class9/</link>
      <pubDate>Wed, 23 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://bitcoin-class.org/classes/class9/</guid>
      <description>

&lt;h2 id=&#34;schedule:b1685b9d514e4fd02cc72721228d457c&#34;&gt;Schedule&lt;/h2&gt;

&lt;p&gt;&lt;div class=&#34;todo&#34;&gt;
&lt;strong&gt;Wednesday, September 23&lt;/strong&gt;: Checkup 2 (was originally scheduled for Monday, September 21).  See previous class notes for details on what is covered.&lt;br /&gt;
&lt;strong&gt;Friday, October 9&lt;/strong&gt;: Problem Set 2 (moved from original deadline of October 2).  Problem Set 2 will be posted later.
&lt;strong&gt;Monday, October 19&lt;/strong&gt;: Midterm Exam
   &lt;/div&gt;&lt;/p&gt;

&lt;h1 id=&#34;checkup-2:b1685b9d514e4fd02cc72721228d457c&#34;&gt;Checkup 2&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://bitcoin-class.org/checkup2.pdf&#34;&gt;Checkup 2 (PDF)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As was suggested in class today, there won&amp;rsquo;t be an immediate opportunity
to submit revisions for this (like there was for Checkup 1), but there
will be some opportunity to improve your checkup result given in
Monday&amp;rsquo;s class.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/key/sTwMIV59OWvurX&#34;
width=&#34;625&#34; height=&#34;400&#34; frameborder=&#34;2&#34; marginwidth=&#34;0&#34;
marginheight=&#34;0&#34; scrolling=&#34;no&#34;&gt;&lt;/iframe&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;caption&#34;&gt;
Note: ink markings may not appear in the
embedded viewer.  To see them, &lt;a href=&#34;http://bitcoin-class.org/classes/class9-post.pptx&#34;&gt;download the slides&lt;/a&gt;.
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;/center&gt;&lt;/p&gt;

&lt;h1 id=&#34;energy:b1685b9d514e4fd02cc72721228d457c&#34;&gt;Energy&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://en.bitcoin.it/wiki/Mining_hardware_comparison&#34;&gt;Mining Hardware&lt;/a&gt;
- current ASIC miners achive &amp;gt;5 Billion hashes per seconds and over 1500
Million hashes per Joule (the energy required to lift an apple one
meter).&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://bitcointalk.org/index.php?topic=1152746.0&#34;&gt;Antminer S5+&lt;/a&gt;
(here&amp;rsquo;s the specs on the mining hardware we looked at in class)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.thecoinsman.com/2014/08/bitcoin/inside-chinese-bitcoin-mine/&#34;&gt;&lt;em&gt;Inside a Chinese Bitcoin Mine&lt;/em&gt;&lt;/a&gt;, The Coinsman, 11 August 2014.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The first thing you notice as you approach the warehouse is the noise. It begins as soon as you step out of the car, at which point it sounds like massive swarm of angry bees droning away somewhere off in the distance. It becomes louder and louder the closer you get to the building, and as you step through the doors it becomes a deafening and steady roar&amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Our nearest nuclear plant, the &lt;a href=&#34;https://www.dom.com/corporate/what-we-do/electricity/generation/nuclear/north-anna-power-station&#34;&gt;North Anna Power
Station&lt;/a&gt;
(Lake Anna) generates 1892 MW, &amp;ldquo;enough to power 450,000 homes&amp;rdquo; or about
9x the amount needed to power the current bitcoin network (only counting
the miners themselves; additional power needed for cooling, etc.)&lt;/p&gt;

&lt;p&gt;Is it financially lucrative to mine bitcoin in your residencev?&lt;/p&gt;

&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;

&lt;p&gt;(&lt;strong&gt;Caveat:&lt;/strong&gt; despite the very rough estimate from class today, we are
not recommending anyone invest in bitcoin mining!)&lt;/p&gt;

&lt;p&gt;How does the energy use of bitcoin compare to what is used by the
current financial infrastructure for comparable service?  (This is a
very difficult question to answer, would be a good project idea, not
something to answer in the blank below!)&lt;/p&gt;

&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Class 08: Mining</title>
      <link>http://bitcoin-class.org/classes/class8/</link>
      <pubDate>Mon, 21 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://bitcoin-class.org/classes/class8/</guid>
      <description>

&lt;h2 id=&#34;schedule:3a7d0da174b09b839e2f33e1cfd8fab3&#34;&gt;Schedule&lt;/h2&gt;

&lt;p&gt;&lt;div class=&#34;todo&#34;&gt;
&lt;strong&gt;Wednesday, September 23&lt;/strong&gt;: Checkup 2 (was originally scheduled for Monday, September 21).  See previous class notes for details on what is covered.&lt;br /&gt;
&lt;strong&gt;Friday, October 9&lt;/strong&gt;: Problem Set 2 (moved from original deadline of October 2).  Problem Set 2 will be posted later this week.&lt;br /&gt;
&lt;strong&gt;Monday, October 19&lt;/strong&gt;: Midterm Exam
   &lt;/div&gt;&lt;/p&gt;

&lt;h2 id=&#34;reminders:3a7d0da174b09b839e2f33e1cfd8fab3&#34;&gt;Reminders&lt;/h2&gt;

&lt;p&gt;You can &lt;a href=&#34;https://www.google.com/calendar/ical/rmjagdrnmu3a9h2q5199lg4t28%40group.calendar.google.com/public/basic.ics&#34;&gt;subscribe to the course
calendar&lt;/a&gt;.
This has updated information on deadlines and office hours.&lt;/p&gt;

&lt;p&gt;If you want to receive course website updates by email, you can
subscribe to the RSS feed using a RSS reader or an emailing service like
&lt;a href=&#34;https://www.feedmyinbox.com/&#34;&gt;feedmyinbox.com&lt;/a&gt; or
&lt;a href=&#34;http://blogtrottr.com/&#34;&gt;Blogtrottr&lt;/a&gt;.  The feed address is
&lt;a href=&#34;http://bitcoin-class.org/index.xml&#34;&gt;http://bitcoin-class.org/index.xml&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We generally will avoid sending out emails to the class, and will assume
you are observing the website closely.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/key/ir3gwqoaGyncK4&#34;
width=&#34;625&#34; height=&#34;400&#34; frameborder=&#34;2&#34; marginwidth=&#34;0&#34;
marginheight=&#34;0&#34; scrolling=&#34;no&#34;&gt;&lt;/iframe&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;caption&#34;&gt;
Note: ink markings may not appear in the
embedded viewer.  To see them, &lt;a href=&#34;http://bitcoin-class.org/classes/class8-post.pptx&#34;&gt;download the slides&lt;/a&gt;.
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;/center&gt;&lt;/p&gt;

&lt;h1 id=&#34;exploring-blocks:3a7d0da174b09b839e2f33e1cfd8fab3&#34;&gt;Exploring Blocks&lt;/h1&gt;

&lt;table&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;Label&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Bytes&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;version&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;Block version information&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;prev_block&lt;/td&gt;&lt;td&gt;32&lt;/td&gt;&lt;td&gt;Hash of the previous block&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;merkle_root&lt;/td&gt;&lt;td&gt;32&lt;/td&gt;&lt;td&gt;Hash of Merkle tree of all transactions&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;timestamp&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;When block was created (overflows in 2106)&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;bits&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;Difficulty target used for this block&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;nonce&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;Nonce found to generate this block&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;h1 id=&#34;merkle-trees:3a7d0da174b09b839e2f33e1cfd8fab3&#34;&gt;Merkle Trees&lt;/h1&gt;

&lt;p&gt;Ralph Merkle, &lt;a href=&#34;http://merkle.com/1974/&#34;&gt;&lt;em&gt;Publishing a New Idea&lt;/em&gt;&lt;/a&gt;.
Includes his &lt;a href=&#34;http://merkle.com/1974/FirstCS244projectProposal.pdf&#34;&gt;cs244 project
proposal&lt;/a&gt;
(&amp;ldquo;Discussion: No, I am not joking.&amp;ldquo;) and &lt;a href=&#34;http://merkle.com/1974/ExpertLetter.pdf&#34;&gt;ACM rejection
letter&lt;/a&gt; (&amp;ldquo;I am sorry to have to
inform you that the paper is not in the main stream of present
cryptography thinking and I would not recommend that it be
published&amp;hellip;&amp;ldquo;).&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/btcsuite/btcd/blob/master/blockchain/merkle.go&#34;&gt;https://github.com/btcsuite/btcd/blob/master/blockchain/merkle.go&lt;/a&gt; (some comments removed)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// HashMerkleBranches takes two hashes, treated as the left and right tree
// nodes, and returns the hash of their concatenation. 
func HashMerkleBranches(left *btcwire.ShaHash, right *btcwire.ShaHash) *btcwire.ShaHash {
   var sha [btcwire.HashSize * 2]byte
   copy(sha[:btcwire.HashSize], left.Bytes())
   copy(sha[btcwire.HashSize:], right.Bytes())
   newSha, _ := btcwire.NewShaHash(btcwire.DoubleSha256(sha[:]))
   return newSha
}

func BuildMerkleTreeStore(transactions []*btcutil.Tx) []*btcwire.ShaHash {
    nextPoT := nextPowerOfTwo(len(transactions))
    arraySize := nextPoT*2 - 1
    merkles := make([]*btcwire.ShaHash, arraySize)

    // Create the base transaction shas and populate the array with them.
    for i, tx := range transactions { merkles[i] = tx.Sha() }

    // Start the array offset after the last transaction and adjusted to the
    // next power of two.
    offset := nextPoT
    for i := 0; i &amp;lt; arraySize-1; i += 2 {
        switch {
           case merkles[i] == nil: 
              merkles[offset] = nil

           case merkles[i+1] == nil:
              newSha := HashMerkleBranches(merkles[i], merkles[i])
              merkles[offset] = newSha
       
           default:
              newSha := HashMerkleBranches(merkles[i], merkles[i+1])
              merkles[offset] = newSha
       }
       offset++
    }
    return merkles
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://bitcoin-class.org/classes/merkle.png&#34;&gt;&lt;img src=&#34;http://bitcoin-class.org/classes/merkle.png&#34; width=600&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What is needed to verify &lt;span class=&#34;math&#34;&gt;T&lt;sub&gt;2&lt;/sub&gt;&lt;/span&gt; in &lt;span class=&#34;math&#34;&gt;H&lt;sub&gt;root&lt;/sub&gt;&lt;/span&gt;?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;What must be recomputed if &lt;span class=&#34;math&#34;&gt;T&lt;sub&gt;3&lt;/sub&gt;&lt;/span&gt; is replaced?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;What must be computed if a new node, &lt;span class=&#34;math&#34;&gt;T&lt;sub&gt;5&lt;/sub&gt;&lt;/span&gt;, is added?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;How many SHA-256 hashes must be computed to verify &lt;a href=&#34;https://blockexplorer.com/block/00000000000000000a02a2bf9d7b366e226160b8412830e6d72061ea7712d970&#34;&gt;Block 375474&lt;/a&gt;?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;h1 id=&#34;mining-cost:3a7d0da174b09b839e2f33e1cfd8fab3&#34;&gt;Mining Cost&lt;/h1&gt;

&lt;p&gt;The measured time to compute one SHA-256 hash on my EC2 node (2.5 GHz
processor) is 750 ns.  Approximately &lt;em&gt;how many instructions execute&lt;/em&gt; to
compute on SHA-256 hash?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Assumption.&lt;/strong&gt; SHA-256 produces a uniform random output.  (We know this
  is not really true, but it is a reasonable approximation, and
  necessary for the analysis.)  So, we can model SHA-256 on any (new)
  input &lt;span class=&#34;math&#34;&gt;&lt;em&gt;x&lt;/em&gt;&lt;/span&gt; as drawing randomly from 2&lt;sup&gt;256&lt;/sup&gt; possible outputs:&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SHA-256(&lt;span class=&#34;math&#34;&gt;&lt;em&gt;x&lt;/em&gt;&lt;/span&gt;) &amp;larr; [0, 2&lt;sup&gt;256&lt;/sup&gt;)&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ Target = \frac{T_{max}}{Difficulty}$&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;$ T_{max} \approx 2^{224}$&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://bitcoinwisdom.com/bitcoin/difficulty&#34;&gt;Current Bitcoin Difficulty&lt;/a&gt; = 59,335,351,234&lt;/p&gt;

&lt;h1 id=&#34;energy:3a7d0da174b09b839e2f33e1cfd8fab3&#34;&gt;Energy&lt;/h1&gt;

&lt;p&gt;Why is energy/hash so much less for custom ASICs?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;In an ASIC, it is possible to build an XOR using 4 transistors.  How
many transistors have to flip to do an XOR on a general purpose
processor like an Intel i7?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Class 07: The Blockchain</title>
      <link>http://bitcoin-class.org/classes/class7/</link>
      <pubDate>Wed, 16 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://bitcoin-class.org/classes/class7/</guid>
      <description>

&lt;h2 id=&#34;schedule:3a08b95a8ad598832d09afa687b9b147&#34;&gt;Schedule&lt;/h2&gt;

&lt;p&gt;&lt;div class=&#34;todo&#34;&gt;
&lt;strong&gt;Wednesday, September 23&lt;/strong&gt;: Checkup 2 (was originally scheduled for Monday, September 21)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Readings&lt;/strong&gt; (should be completed by Monday, September 21 at the latest; covered by Checkup 2):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Satoshi Nakamoto, &lt;a href=&#34;https://bitcoin.org/bitcoin.pdf&#34;&gt;&lt;em&gt;Bitcoin: A Peer-to-Peer Electronic Cash
System&lt;/em&gt;&lt;/a&gt;, 2008.  The is the original
bitcoin paper, which is quite readable and historically interesting.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/aantonop/bitcoinbook/blob/develop/ch06.asciidoc&#34;&gt;&lt;em&gt;Chapter 6: The Bitcoin
Network&lt;/em&gt;&lt;/a&gt;
and &lt;a href=&#34;https://github.com/aantonop/bitcoinbook/blob/develop/ch07.asciidoc&#34;&gt;&lt;em&gt;Chapter 7: The
Blockchain&lt;/em&gt;&lt;/a&gt;
from Andreas Antonopoulos&amp;rsquo; book.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://bitcoin-class.org/docs/princeton-book/chapter_2.pdf&#34;&gt;&lt;em&gt;Chapter 2: How Bitcoin Achieves
Decentralization&lt;/em&gt;&lt;/a&gt;
and &lt;a href=&#34;http://bitcoin-class.org/docs/princeton-book/chapter_5.pdf&#34;&gt;&lt;em&gt;Chapter 5: Bitcoin
Mining&lt;/em&gt;&lt;/a&gt;
from Arvind Narayanan, Joseph Bonneau, Edward Felten, Andrew Miller,
Steven Goldfeder. &lt;a href=&#34;https://piazza.com/princeton/spring2015/btctech/resources&#34;&gt;&lt;em&gt;Bitcoin and Cryptocurrency
Technologies&lt;/em&gt;&lt;/a&gt;.
&lt;/div&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;center&gt;
&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/key/uCjusmzjkpfLzr&#34;
width=&#34;625&#34; height=&#34;400&#34; frameborder=&#34;2&#34; marginwidth=&#34;0&#34;
marginheight=&#34;0&#34; scrolling=&#34;no&#34;&gt;&lt;/iframe&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;caption&#34;&gt;
Note: ink markings may not appear in the
embedded viewer.  To see them, &lt;a href=&#34;http://bitcoin-class.org/classes/class7-post.pptx&#34;&gt;download the slides&lt;/a&gt;.
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;/center&gt;&lt;/p&gt;

&lt;h1 id=&#34;blockchain-in-the-news:3a08b95a8ad598832d09afa687b9b147&#34;&gt;Blockchain in the News&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://www.ft.com/cms/s/0/f358ed6c-5ae0-11e5-9846-de406ccb37f2.html&#34;&gt;&lt;em&gt;Blockchain initiative backed by 9 large investment banks&lt;/em&gt;&lt;/a&gt;, Financial Times, 15 Sept 2015.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://recode.net/2015/09/15/nine-of-the-worlds-biggest-banks-form-blockchain-partnership/&#34;&gt;&lt;em&gt;Nine of the World’s Biggest Banks Form Blockchain Partnership&lt;/em&gt;&lt;/a&gt;, Re/Code, 15 Sept 2015.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.forbes.com/sites/mikemontgomery/2015/09/15/bitcoin-is-only-the-beginning-for-blockchain-technology/&#34;&gt;&lt;em&gt;Bitcoin Is Only The Beginning For Blockchain Technology&lt;/em&gt;&lt;/a&gt;, Forbes, 15 Sept 2015.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.forbes.com/sites/laurashin/2015/09/09/bitcoins-shared-ledger-technology-moneys-new-operating-system/&#34;&gt;&lt;em&gt;Bitcoin&amp;rsquo;s Shared Ledger Technology: Money&amp;rsquo;s New Operating System&lt;/em&gt;&lt;/a&gt;, Forbes, 9 Sept 2015.&lt;/p&gt;

&lt;h1 id=&#34;trust:3a08b95a8ad598832d09afa687b9b147&#34;&gt;Trust&lt;/h1&gt;

&lt;p&gt;What are valid sources of &lt;em&gt;trust&lt;/em&gt;?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;What are potentially misleading sources of &lt;em&gt;trust&lt;/em&gt;?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;What mechanisms have humans evolved or constructed to enhance trust among strangers?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;h1 id=&#34;distributed-consensus:3a08b95a8ad598832d09afa687b9b147&#34;&gt;Distributed Consensus&lt;/h1&gt;

&lt;p&gt;How well does the 2-out-of-3 network consensus public ledger protocol work?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;h1 id=&#34;proof-of-work:3a08b95a8ad598832d09afa687b9b147&#34;&gt;Proof-of-Work&lt;/h1&gt;

&lt;p&gt;Cynthia Dwork and Moni Naor.  &lt;a href=&#34;http://bitcoin-class.org/0/classes/class6/pvp.pdf&#34;&gt;&lt;em&gt;Pricing via Processing or Combatting Junk Mail&lt;/em&gt;&lt;/a&gt;, CRYPTO 1992.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing Function&lt;/strong&gt;: (&lt;span class=&#34;math&#34;&gt;&lt;em&gt;f&lt;/em&gt;&lt;/span&gt;)
- moderately easy to compute
- cannot be amortized
- computing &lt;span class=&#34;math&#34;&gt;&lt;em&gt;f&lt;/em&gt;(&lt;em&gt;m&lt;/em&gt;&lt;sub&gt;1&lt;/sub&gt;), &amp;hellip;, &lt;em&gt;f&lt;/em&gt;(&lt;em&gt;m&lt;/em&gt;&lt;sub&gt;l&lt;/sub&gt;)&lt;/span&gt; costs &lt;span class=&#34;math&#34;&gt;&lt;em&gt;l&lt;/em&gt;&lt;/span&gt; times as much as computing &lt;span class=&#34;math&#34;&gt;&lt;em&gt;f&lt;/em&gt;(&lt;em&gt;m&lt;/em&gt;&lt;sub&gt;i&lt;sub&gt;)&lt;/span&gt;.
- easily verified: given &lt;span class=&#34;math&#34;&gt;&lt;em&gt;x&lt;/em&gt;&lt;/span&gt;, &lt;span class=&#34;math&#34;&gt;&lt;em&gt;y&lt;/em&gt;&lt;/span&gt; easy to check &lt;span class=&#34;math&#34;&gt;&lt;em&gt;y&lt;/em&gt; = &lt;em&gt;f&lt;/em&gt;(&lt;em&gt;x&lt;/em&gt;)&lt;/span&gt;.&lt;/p&gt;

&lt;p&gt;Adam Back. &lt;a href=&#34;http://www.hashcash.org/papers/announce.txt&#34;&gt;&lt;em&gt;Hash Cash Postage Implementation&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Interactive Hashcash&lt;/strong&gt;:&lt;br /&gt;
1. Sender to Receiver: &lt;code&gt;Hello&lt;/code&gt;&lt;br /&gt;
2. Receiver to Sender: &lt;span class=&#34;math&#34;&gt;&lt;em&gt;r&lt;/em&gt;&lt;/span&gt; (random nonce)&lt;br /&gt;
3. Sender to Receiver: &lt;span class=&#34;math&#34;&gt;&lt;em&gt;x&lt;/em&gt;&lt;/span&gt;, &lt;code&gt;Mail&lt;/code&gt; where &lt;span class=&#34;math&#34;&gt;&lt;em&gt;x&lt;/em&gt; = &lt;em&gt;f&lt;/em&gt;(&lt;em&gt;r&lt;/em&gt;)&lt;/span&gt;.&lt;br /&gt;
4. Receiver verifies &lt;span class=&#34;math&#34;&gt;&lt;em&gt;x&lt;/em&gt; = &lt;em&gt;f&lt;/em&gt;(&lt;em&gt;r&lt;/em&gt;)&lt;/span&gt;.&lt;/p&gt;

&lt;p&gt;How well does this protocol work for sending mail?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;How can we make this protocol non-interactive?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;h1 id=&#34;bitcoin-mining:3a08b95a8ad598832d09afa687b9b147&#34;&gt;Bitcoin Mining&lt;/h1&gt;

&lt;p&gt;Proof-of-work: Find an &lt;span class=&#34;math&#34;&gt;&lt;em&gt;x&lt;/em&gt;&lt;/span&gt; such that: SHA-256(SHA-256(&lt;span class=&#34;math&#34;&gt;&lt;em&gt;r&lt;/em&gt;&lt;/span&gt; + &lt;span class=&#34;math&#34;&gt;&lt;em&gt;x&lt;/em&gt;&lt;/span&gt;)) &amp;lt; &lt;span class=&#34;math&#34;&gt;&lt;em&gt;T&lt;/em&gt;/&lt;em&gt;d&lt;/em&gt;&lt;/span&gt;.&lt;/p&gt;

&lt;p&gt;&lt;span class=&#34;math&#34;&gt;&lt;em&gt;d&lt;/em&gt;&lt;/span&gt; is the &amp;ldquo;difficulty&amp;rdquo; (varies).&lt;br /&gt;
&lt;span class=&#34;math&#34;&gt;&lt;em&gt;T&lt;/em&gt;&lt;/span&gt; is a fixed target (256-bit number).&lt;br /&gt;
&lt;span class=&#34;math&#34;&gt;&lt;em&gt;r&lt;/em&gt;&lt;/span&gt; depends on hash of previous block, transactions, and other information.&lt;/p&gt;

&lt;p&gt;What does it mean for the bitcoin difficulty to go down?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Class 06: Hash Functions</title>
      <link>http://bitcoin-class.org/classes/class6/</link>
      <pubDate>Mon, 14 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://bitcoin-class.org/classes/class6/</guid>
      <description>

&lt;h2 id=&#34;schedule:647dbe1e5b68015679492d34153c74f5&#34;&gt;Schedule&lt;/h2&gt;

&lt;p&gt;&lt;div class=&#34;todo&#34;&gt;
&lt;strong&gt;Tuesday, September 15&lt;/strong&gt; (8:29pm, tomorrow): &lt;a href=&#34;http://www.bitcoin-class.org/ps/ps1&#34;&gt;Problem Set 1&lt;/a&gt; due.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Wednesday, September 23&lt;/strong&gt;: Check 2 (was originally scheduled for Monday, September 21)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Readings for next week&lt;/strong&gt; (should be completed by Monday, September 21 at the latest, but earlier is better):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Satoshi Nakamoto, &lt;a href=&#34;https://bitcoin.org/bitcoin.pdf&#34;&gt;&lt;em&gt;Bitcoin: A Peer-to-Peer Electronic Cash
System&lt;/em&gt;&lt;/a&gt;, 2008.  The is the original
bitcoin paper, which is quite readable and historically interesting.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/aantonop/bitcoinbook/blob/develop/ch06.asciidoc&#34;&gt;&lt;em&gt;Chapter 6: The Bitcoin
Network&lt;/em&gt;&lt;/a&gt;
and &lt;a href=&#34;https://github.com/aantonop/bitcoinbook/blob/develop/ch07.asciidoc&#34;&gt;&lt;em&gt;Chapter 7: The
Blockchain&lt;/em&gt;&lt;/a&gt;
from Andreas Antonopoulos&amp;rsquo; book.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://bitcoin-class.org/docs/princeton-book/chapter_2.pdf&#34;&gt;&lt;em&gt;Chapter 2: How Bitcoin Achieves
Decentralization&lt;/em&gt;&lt;/a&gt;
and &lt;a href=&#34;http://bitcoin-class.org/docs/princeton-book/chapter_5.pdf&#34;&gt;&lt;em&gt;Chapter 5: Bitcoin
Mining&lt;/em&gt;&lt;/a&gt;
from Arvind Narayanan, Joseph Bonneau, Edward Felten, Andrew Miller,
Steven Goldfeder. &lt;a href=&#34;https://piazza.com/princeton/spring2015/btctech/resources&#34;&gt;&lt;em&gt;Bitcoin and Cryptocurrency
Technologies&lt;/em&gt;&lt;/a&gt;.
&lt;/div&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;center&gt;
&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/key/JWtz4G4wUYKWU5&#34;
width=&#34;625&#34; height=&#34;400&#34; frameborder=&#34;2&#34; marginwidth=&#34;0&#34;
marginheight=&#34;0&#34; scrolling=&#34;no&#34;&gt;&lt;/iframe&gt;&lt;/p&gt;

&lt;!--
   &lt;div class=&#34;caption&#34;&gt;
Note: ink markings may not appear in the
embedded viewer.  To see them, [download the slides](/classes/class5-post.pptx).
   &lt;/div&gt;
--&gt;

&lt;p&gt;&lt;/center&gt;&lt;/p&gt;

&lt;h2 id=&#34;notes:647dbe1e5b68015679492d34153c74f5&#34;&gt;Notes&lt;/h2&gt;

&lt;p&gt;Why do we typically hash a message before signing it? What&amp;rsquo;s wrong if we always signed the full message?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;What are the properties we want in a cryptographically secure hash function?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;What is the &amp;ldquo;birthday attack&amp;rdquo; in the context of a hash function?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;!--page--&gt;

&lt;p&gt;Say you have 3000 distinct files in the &amp;ldquo;Documents&amp;rdquo; folder of our laptop. If
you have SHA-256 hashes for each of them, do you expect any repeats? If we
truncated the hash output to just 20 bits, how many repeats do you expect to
see?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;What is the advantage of using a Merkle tree as opposed to directly hashing
the full string?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Class 05: Becoming Paranoid</title>
      <link>http://bitcoin-class.org/classes/class5/</link>
      <pubDate>Wed, 09 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://bitcoin-class.org/classes/class5/</guid>
      <description>

&lt;h2 id=&#34;schedule:d690e1859ec274fb7ed997cd7db3fba5&#34;&gt;Schedule&lt;/h2&gt;

&lt;p&gt;&lt;div class=&#34;todo&#34;&gt;
&lt;strong&gt;Wednesday, 9 September&lt;/strong&gt; (now): Checkup 1 revisions (if desired).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tuesday, September 15&lt;/strong&gt; (8:29pm): &lt;a href=&#34;http://www.bitcoin-class.org/ps/ps1&#34;&gt;Problem Set 1&lt;/a&gt; due.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Wednesday, September 23&lt;/strong&gt;: Check 2 (was originally scheduled for Monday, September 21)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Readings for next week&lt;/strong&gt; (should be completed by Monday, September 21 at the latest, but earlier is better):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Satoshi Nakamoto, &lt;a href=&#34;https://bitcoin.org/bitcoin.pdf&#34;&gt;&lt;em&gt;Bitcoin: A Peer-to-Peer Electronic Cash
System&lt;/em&gt;&lt;/a&gt;, 2008.  The is the original
bitcoin paper, which is quite readable and historically interesting.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/aantonop/bitcoinbook/blob/develop/ch06.asciidoc&#34;&gt;&lt;em&gt;Chapter 6: The Bitcoin
Network&lt;/em&gt;&lt;/a&gt;
and &lt;a href=&#34;https://github.com/aantonop/bitcoinbook/blob/develop/ch07.asciidoc&#34;&gt;&lt;em&gt;Chapter 7: The
Blockchain&lt;/em&gt;&lt;/a&gt;
from Andreas Antonopoulos&amp;rsquo; book.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://bitcoin-class.org/docs/princeton-book/chapter_2.pdf&#34;&gt;&lt;em&gt;Chapter 2: How Bitcoin Achieves
Decentralization&lt;/em&gt;&lt;/a&gt;
and &lt;a href=&#34;http://bitcoin-class.org/docs/princeton-book/chapter_5.pdf&#34;&gt;&lt;em&gt;Chapter 5: Bitcoin
Mining&lt;/em&gt;&lt;/a&gt;
from Arvind Narayanan, Joseph Bonneau, Edward Felten, Andrew Miller,
Steven Goldfeder. &lt;a href=&#34;https://piazza.com/princeton/spring2015/btctech/resources&#34;&gt;&lt;em&gt;Bitcoin and Cryptocurrency
Technologies&lt;/em&gt;&lt;/a&gt;.
&lt;/div&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;center&gt;
&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/key/jXzZMV6Wpg9kCK&#34;
width=&#34;625&#34; height=&#34;400&#34; frameborder=&#34;2&#34; marginwidth=&#34;0&#34;
marginheight=&#34;0&#34; scrolling=&#34;no&#34;&gt;&lt;/iframe&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;caption&#34;&gt;
Note: ink markings may not appear in the
embedded viewer.  To see them, &lt;a href=&#34;http://bitcoin-class.org/classes/class5-post.pptx&#34;&gt;download the slides&lt;/a&gt;.
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;/center&gt;&lt;/p&gt;

&lt;h2 id=&#34;notes:d690e1859ec274fb7ed997cd7db3fba5&#34;&gt;Notes&lt;/h2&gt;

&lt;p&gt;What does it mean for a problem to be &lt;em&gt;hard&lt;/em&gt;?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;If you know an algorithm with running time in &lt;span class=&#34;math&#34;&gt;&lt;em&gt;O&lt;/em&gt;(2&lt;sup&gt;&lt;em&gt;n&lt;/em&gt;&lt;/sup&gt;)&lt;/span&gt; for problem &lt;em&gt;P&lt;/em&gt;, what do you know about the hardness of problem &lt;em&gt;P&lt;/em&gt;?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;What are the most common reasons for cryptosystems to fail in practice?&lt;/p&gt;

&lt;!--page--&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;
We didn&amp;rsquo;t get to this in class, but will cover it in a future class.
   &lt;/div&gt;&lt;/p&gt;

&lt;h2 id=&#34;bitcoin-s-curve:d690e1859ec274fb7ed997cd7db3fba5&#34;&gt;Bitcoin&amp;rsquo;s Curve&lt;/h2&gt;

&lt;p&gt;Standards for Efficient Cryptography: &lt;a href=&#34;http://www.secg.org/sec2-v2.pdf&#34;&gt;&lt;em&gt;SEC 2: Recommended Elliptic Curve Domain Parameters&lt;/em&gt;&lt;/a&gt; (Certicom Research, 27 January 2010)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Verifiably random parameters offer some additional conservative features. These parameters are
chosen from a seed using SHA-1 as specified in ANSI X9.62 [X9.62]. This process ensures that
the parameters cannot be predetermined. The parameters are therefore extremely unlikely to
be susceptible to future special-purpose attacks, and no trapdoors can have been placed in the
parameters during their generation. When elliptic curve domain parameters are chosen verifiably
at random, the seed S used to generate the parameters may optionally be stored along with the
parameters so that users can verify the parameters were chosen verifiably at random.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;What does it mean for parameters to be &amp;ldquo;verifiably random&amp;rdquo;?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;h1 id=&#34;randomness:d690e1859ec274fb7ed997cd7db3fba5&#34;&gt;Randomness&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Kolmogorov Complexity:&lt;/strong&gt; &lt;span class=&#34;math&#34;&gt;&lt;em&gt;K&lt;/em&gt;(&lt;em&gt;s&lt;/em&gt;)&lt;/span&gt; = the length of the shortest description of &lt;span class=&#34;math&#34;&gt;&lt;em&gt;s&lt;/em&gt;&lt;/span&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kolmogorov&amp;rsquo;s Definition of Random:&lt;/strong&gt; A sequence &lt;span
  class=&#34;math&#34;&gt;&lt;em&gt;s&lt;/em&gt;&lt;/span&gt; is random, if &lt;span class=&#34;math&#34;&gt;&lt;em&gt;K&lt;/em&gt;(&lt;em&gt;s&lt;/em&gt;) =
  |&lt;em&gt;s&lt;/em&gt;| + &lt;em&gt;C&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;What is the Kolmogorov Complexity of the string &lt;code&gt;0001000010000011111111100111...&lt;/code&gt;?
&lt;div class=&#34;biggap&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;What is the Kolmogorov Complexity of the string: &lt;code&gt;1MRigEo5423vycLnUdSnA4C6Ts691fUiYu 18UikW89q9VgGDftQW3Gmuhe4sQDCFP5kD 19ZQwQmfAsgy47ErehfkW3SeSzNGFfH9iN 1AZCH1insc6JrT2Z9SiNvgtTugXg8sF8yd 15qYggRJvmyZfpchxvNqr6h3pNjw6bGBV9 1C943NwPPffUFY7VDzi3kt7KikXwc2vdkN 1JBhLLCgNYhR8f6AZcRS3mjfEAmMzPvwyf 1JvDrBSYm6o4ZTQUhwUE4FhPFxd2wuXWUR 1KcBM1RNhcp1oENycoD4AezA5Se4SrsZnA 16JZWC433XRxjWwR7X65uxRVFdLTmoPr4t 149LB8VYaT1BdMLyQUL92Kj6KrJfNwcp64 16zDGuzbwkHjW8dNYMw9stDjRbTzVSLZU1 1HfMaZn53ZDWKgmhWxk1UPZMjQ6QmpW6m 14gZWnuwKpRLTCUFCAgTZMciRaEdrkmEpr 1BZ2ateDPugmqLzYsXVy9EK5BguvXa2Bnj 1rCdRyMVcZHJaHA2LKUvRqYBcHqvAfQkc 1Ak8VwX6x4FPbA6aXTC3BQGQHnnhfaJuB8 129sBvF6Jternwdn5XcoA37LinQRcmAD5U1H2in 1HxEzSKHssPtog2krjFPiPfrKSiw4...&lt;/code&gt; ?&lt;/p&gt;

&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;

&lt;p&gt;Daniel J. Bernstein, Tung Chou, Chitchanok Chuengsatiansup, Andreas
H&amp;uuml;lsing, Tanja Lange, Ruben Niederhagen, and Christine van Vredendaal.
&lt;a href=&#34;https://eprint.iacr.org/2014/571.pdf&#34;&gt;&lt;em&gt;How to Manipulate Curve Standards: A White Paper for the Black  Hat&lt;/em&gt;&lt;/a&gt;, 2014.&lt;/p&gt;

&lt;p&gt;How likely is it that the parameters for the secp256k1 curve used by bitcoin have a trapdoor?&lt;/p&gt;

&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;

&lt;p&gt;How should ECC parameters be generated for an important curve in a standard?
&lt;div class=&#34;biggap&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.root-dnssec.org/wp-content/uploads/2010/02/draft-icann-dnssec-ceremonies-00.txt&#34;&gt;&lt;em&gt;Root Zone DNSSEC KSK Ceremonies
Guide&lt;/em&gt;&lt;/a&gt;.
If you have a few hours to spare, you can watch a key signing for the
DNSSEC (Domain Name System): &lt;a href=&#34;https://www.iana.org/dnssec/ceremonies/20&#34;&gt;DNSSEC KSK Ceremony
20&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;dual-ec-prng:d690e1859ec274fb7ed997cd7db3fba5&#34;&gt;Dual-EC PRNG&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://csrc.nist.gov/publications/nistpubs/800-90A/SP800-90A.pdf&#34;&gt;NIST Special Publication 800-90A Recommendation for Random Number
Generation Using Deterministic Random Bit
Generators&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&#34;math&#34;&gt;&lt;em&gt;P&lt;/em&gt;&lt;/span&gt; and &lt;span class=&#34;math&#34;&gt;&lt;em&gt;Q&lt;/em&gt;&lt;/span&gt; are points on the curve, specified by the standard (but not
explained how &lt;span class=&#34;math&#34;&gt;&lt;em&gt;Q&lt;/em&gt;&lt;/span&gt; is choosen).  &lt;span class=&#34;math&#34;&gt;&lt;em&gt;P&lt;/em&gt;&lt;/span&gt; is a generator, so there exists some
&lt;span class=&#34;math&#34;&gt;&lt;em&gt;e&lt;/em&gt;&lt;/span&gt; such that &lt;span class=&#34;math&#34;&gt;&lt;em&gt;Q&lt;/em&gt;&lt;sup&gt;&lt;em&gt;e&lt;/em&gt;&lt;/sup&gt; = &lt;em&gt;P&lt;/em&gt;&lt;/span&gt;.&lt;/p&gt;

&lt;p&gt;&lt;span class=&#34;math&#34;&gt;&lt;em&gt;s&lt;/em&gt;&lt;sub&gt;0&lt;/sub&gt; = &lt;/span&gt; initialize with seed randomness&lt;br /&gt;
&lt;span class=&#34;math&#34;&gt;&lt;em&gt;s&lt;/em&gt;&lt;sub&gt;&lt;em&gt;i&lt;/em&gt;+1&lt;/sub&gt; = &amp;phiv;(&lt;em&gt;s&lt;/em&gt;&lt;sub&gt;&lt;em&gt;i&lt;/em&gt;&lt;/sub&gt; &amp;times; &lt;em&gt;P&lt;/em&gt;)&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;math&#34;&gt;&lt;em&gt;r&lt;/em&gt;&lt;sub&gt;&lt;em&gt;i&lt;/em&gt;&lt;/sub&gt; = &amp;phiv;(&lt;em&gt;s&lt;/em&gt;&lt;sub&gt;&lt;em&gt;i&lt;/em&gt;&lt;/sub&gt; &amp;times; &lt;em&gt;Q&lt;/em&gt;)&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;math&#34;&gt;&lt;em&gt;o&lt;/em&gt;&lt;sub&gt;&lt;em&gt;i&lt;/em&gt;&lt;/sub&gt; =&lt;/span&gt; the low-order 16 bits of the &lt;span class=&#34;math&#34;&gt;&lt;em&gt;x&lt;/em&gt;&lt;/span&gt;-coordinate of &lt;span class=&#34;math&#34;&gt;&lt;em&gt;r&lt;/em&gt;&lt;sub&gt;&lt;em&gt;i&lt;/em&gt;&lt;/sub&gt;&lt;/span&gt;.&lt;/p&gt;

&lt;p&gt;Given &lt;span class=&#34;math&#34;&gt;&lt;em&gt;o&lt;/em&gt;&lt;sub&gt;i&lt;/sub&gt;&lt;/span&gt;, how much work is it to find all the possible &lt;span class=&#34;math&#34;&gt;&lt;em&gt;r&lt;/em&gt;&lt;sub&gt;i&lt;/sub&gt; = (&lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;)&lt;/span&gt; values?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Given &lt;span class=&#34;math&#34;&gt;&lt;em&gt;e&lt;/em&gt;&lt;/span&gt;, what is &lt;span class=&#34;math&#34;&gt;&amp;phiv;(&lt;em&gt;e&lt;/em&gt; &amp;times; &lt;em&gt;A&lt;/em&gt;)&lt;/span&gt; where &lt;span class=&#34;math&#34;&gt;&lt;em&gt;A&lt;/em&gt;&lt;/span&gt; is a possible &lt;span class=&#34;math&#34;&gt;&lt;em&gt;r&lt;/em&gt;&lt;sub&gt;&lt;em&gt;i&lt;/em&gt;&lt;/sub&gt;&lt;/span&gt; value?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Dan Shumow, Niels Ferguson.  &lt;a href=&#34;http://rump2007.cr.yp.to/15-shumow.pdf&#34;&gt;&lt;em&gt;On the Possibility of a Back Door in the
NIST SP800-90 Dual Ec Prng&lt;/em&gt;&lt;/a&gt;.
CRYPTO 2007 Rump Session.&lt;/p&gt;

&lt;p&gt;Michael Wertheimer (NSA), &lt;a href=&#34;http://www.ams.org/notices/201502/rnoti-p165.pdf&#34;&gt;&lt;em&gt;Encryption and the NSA Role in International
Standards&lt;/em&gt;&lt;/a&gt;, Notices
of the American Mathematical Society, February 2015.&lt;/p&gt;

&lt;p&gt;Wertheimer&amp;rsquo;s letter is an attempt to respond to &lt;a href=&#34;http://www.ams.org/notices/201406/rnoti-p623.pdf&#34;&gt;&lt;em&gt;Mathematicians Discuss the
Snowden Revelations&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;The recent revelations about the NSA’s spying
programs are both dismaying and encouraging.
What is encouraging is that they might lead not
just to a reform of the intelligence agencies but
also to a more serious look at what the ongoing
and inevitable erosion of privacy is doing to our
society. What is dismaying is less the intrusive data
collection itself and more what it reveals about the
decision-making processes inside the government.&lt;/em&gt; (Andrew Odlyzko)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;How satisfying is the NSA&amp;rsquo;s response?  Are you more dismayed or encouraged?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Class 04: Checkup</title>
      <link>http://bitcoin-class.org/classes/class4/</link>
      <pubDate>Mon, 07 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://bitcoin-class.org/classes/class4/</guid>
      <description>

&lt;h2 id=&#34;checkup-1:a69bef1e5f2725722420b5c4a32452b2&#34;&gt;Checkup 1&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://bitcoin-class.org/checkup1.pdf&#34;&gt;Checkup 1&lt;/a&gt; and &lt;a href=&#34;http://bitcoin-class.org/feedback.pdf&#34;&gt;Feedback&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;checkup-revisions:a69bef1e5f2725722420b5c4a32452b2&#34;&gt;Checkup Revisions&lt;/h2&gt;

&lt;p&gt;If you are not happy with your answers to any of the questions on
Checkup 1, you may submit revised answers at the beginning of
Wednesday&amp;rsquo;s class.  (Just print the &lt;a href=&#34;http://bitcoin-class.org/checkup1.pdf&#34;&gt;Checkup 1&lt;/a&gt; and fill
in revised answers for any questions you want, or submit your clearly
marked answers on a separate page you generate.  It is not necessary to
resubmit answers to questions for which you are happy with your original
answers.)&lt;/p&gt;

&lt;h2 id=&#34;schedule:a69bef1e5f2725722420b5c4a32452b2&#34;&gt;Schedule&lt;/h2&gt;

&lt;p&gt;&lt;div class=&#34;todo&#34;&gt;
&lt;strong&gt;Wednesday, 9 September&lt;/strong&gt; (beginning of class): Checkup 1 revisions (if desired).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tuesday, September 15&lt;/strong&gt; (8:29pm): &lt;a href=&#34;http://www.bitcoin-class.org/ps/ps1&#34;&gt;Problem Set 1&lt;/a&gt; due.
   &lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Class 03: Digital Signatures</title>
      <link>http://bitcoin-class.org/classes/class3/</link>
      <pubDate>Wed, 02 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://bitcoin-class.org/classes/class3/</guid>
      <description>

&lt;h2 id=&#34;schedule:b9b50bf0a87e56763567aaebbc820d47&#34;&gt;Schedule&lt;/h2&gt;

&lt;p&gt;&lt;div class=&#34;todo&#34;&gt;
&lt;strong&gt;Monday, September 7&lt;/strong&gt;: Check-up 1.  This will be a short in-class quiz
  to test your understanding of the main concepts covered so far.  It
  will cover material from the readings (see Class 2 for details) and classes 1-3.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tuesday, September 15&lt;/strong&gt; (8:29pm): &lt;a href=&#34;http://www.bitcoin-class.org/ps/ps1&#34;&gt;Problem Set 1&lt;/a&gt; due.&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/key/aX0xcwqcvhABQg&#34;
width=&#34;625&#34; height=&#34;400&#34; frameborder=&#34;2&#34; marginwidth=&#34;0&#34;
marginheight=&#34;0&#34; scrolling=&#34;no&#34;&gt;&lt;/iframe&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;caption&#34;&gt;
Note: ink markings may not appear in the
embedded viewer.  To see them, &lt;a href=&#34;http://bitcoin-class.org/classes/class3-post.pptx&#34;&gt;download the slides&lt;/a&gt;.
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;/center&gt;&lt;/p&gt;

&lt;h2 id=&#34;signatures:b9b50bf0a87e56763567aaebbc820d47&#34;&gt;Signatures&lt;/h2&gt;

&lt;p&gt;&amp;ldquo;Real-life&amp;rdquo; signatures. Properties:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Easy to verify&lt;/li&gt;
&lt;li&gt;Forging unlikely&lt;/li&gt;
&lt;li&gt;Hard to repudiate&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Digital signatures. Should have same properties, in the absence of legal forces on the internet.&lt;/p&gt;

&lt;p&gt;Topics:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Assymetric cryptography&lt;/li&gt;
&lt;li&gt;Digital signatures&lt;/li&gt;
&lt;li&gt;Elliptic curve cryptography&lt;/li&gt;
&lt;li&gt;Implementation pitfalls&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ordinary (or symmetric) Crypto&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Both parties have to agree on a key&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Diffie-Hellman key exchange&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Proposed in 1976&lt;/li&gt;
&lt;li&gt;Establishes a private secret key, unknown to any evesdropper&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Whitfield Diffie and Martin E. Hellman, &lt;a href=&#34;http://www-ee.stanford.edu/~hellman/publications/24.pdf&#34;&gt;&lt;em&gt;New Directions in Cryptography&lt;/em&gt;&lt;/a&gt;, IEEE Transactions on Information Theory, 1976.&lt;/p&gt;

&lt;p&gt;The paper concludes with an interesting historical discussion (that gets
bonus points for mentioning Thomas Jefferson):&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;While at first the public key systems and one-way authentication systems suggested in this paper appear to be unportended by past cryptographic developments, it is possible to view them as the natural outgrowth of trends in cryptography stretching back hundreds of years. Secrecy is at the heart of cryptography. In early cryptography, however, there was a confusion about what was to be kept secret. &amp;hellip; After the invention of the telegraph, the distinction between a general system and a specific key allowed the general system to be compromised, for example by theft of a cryptographic device, without compromising future messages enciphered in new keys. &amp;hellip; The development of computers has led for the first time to a mathematical theory of algorithms which can begin to approach the difficult problem of estimating the computational difficulty of breaking a cryptographic system. The position of mathematical proof may thus come full circle and be reestablished as the best method of certification.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The last characteristic which we note in the history of cryptography is the division between amateur and professional cryptographers. Skill in production cryptanalysis has always been heavily on the side of the professionals, but innovation, particularly in the design of new types of cryptographic systems, has come primarily from the amateurs. Thomas Jefferson, a cryptographic amateur, invented a system which was still in use in World War II, while the most noted cryptographic system of the twentieth century, the rotor machine, was invented simultaneously by four separate people, all amateurs. We hope this will inspire others to work in this fascinating area in which participation has been discouraged in the recent past by a nearly total government monopoly.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Observe how the them of amateurs being the ones who design the important
cryptographic systems carries through with bitcoin. Although Satoshi&amp;rsquo;s
actual identity is unknown, it seems pretty clear that they are not a
professionally-trained cryptographer, and (so far, at least!) all the
digital currencies developed by world renowned cryptographers have
failed.&lt;/p&gt;

&lt;h3 id=&#34;discrete-logarithm-problem:b9b50bf0a87e56763567aaebbc820d47&#34;&gt;Discrete Logarithm Problem&lt;/h3&gt;

&lt;p&gt;Given &lt;span class=&#34;math&#34;&gt;&lt;em&gt;g&lt;/em&gt;&lt;/span&gt;, &lt;span class=&#34;math&#34;&gt;&lt;em&gt;y&lt;/em&gt;&lt;/span&gt;, and &lt;span class=&#34;math&#34;&gt;&lt;em&gt;p&lt;/em&gt;&lt;/span&gt;, find &lt;span class=&#34;math&#34;&gt;&lt;em&gt;x&lt;/em&gt;&lt;/span&gt; such that &lt;span class=&#34;math&#34;&gt;&lt;em&gt;g&lt;/em&gt;&lt;sup&gt;&lt;em&gt;x&lt;/em&gt;&lt;/sup&gt; mod &lt;em&gt;p&lt;/em&gt; = &lt;em&gt;y&lt;/em&gt;&lt;/span&gt;.&lt;/p&gt;

&lt;p&gt;&lt;del&gt;Discrete&lt;/del&gt; Logarithm Problem: easy to solve for real numbers.&lt;/p&gt;

&lt;p&gt;What is the range of elements out of which we are randomly selecting?&lt;/p&gt;

&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;

&lt;h3 id=&#34;mod-5-exponentiation:b9b50bf0a87e56763567aaebbc820d47&#34;&gt;Mod 5 exponentiation&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Multiplicative order&lt;/strong&gt; is the number of multiplication after which the result repeats.&lt;/p&gt;

&lt;p&gt;Multiplicative order of &lt;span class=&#34;math&#34;&gt;&lt;em&gt;g&lt;/em&gt;&lt;/span&gt; is &lt;span class=&#34;math&#34;&gt;&lt;em&gt;n&lt;/em&gt;&lt;/span&gt; if &lt;span class=&#34;math&#34;&gt;&lt;em&gt;n&lt;/em&gt;&lt;/span&gt; is the smallest positive integer
such that &lt;span class=&#34;math&#34;&gt;&lt;em&gt;g&lt;/em&gt;&lt;sup&gt;&lt;em&gt;n&lt;/em&gt;&lt;/sup&gt; = 1&lt;/span&gt;.&lt;/p&gt;

&lt;h3 id=&#34;exponent-modulus:b9b50bf0a87e56763567aaebbc820d47&#34;&gt;Exponent Modulus&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Multiplicative order is at most &lt;span class=&#34;math&#34;&gt;&lt;em&gt;p&lt;/em&gt; - 1&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;Pick random &lt;span class=&#34;math&#34;&gt;&lt;em&gt;x&lt;/em&gt;&lt;/span&gt; such that &lt;span class=&#34;math&#34;&gt;0 &amp;le; &lt;em&gt;x&lt;/em&gt; &amp;lt; &lt;em&gt;p&lt;/em&gt; - 1&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math&#34;&gt;&lt;em&gt;g&lt;/em&gt;&lt;sup&gt;&lt;em&gt;a&lt;/em&gt;&lt;/sup&gt; &lt;em&gt;g&lt;/em&gt;&lt;sup&gt;&lt;em&gt;b&lt;/em&gt;&lt;/sup&gt; mod &lt;em&gt;p&lt;/em&gt; = &lt;em&gt;g&lt;/em&gt;&lt;sup&gt;&lt;em&gt;a&lt;/em&gt;+&lt;em&gt;b&lt;/em&gt;&lt;/sup&gt; mod &lt;em&gt;p&lt;/em&gt; = &lt;em&gt;g&lt;/em&gt;&lt;sup&gt;(&lt;em&gt;a&lt;/em&gt;+&lt;em&gt;b&lt;/em&gt;) mod &lt;em&gt;n&lt;/em&gt;&lt;/sup&gt; mod &lt;em&gt;p&lt;/em&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;public-key-cryptography:b9b50bf0a87e56763567aaebbc820d47&#34;&gt;Public-key Cryptography&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;Google announces &lt;span class=&#34;math&#34;&gt;&lt;em&gt;g&lt;/em&gt;&lt;sup&gt;&lt;em&gt;a&lt;/em&gt;&lt;/sup&gt;&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;Bob picks random secret &lt;span class=&#34;math&#34;&gt;&lt;em&gt;b&lt;/em&gt;&lt;/span&gt;, computes &lt;span class=&#34;math&#34;&gt;(&lt;em&gt;g&lt;/em&gt;&lt;sup&gt;&lt;em&gt;a&lt;/em&gt;&lt;/sup&gt;)&lt;sup&gt;&lt;em&gt;b&lt;/em&gt;&lt;/sup&gt;=&lt;em&gt;g&lt;/em&gt;&lt;sup&gt;&lt;em&gt;ab&lt;/em&gt;&lt;/sup&gt;&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;Bob encrypts message &lt;span class=&#34;math&#34;&gt;&lt;em&gt;m&lt;/em&gt;&lt;/span&gt; and sends: &lt;span class=&#34;math&#34;&gt;&lt;em&gt;g&lt;/em&gt;&lt;sup&gt;&lt;em&gt;b&lt;/em&gt;&lt;/sup&gt;, &lt;em&gt;g&lt;/em&gt;&lt;sup&gt;&lt;em&gt;ab&lt;/em&gt;&lt;/sup&gt;&lt;em&gt;m&lt;/em&gt;&lt;/span&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;man-in-the-middle-mitm:b9b50bf0a87e56763567aaebbc820d47&#34;&gt;Man-in-the-middle (MITM)&lt;/h3&gt;

&lt;p&gt;Active adversary can still read everything. We have to know messages are coming from the right person.&lt;/p&gt;

&lt;h2 id=&#34;digital-signatures:b9b50bf0a87e56763567aaebbc820d47&#34;&gt;Digital Signatures&lt;/h2&gt;

&lt;p&gt;Discrete-log based signature&lt;/p&gt;

&lt;h3 id=&#34;elgamal-signature-scheme:b9b50bf0a87e56763567aaebbc820d47&#34;&gt;ElGamal Signature Scheme&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Fixed global parameters: &lt;span class=&#34;math&#34;&gt;&lt;em&gt;g&lt;/em&gt;&lt;/span&gt;, &lt;span class=&#34;math&#34;&gt;&lt;em&gt;p&lt;/em&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Private key: &lt;span class=&#34;math&#34;&gt;&lt;em&gt;a&lt;/em&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Public key: &lt;span class=&#34;math&#34;&gt;&lt;em&gt;g&lt;/em&gt;&lt;sup&gt;a&lt;/sup&gt; mod &lt;em&gt;p&lt;/em&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Signing:

&lt;ol&gt;
&lt;li&gt;Input: message &lt;span class=&#34;math&#34;&gt;&lt;em&gt;m&lt;/em&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Pick random &lt;span class=&#34;math&#34;&gt;&lt;em&gt;k&lt;/em&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Compute &lt;span class=&#34;math&#34;&gt;&lt;em&gt;r&lt;/em&gt; = &lt;em&gt;g&lt;/em&gt;&lt;sup&gt;&lt;em&gt;k&lt;/em&gt;&lt;/sup&gt; mod &lt;em&gt;p&lt;/em&gt;&lt;/span&gt;;
       &lt;span class=&#34;math&#34;&gt;&lt;em&gt;s&lt;/em&gt; = (&lt;em&gt;m&lt;/em&gt;-&lt;em&gt;ar&lt;/em&gt;)&lt;em&gt;k&lt;/em&gt;&lt;sup&gt;-1&lt;/sup&gt; mod &lt;em&gt;p&lt;/em&gt; - 1&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Send &lt;span class=&#34;math&#34;&gt;(&lt;em&gt;r&lt;/em&gt;, &lt;em&gt;s&lt;/em&gt;)&lt;/span&gt; with message &lt;span class=&#34;math&#34;&gt;&lt;em&gt;m&lt;/em&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;Verification:

&lt;ol&gt;
&lt;li&gt;Input: message &lt;span class=&#34;math&#34;&gt;&lt;em&gt;m&lt;/em&gt;, (&lt;em&gt;r&lt;/em&gt;,&lt;em&gt;s&lt;/em&gt;)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Verify that &lt;span class=&#34;math&#34;&gt;&lt;em&gt;r&lt;/em&gt;&lt;sup&gt;&lt;em&gt;s&lt;/em&gt;&lt;/sup&gt;(&lt;em&gt;g&lt;/em&gt;&lt;sup&gt;&lt;em&gt;a&lt;/em&gt;&lt;/sup&gt;)&lt;sup&gt;&lt;em&gt;r&lt;/em&gt;&lt;/sup&gt; = &lt;em&gt;g&lt;/em&gt;&lt;sup&gt;&lt;em&gt;m&lt;/em&gt;&lt;/sup&gt; mod &lt;em&gt;p&lt;/em&gt;.&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;avoiding-overly-long-numbers:b9b50bf0a87e56763567aaebbc820d47&#34;&gt;Avoiding (overly) long numbers&lt;/h2&gt;

&lt;p&gt;Real-life keys are long. We can use any group where discrete log is hard.&lt;/p&gt;

&lt;p&gt;A group is a set of elements and an associated operation such that it satisfies the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Closure&lt;/strong&gt;: &lt;span class=&#34;math&#34;&gt;&lt;em&gt;a&lt;/em&gt; * &lt;em&gt;b&lt;/em&gt;&lt;/span&gt; is also a group element.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Associativity:&lt;/strong&gt; for all &lt;span class=&#34;math&#34;&gt;&lt;em&gt;a&lt;/em&gt;, &lt;em&gt;b&lt;/em&gt;, &lt;em&gt;c&lt;/em&gt;: (&lt;em&gt;a&lt;/em&gt;&lt;em&gt;&lt;em&gt;b&lt;/em&gt;)&lt;/em&gt;&lt;em&gt;c&lt;/em&gt; = &lt;em&gt;a&lt;/em&gt;&lt;em&gt;(&lt;em&gt;b&lt;/em&gt;&lt;/em&gt;&lt;em&gt;c&lt;/em&gt;)&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Identity element:&lt;/strong&gt; there exists an element &lt;span class=&#34;math&#34;&gt;&lt;em&gt;e&lt;/em&gt;&lt;/span&gt;, such that for every element &lt;span class=&#34;math&#34;&gt;&lt;em&gt;a&lt;/em&gt;: &lt;em&gt;a&lt;/em&gt; * &lt;em&gt;e&lt;/em&gt; = &lt;em&gt;a&lt;/em&gt; = &lt;em&gt;e&lt;/em&gt; * &lt;em&gt;a&lt;/em&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Inverse:&lt;/strong&gt; for every element &lt;span class=&#34;math&#34;&gt;&lt;em&gt;a&lt;/em&gt;&lt;/span&gt;, there exists an element &lt;span class=&#34;math&#34;&gt;&lt;em&gt;b&lt;/em&gt;&lt;/span&gt; such that &lt;span class=&#34;math&#34;&gt;&lt;em&gt;a&lt;/em&gt; * &lt;em&gt;b&lt;/em&gt; = &lt;em&gt;e&lt;/em&gt; = &lt;em&gt;b&lt;/em&gt; * &lt;em&gt;a&lt;/em&gt;&lt;/span&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Additional Cryptographic Properties:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Discrete logarithm should be hard&lt;/li&gt;
&lt;li&gt;Group operation should be efficient&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;elliptic-curve-cryptography-ecc:b9b50bf0a87e56763567aaebbc820d47&#34;&gt;Elliptic Curve Cryptography (ECC)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Group elements are points on a curve, e.g., &lt;span class=&#34;math&#34;&gt;&lt;em&gt;y&lt;/em&gt;&lt;sup&gt;2&lt;/sup&gt; = &lt;em&gt;x&lt;/em&gt;&lt;sup&gt;3&lt;/sup&gt; + 7&lt;/sup&gt;.&lt;/li&gt;
&lt;li&gt;Point &amp;ldquo;addition&amp;rdquo; using &amp;ldquo;geometry&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;elliptic-curve-digital-signature-algorithm:b9b50bf0a87e56763567aaebbc820d47&#34;&gt;Elliptic Curve Digital Signature Algorithm&lt;/h3&gt;

&lt;p&gt;Follows the same structure as ElGamal signature, but only on &lt;span class=&#34;math&#34;&gt;&lt;em&gt;x&lt;/em&gt;&lt;/span&gt;-coordinate.&lt;/p&gt;

&lt;h2 id=&#34;pitfalls:b9b50bf0a87e56763567aaebbc820d47&#34;&gt;Pitfalls&lt;/h2&gt;

&lt;p&gt;If we ever repeat signing nonce, we leak the private key.  Sony actually
did this with Playstation 3 consoles (&lt;a href=&#34;https://events.ccc.de/congress/2010/Fahrplan/attachments/1780_27c3_console_hacking_2010.pdf&#34;&gt;&lt;em&gt;Console Hacking 2010: PS3 Epic Fail&lt;/em&gt;&lt;/a&gt;, CCC 2010).&lt;/p&gt;

&lt;p&gt;Poor randomness makes private keys predictable. Use &lt;code&gt;/dev/urandom&lt;/code&gt;
(Linux) or &lt;code&gt;java.security.SecureRandom&lt;/code&gt; in Java.  If you use a
pseudorandom number generator that is seeded with an easily guessed
value, you are in big trouble!  A common mistake was to use
&lt;code&gt;Math.random()&lt;/code&gt; or &lt;code&gt;srand(time(0))&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Logjam attack: downgrade security during handshake.&lt;/p&gt;

&lt;h2 id=&#34;notes:b9b50bf0a87e56763567aaebbc820d47&#34;&gt;Notes&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;How are digital signatures and real-life signatures different in terms of why we trust them? What stops each from being forged by others?&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Assume somebody really clever has a way of solving the discrete logarithm problem easily. That is, for any given &lt;span class=&#34;math&#34;&gt;&lt;em&gt;g&lt;/em&gt;&lt;/span&gt;, &lt;span class=&#34;math&#34;&gt;&lt;em&gt;y&lt;/em&gt;&lt;/span&gt;, and &lt;span class=&#34;math&#34;&gt;&lt;em&gt;p&lt;/em&gt;&lt;/span&gt;, the adversary can compute &lt;span class=&#34;math&#34;&gt;&lt;em&gt;x&lt;/em&gt;&lt;/span&gt; such that &lt;span class=&#34;math&#34;&gt;&lt;em&gt;g&lt;/em&gt;&lt;sup&gt;&lt;em&gt;x&lt;/em&gt; mod &lt;em&gt;p&lt;/em&gt; = &lt;em&gt;y&lt;/em&gt;&lt;/span&gt;. How can this algorithm be used to break security of Diffie-Hellman protocol?&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;What is a nonce? What breaks if we reuse it between encrypted messages?&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;In elliptic curve cryptography, why do we use &lt;span class=&#34;math&#34;&gt;mod &lt;em&gt;p&lt;/em&gt;&lt;/span&gt; integers? What would go wrong if we used real numbers?  What would go wrong if we used unbounded integers?&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Class 02: Cryptography</title>
      <link>http://bitcoin-class.org/classes/class2/</link>
      <pubDate>Mon, 31 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>http://bitcoin-class.org/classes/class2/</guid>
      <description>

&lt;h2 id=&#34;schedule:59cb8283a9bd282131a45da3029e68b4&#34;&gt;Schedule&lt;/h2&gt;

&lt;p&gt;&lt;div class=&#34;todo&#34;&gt;
Before the next class (Wednesday, Sept 2):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Read:&lt;/strong&gt; &lt;a href=&#34;https://github.com/aantonop/bitcoinbook/blob/develop/ch03.asciidoc&#34;&gt;&lt;em&gt;Chapter 3: The Bitcoin
Client&lt;/em&gt;&lt;/a&gt;
and &lt;a href=&#34;https://github.com/aantonop/bitcoinbook/blob/develop/ch04.asciidoc&#34;&gt;&lt;em&gt;Chapter 4: Keys, Addresses,
Wallets&lt;/em&gt;&lt;/a&gt;
from Andreas M. Antonopoulos, &lt;a href=&#34;https://github.com/aantonop/bitcoinbook&#34;&gt;&lt;em&gt;Mastering Bitcoin: Unlocking Digital
Cryptocurrencies&lt;/em&gt;&lt;/a&gt; book (also
available &lt;a href=&#34;http://www.amazon.com/Mastering-Bitcoin-Unlocking-Digital-Crypto-Currencies/dp/1449374042&#34;&gt;in
print&lt;/a&gt;).
You can skim most of Chapter 3, especially the parts about installing
bitcoin core, but should read Chapter 4.  (You should have already read
Chapters 1 and 2.)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Read:&lt;/strong&gt; &lt;a href=&#34;http://bitcoin-class.org/docs/princeton-book/chapter_1.pdf&#34;&gt;&lt;em&gt;Chapter 1: Introduction to Cryptography and
Cryptocurrencies&lt;/em&gt;&lt;/a&gt;,
from Arvind Narayanan, Joseph Bonneau, Edward Felten, Andrew Miller,
Steven Goldfeder. &lt;a href=&#34;https://piazza.com/princeton/spring2015/btctech/resources&#34;&gt;&lt;em&gt;Bitcoin and Cryptocurrency
Technologies&lt;/em&gt;&lt;/a&gt;.
This chapter starts with cryptographic hashing and authenticated data
structures (which we are deferring until until later, but is still worth
reading now), and Section 1.3 covers digital signatures.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Monday, September 7&lt;/strong&gt;: Check-up 1.  This will be a short in-class quiz
  to test your understanding of the main concepts covered so far.  It
  will cover material from the readings and classes 1-3.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tuesday, September 15&lt;/strong&gt; (8:29pm): &lt;a href=&#34;http://www.bitcoin-class.org/ps/ps1&#34;&gt;Problem Set 1&lt;/a&gt; due.&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/key/ppf9BW9JlnIXC5&#34;
width=&#34;476&#34; height=&#34;400&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34;
marginheight=&#34;0&#34; scrolling=&#34;no&#34;&gt;&lt;/iframe&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;caption&#34;&gt;
Note: ink markings may not appear in the
embedded viewer.  To see them, &lt;a href=&#34;http://bitcoin-class.org/classes/class2-post.pptx&#34;&gt;download the slides&lt;/a&gt;.
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;/center&gt;&lt;/p&gt;

&lt;!--
how is it possible to own something digital?

- copyright!

England

1662 - Licensing of the Press Act

guild of printers, &#34;Stationer&#39;s Company&#34; (formed in 1403, royal charter in 1557)
granted monopoly on printing [cf. Chinese granting monopoly on salt production]
exclusive right to print - responsible for censoring

ended in 1694 - no restrictions        


Act of Queen Anne
--&gt;

&lt;h2 id=&#34;cryptography:59cb8283a9bd282131a45da3029e68b4&#34;&gt;Cryptography&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;kryptos&lt;/em&gt; is a Greek root meaning hidden (&amp;ldquo;secret&amp;rdquo;)&lt;/p&gt;

&lt;p&gt;&lt;em&gt;crypto&lt;/em&gt; + &lt;em&gt;graphy&lt;/em&gt; = &amp;ldquo;secret writing&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Decryption&lt;/em&gt; is what the intended receiver does.&lt;br /&gt;
&lt;em&gt;Cryptanalysis&lt;/em&gt; is what an attacker does.&lt;/p&gt;

&lt;p&gt;How are cryptography and security related?
&lt;div class=&#34;gap&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;h3 id=&#34;simple-message-cryptosystem:59cb8283a9bd282131a45da3029e68b4&#34;&gt;Simple Message Cryptosystem&lt;/h3&gt;

&lt;p&gt;Two functions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Encrypt:&lt;/strong&gt; &lt;span class=&#34;math&#34;&gt;&lt;em&gt;E&lt;/em&gt;(&lt;em&gt;m&lt;/em&gt;: byte[]) &amp;rarr; byte[]&lt;/span&gt;.  The input is called the
&lt;strong&gt;plaintext&lt;/strong&gt;; the output is called the &lt;strong&gt;ciphertext&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Decrypt:&lt;/strong&gt; &lt;span class=&#34;math&#34;&gt;&lt;em&gt;D&lt;/em&gt;(&lt;em&gt;c&lt;/em&gt;: byte[]) &amp;rarr; byte[]&lt;/span&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Required properties:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Correctness:&lt;/strong&gt; for all possible messages, &lt;span class=&#34;math&#34;&gt;&lt;em&gt;m&lt;/em&gt;, &lt;em&gt;D&lt;/em&gt;(&lt;em&gt;E&lt;/em&gt;(&lt;em&gt;m&lt;/em&gt;)) = &lt;em&gt;m&lt;/em&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Security:&lt;/strong&gt; given the output of &lt;span class=&#34;math&#34;&gt;&lt;em&gt;E&lt;/em&gt;(&lt;em&gt;m&lt;/em&gt;)&lt;/span&gt;, it is &amp;ldquo;hard&amp;rdquo; to learn anything interesting about &lt;span class=&#34;math&#34;&gt;&lt;em&gt;m&lt;/em&gt;&lt;/span&gt;.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;http://web.mit.edu/newsoffice/2013/goldwasser-and-micali-win-turing-award-0313.html&#34;&gt;&lt;em&gt;Goldwasser and Micali win Turing Award: Team honored for
‘revolutionizing the science of
cryptography&amp;rsquo;&lt;/em&gt;&lt;/a&gt;,
MIT News, 13 March 2013.&lt;/p&gt;

&lt;p&gt;Their paper that introduced semantic security notions is:
&lt;a href=&#34;http://groups.csail.mit.edu/cis/pubs/shafi/1982-stoc.pdf&#34;&gt;&lt;em&gt;Probabilistic Encryption and How to Play Mental Poker Keeping Secret
All Partial
Information&lt;/em&gt;&lt;/a&gt;,
ACM Symposium on Theory of Computing, 1982.  (We will not get into
formal security definitions or proofs in this class, but you should take
&lt;a href=&#34;http://www.cs.virginia.edu/~mohammad/&#34;&gt;Mohammad Mahmoody&lt;/a&gt;&amp;rsquo;s class to
learn them.)&lt;/p&gt;

&lt;h3 id=&#34;keyed-symmetric-cryptosystem:59cb8283a9bd282131a45da3029e68b4&#34;&gt;Keyed Symmetric Cryptosystem&lt;/h3&gt;

&lt;p&gt;Claude Shannon, &lt;a href=&#34;http://netlab.cs.ucla.edu/wiki/files/shannon1949.pdf&#34;&gt;&lt;em&gt;Communication Theory of Secrecy Systems&lt;/em&gt;&lt;/a&gt;, 1949 (work done during World War II, but declassified later).&lt;/p&gt;

&lt;p&gt;Two functions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Encrypt:&lt;/strong&gt; &lt;span class=&#34;math&#34;&gt;&lt;em&gt;E&lt;/em&gt;(&lt;em&gt;&lt;font color=&#34;red&#34;&gt;k&lt;/font&gt;&lt;/em&gt;: byte[], &lt;em&gt;m&lt;/em&gt;: byte[]) &amp;rarr; byte[]&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Decrypt:&lt;/strong&gt; &lt;span class=&#34;math&#34;&gt;&lt;em&gt;D&lt;/em&gt;(&lt;em&gt;&lt;font color=&#34;red&#34;&gt;k&lt;/font&gt;&lt;/em&gt;, &lt;em&gt;c&lt;/em&gt;: byte[]) &amp;rarr; byte[]&lt;/span&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Required properties:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Correctness:&lt;/strong&gt; for all possible messages, &lt;span class=&#34;math&#34;&gt;&lt;em&gt;m&lt;/em&gt;&lt;/span&gt;, and keys, &lt;span class=&#34;math&#34;&gt;&lt;em&gt;k&lt;/em&gt;&lt;/span&gt;, &lt;span class=&#34;math&#34;&gt;&lt;em&gt;D&lt;/em&gt;(&lt;em&gt;&lt;font color=&#34;red&#34;&gt;k&lt;/font&gt;&lt;/em&gt;, &lt;em&gt;E&lt;/em&gt;(&lt;em&gt;&lt;font color=&#34;red&#34;&gt;k&lt;/font&gt;&lt;/em&gt;, &lt;em&gt;m&lt;/em&gt;)) = &lt;em&gt;m&lt;/em&gt;&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Security:&lt;/strong&gt; given &lt;span class=&#34;math&#34;&gt;&lt;em&gt;E&lt;/em&gt;&lt;/span&gt;, &lt;span class=&#34;math&#34;&gt;&lt;em&gt;D&lt;/em&gt;&lt;/span&gt;, and the output of &lt;span class=&#34;math&#34;&gt;&lt;em&gt;E&lt;/em&gt;(&lt;font color=&#34;red&#34;&gt;&lt;em&gt;k&lt;/em&gt;&lt;/font&gt;, &lt;em&gt;m&lt;/em&gt;)&lt;/span&gt; it is &amp;ldquo;hard&amp;rdquo; to learn anything interesting about &lt;span class=&#34;math&#34;&gt;&lt;em&gt;m&lt;/em&gt;&lt;/span&gt; (without knowing &lt;span class=&#34;math&#34;&gt;&lt;font color=&#34;red&#34;&gt;&lt;em&gt;k&lt;/em&gt;&lt;/font&gt;&lt;/span&gt;).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Are these properties enough to be secure against an active attacker?
&lt;div class=&#34;gap&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Keyspace:&lt;/strong&gt; set of all possible keys.  Assume (hopefully for
  user!) that key is drawn uniformly from this set.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Brute Force Attack:&lt;/strong&gt; for all possible keys, &lt;span
  class=&#34;math&#34;&gt;&lt;em&gt;k&lt;/em&gt;&lt;sub&gt;i&lt;/sub&gt;&lt;/span&gt;, try computing &lt;span
  class=&#34;math&#34;&gt;&lt;em&gt;D&lt;/em&gt;(&lt;em&gt;k&lt;/em&gt;&lt;sub&gt;i&lt;/sub&gt;)&lt;/span&gt; to see if it looks like a
  reasonable plaintext.&lt;/p&gt;

&lt;p&gt;In order for a brute force attack to succeed, what properties are
necessary about (1) the keyspace and (2) the message space?&lt;/p&gt;

&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;

&lt;p&gt;Where is symmetric cryptography used in your bitcoin wallet?&lt;/p&gt;

&lt;div class=&#34;biggap&#34;&gt;&lt;/div&gt;

&lt;!--page--&gt;

&lt;p&gt;(This material was not actually covered in class 2, but will be covered in class 3.)&lt;/p&gt;

&lt;h2 id=&#34;asymmetric-cryptosystems:59cb8283a9bd282131a45da3029e68b4&#34;&gt;Asymmetric Cryptosystems&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Asymmetric cryptosystems&lt;/strong&gt; use &lt;em&gt;different functions&lt;/em&gt; for encrypting
  and decrypting, with the property that revealing the encryption
  function does not reveal the decryption function.  With Kerckhoff&amp;rsquo;s
  Principle, this means there are different keys for encryption and
  decryption.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Generate:&lt;/strong&gt; produce key pair, &lt;span class=&#34;math&#34;&gt;(&lt;em&gt;&lt;font color=&#34;green&#34;&gt;KU&lt;sub&gt;X&lt;/sub&gt;&lt;/font&gt;&lt;/em&gt;, &lt;em&gt;&lt;font color=&#34;red&#34;&gt;KR&lt;sub&gt;X&lt;/sub&gt;&lt;/font&gt;&lt;/em&gt;)&lt;/span&gt;, and publish the public key, &lt;span class=&#34;math&#34;&gt;&lt;em&gt;&lt;font color=&#34;green&#34;&gt;KU&lt;sub&gt;X&lt;/sub&gt;&lt;/font&gt;&lt;/em&gt;&lt;/span&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Encrypt:&lt;/strong&gt; &lt;span class=&#34;math&#34;&gt;&lt;em&gt;E&lt;/em&gt;(&lt;em&gt;&lt;font color=&#34;green&#34;&gt;KU&lt;sub&gt;X&lt;/sub&gt;&lt;/font&gt;&lt;/em&gt;: byte[], &lt;em&gt;m&lt;/em&gt;: byte[]) &amp;rarr; byte[]&lt;/span&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Decrypt:&lt;/strong&gt; &lt;span class=&#34;math&#34;&gt;&lt;em&gt;D&lt;/em&gt;(&lt;em&gt;&lt;font color=&#34;red&#34;&gt;KR&lt;sub&gt;X&lt;/sub&gt;&lt;/font&gt;&lt;/em&gt;, &lt;em&gt;c&lt;/em&gt;: byte[]) &amp;rarr; byte[]&lt;/span&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Messages:&lt;/strong&gt; Sender encrypts a message with the recipient&amp;rsquo;s public key.
  Recipient decrypts the message using her private key.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Signatures:&lt;/strong&gt; Signer encrypts a message with her own private key.
  Verifier checks the message using the signer&amp;rsquo;s public key.&lt;/p&gt;

&lt;p&gt;How can we use asymmetric cryptosystems to &lt;em&gt;prove&lt;/em&gt; ownership?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;How can we use asymmetric cryptosystems to &lt;em&gt;transfer&lt;/em&gt; ownership?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Where is asymmetric cryptography used in your wallet?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Assuming we have a strong asymmetric cryptosystem, what hard problems are left
to solve to make a cryptocurrency?&lt;/p&gt;

&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Class 01: What is Money?</title>
      <link>http://bitcoin-class.org/classes/class1/</link>
      <pubDate>Wed, 26 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>http://bitcoin-class.org/classes/class1/</guid>
      <description>

&lt;h2 id=&#34;schedule:e795e40ef5a742faa33766b4d984e8c7&#34;&gt;Schedule&lt;/h2&gt;

&lt;p&gt;&lt;div class=&#34;todo&#34;&gt;
Before &lt;strong&gt;8:29pm Saturday&lt;/strong&gt; (29 August):&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Read:&lt;/strong&gt; &lt;a href=&#34;http://bitcoin-class.org/syllabus&#34;&gt;Course Syllabus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Setup&lt;/strong&gt; a bitcoin wallet (see &lt;a href=&#34;http://bitcoin-class.org/registration&#34;&gt;Registration&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Submit &lt;a href=&#34;http://bitcoin-class.org/registration&#34;&gt;Registration&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Before &lt;strong&gt;Monday&amp;rsquo;s class&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Read:&lt;/strong&gt;
&lt;a href=&#34;https://github.com/aantonop/bitcoinbook/blob/develop/ch01.asciidoc&#34;&gt;&lt;em&gt;Chapter 1: Introduction&lt;/em&gt;&lt;/a&gt;
and
&lt;a href=&#34;https://github.com/aantonop/bitcoinbook/blob/develop/ch02.asciidoc&#34;&gt;&lt;em&gt;Chapter 2: How Bitcoin Works&lt;/em&gt;&lt;/a&gt;
from Andreas M. Antonopoulos, &lt;a href=&#34;https://github.com/aantonop/bitcoinbook&#34;&gt;&lt;em&gt;Mastering Bitcoin: Unlocking Digital
Cryptocurrencies&lt;/em&gt;&lt;/a&gt; book (also
available &lt;a href=&#34;http://www.amazon.com/Mastering-Bitcoin-Unlocking-Digital-Crypto-Currencies/dp/1449374042&#34;&gt;in
print&lt;/a&gt;).&lt;br /&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;center&gt;
&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/key/md9EiU6QZoWroa&#34;
width=&#34;476&#34; height=&#34;400&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34;
marginheight=&#34;0&#34; scrolling=&#34;no&#34;&gt;&lt;/iframe&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;caption&#34;&gt;
Note: ink markings may not appear in the
embedded viewer.  To see them, &lt;a href=&#34;http://bitcoin-class.org/classes/class1-post.pptx&#34;&gt;download the slides&lt;/a&gt;.
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;/center&gt;&lt;/p&gt;

&lt;h2 id=&#34;notes:e795e40ef5a742faa33766b4d984e8c7&#34;&gt;Notes&lt;/h2&gt;

&lt;p&gt;What is currency?&lt;/p&gt;

&lt;div class=&#34;biggap&#34;&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Every commodity admits two uses: (1) its proper use, (2) its use as an article of exchange.&lt;/em&gt;&lt;br /&gt;
Aristotle&amp;rsquo;s &lt;a href=&#34;https://play.google.com/books/reader?id=1J7N4eAKuhwC&amp;amp;printsec=frontcover&amp;amp;output=reader&amp;amp;hl=en&amp;amp;pg=GBS.PR13&#34;&gt;&lt;em&gt;Politics&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;What properties should a currency have?&lt;/p&gt;

&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;

&lt;p&gt;What is a &lt;em&gt;fiat currency&lt;/em&gt;?&lt;/p&gt;

&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;All these pieces of paper are, issued with as much solemnity and authority as if they were of pure gold or silver&amp;hellip; and indeed everybody takes them readily, for wheresoever a person may go throughout the Great Kaan&amp;rsquo;s dominions he shall find these pieces of paper current, and shall be able to transact all sales and purchases of goods by means of them just as well as if they were coins of pure gold.&lt;/em&gt;&lt;br /&gt;
Macro Polo (on Yuan Dynasty paper money, 13th century)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Was salt a fiat currency as used by the Romans?  Was salt a fiat currency as used by the Han Dynasty?&lt;/p&gt;

&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;http://sinosphere.blogs.nytimes.com/2014/11/21/chinas-millenniums-old-salt-monopoly-no-match-for-economic-reform/&#34;&gt;&lt;em&gt;China’s Millenniums-Old Salt Monopoly No Match for Economic Reform&lt;/em&gt;&lt;/a&gt;, New York Times, 21 November 2014.&lt;/p&gt;

&lt;h2 id=&#34;designing-a-digital-currency:e795e40ef5a742faa33766b4d984e8c7&#34;&gt;Designing a Digital Currency&lt;/h2&gt;

&lt;p&gt;What are the drawbacks of using a centralized bank to record transactions?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;What race conditions could occur when you make a purchase with a credit card today?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;What is recorded in the bitcoin ledger?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;h2 id=&#34;discussion-questions:e795e40ef5a742faa33766b4d984e8c7&#34;&gt;Discussion Questions&lt;/h2&gt;

&lt;p&gt;How well does US paper money work as a currency?&lt;/p&gt;

&lt;p&gt;Why are there &lt;a href=&#34;https://angel.co/cryptocurrency-2&#34;&gt;over 800 cryptocurrency startups&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;How big do you expect the bitcoin blockchain to be on the last day of
class (December 7, 2:00pm)?  (closest answer wins!)&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
