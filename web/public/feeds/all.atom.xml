<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Cryptocurrency Cafe</title><link href="http://bitcoin-class.org/" rel="alternate"></link><link href="http://bitcoin-class.org/feeds/all.atom.xml" rel="self"></link><id>http://bitcoin-class.org/</id><updated>2015-06-09T00:00:00-04:00</updated><entry><title>Fall 2015 Cryptocurrency Cabal Course</title><link href="http://bitcoin-class.org/fall-2015-cryptocurrency-cabal-course.html" rel="alternate"></link><updated>2015-06-09T00:00:00-04:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-06-09:fall-2015-cryptocurrency-cabal-course.html</id><summary type="html">&lt;p&gt;&lt;em&gt;Cryptocurrency Cabal&lt;/em&gt; will be offered in Fall 2015.  It is listed as a
cs4501 (Special Topics in Computer Science) with class meetings Mondays
and Wednesdays, 2:00-3:15pm in Olsson Hall 120.
The expected background for the Fall 2015 course is having completed
cs2150 and cs3102 (or equivalent experience and knowledge in some other
way).  Exceptions will be made for students who bring some other
interesting background or perspective to the class.&lt;/p&gt;
&lt;p&gt;This site is all the materials from the Spring 2015 course.  The
&lt;a href="http://bitcoin-class.org/pages/syllabus.html"&gt;syllabus&lt;/a&gt; for this
semester's course will change some for the next version of the course,
but that page and the &lt;a href="http://bitcoin-class.org"&gt;rest of the material on this
site&lt;/a&gt; will give you a good idea what to
expect.  &lt;/p&gt;
&lt;p&gt;If you are interested in joining the course, contact &lt;a href="http://www.cs.virginia.edu/evans"&gt;David Evans&lt;/a&gt;.&lt;/p&gt;</summary></entry><entry><title>Cryptocurrency Projects</title><link href="http://bitcoin-class.org/cryptocurrency-projects.html" rel="alternate"></link><updated>2015-05-04T00:00:00-04:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-05-04:cryptocurrency-projects.html</id><summary type="html">&lt;p&gt;The final projects are now all posted below.  Lots of cool projects to
look at and try!  I hope many of these will continue to be developed
over the summer.&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
[ &lt;b&gt;&lt;a href="#bitcoin"&gt;Analyzing Bitcoin in Practice&lt;/a&gt;&lt;/b&gt; |
  &lt;b&gt;&lt;a href="#applications"&gt;Bitcoin Applications&lt;/a&gt;&lt;/b&gt; |
  &lt;b&gt;&lt;a href="#pointcoin"&gt;PointCoin Projects&lt;/a&gt;&lt;/b&gt;
]
   &lt;/center&gt;&lt;/p&gt;
&lt;p&gt;&lt;a name="bitcoin"&gt;&lt;/p&gt;
&lt;h1&gt;Analyzing Bitcoin in Practice&lt;/h1&gt;
&lt;p&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Inside Bitcoin Exchanges&lt;/h2&gt;
&lt;p&gt;Alex Coffin, Ankit Gupta, Corrigan Blanchfield, and Tara Raj&lt;/p&gt;
&lt;p&gt;&lt;a href="http://bitcoin-class.weebly.com/"&gt;Project Link&lt;/a&gt;&lt;br /&gt;
&lt;a href="http://visualize.bitcoin-class.org:8000/"&gt;Sankey Visualizer&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;a href="http://visualize.bitcoin-class.org:8000/"&gt;
&lt;img alt="Bitcoin Address-to-Address Visualizer" src="http://bitcoin-class.org/projects/visualizer-small.png" /&gt;
&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;This project takes a look into Bitcoin exchanges (Coinbase and Circle)
to formulate a methodology by which we can understand how various
exchanges operate to better invest in Bitcoin.&lt;/p&gt;
&lt;p&gt;In our project we explore strategies such as transaction visualization,
taint analysis, fulfillment processes, and pricing models to create an
evaluation methodology.&lt;/p&gt;
&lt;h2&gt;Examining Anonymous Market Places&lt;/h2&gt;
&lt;p&gt;Max Serpe and Peter Gregrowski&lt;/p&gt;
&lt;p&gt;In order to better understand anonymous market places and how they work,
we conducted research and hands-on transactions on the Agora Dark
Market.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/rmserp12/projectCrypto/blob/master/README.md"&gt;Project (github)&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Analysis of Locking Scripts in the Blockchain&lt;/h2&gt;
&lt;p&gt;Saba Eskandarian&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Description:&lt;/strong&gt; This project aimed to learn about what kinds of unusual
  scripts are being used in bitcoin transactions and how this has
  changed over time by creating a script that analyzes the blockchain
  and keeps track of unusual transactions which are then explorable via
  a web page and reports of script usage generated by the script.&lt;/p&gt;
&lt;p&gt;Links: 
&lt;a href="https://github.com/SabaEskandarian/CryptocurrencyProject/blob/master/README.md"&gt;README.md&lt;/a&gt;&lt;br /&gt;
&lt;a href="https://github.com/SabaEskandarian/CryptocurrencyProject"&gt;github&lt;/a&gt; (github repo itself)&lt;/p&gt;
&lt;h2&gt;Bitcoin Price History&lt;/h2&gt;
&lt;p&gt;Oriana Ngo&lt;/p&gt;
&lt;p&gt;&lt;em&gt;An analysis on the events affecting bitcoin market price&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Description:&lt;/strong&gt; Earlier in bitcoin, international events and news
stories had a very immediate and significant effect on the bitcoin
market price, resulting in high volatility; my project examines this
effect to analyze which factors affected bitcoin and the explanation
behind it.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://prezi.com/r1zc6ukat_og/?utm_campaign=share&amp;amp;utm_medium=copy&amp;amp;rc=ex0share"&gt;Prezi Presentation (Part
2)&lt;/a&gt;
- Cryptocurrency Reward Block Halving. &lt;/p&gt;
&lt;iframe id="iframe_container" frameborder="0" webkitallowfullscreen="" mozallowfullscreen="" allowfullscreen="" width="550" height="400" src="https://prezi.com/embed/r1zc6ukat_og/?bgcolor=ffffff&amp;amp;lock_to_path=0&amp;amp;autoplay=0&amp;amp;autohide_ctrls=0#"&gt;&lt;/iframe&gt;

&lt;p&gt;In-depth look at one of the past
"native" (occurred strictly within bitcoin) and historical events that
effected bitcoin price history and was not covered in the timeline.
Because another bitcoin halving will occur soon and once again affect
the market price, I felt it important and supplementary to include.
This part also serves as a prediction for the next halving.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://prezi.com/zi0kbca2bc3z/?utm_campaign=share&amp;amp;utm_medium=copy&amp;amp;rc=ex0share"&gt;Prezi Presentation (Part 1)&lt;/a&gt; - Bitcoin Market Prize History&lt;/p&gt;
&lt;iframe id="iframe_container" frameborder="0" webkitallowfullscreen="" mozallowfullscreen="" allowfullscreen="" width="550" height="400" src="https://prezi.com/embed/zi0kbca2bc3z/?bgcolor=ffffff&amp;amp;lock_to_path=0&amp;amp;autoplay=0&amp;amp;autohide_ctrls=0#"&gt;&lt;/iframe&gt;

&lt;p&gt;Report: &lt;a href="http://bitcoin-class.org/projects/ngo.pdf"&gt;PDF&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Cryptocurrency Survival: A Price Analysis of Bitcoin&lt;/h2&gt;
&lt;p&gt;Avinash Ramesh&lt;/p&gt;
&lt;p&gt;&lt;a href="https://btcpriceanalysis.wordpress.com/"&gt;Project Site&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This project aimed to understand the factors that affect Bitcoin's 
price, as well as to examine and understand whether Bitcoin will be 
adopted in the future.&lt;/p&gt;
&lt;h2&gt;Subsidy Studies&lt;/h2&gt;
&lt;p&gt;Jacob Rosenberg and Laurence Meyers&lt;/p&gt;
&lt;p&gt;An examination of the economic impact that halving the mining subsidy
will have on the popularity and price of Bitcoin.  &lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.google.com/presentation/d/1QEHnTUDciIchYAopERUmiwY39IfP3yyxrn8VZ9cXwSc/edit?usp=sharing"&gt;Presentation (Slides)&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Bitcoin Arbitrage&lt;/h2&gt;
&lt;p&gt;Sam Abbate&lt;/p&gt;
&lt;p&gt;Explores the potential for arbitrage opportunity within Bitcoin
exchanges, by creating an automated tool to locate and present exchange
opportunities with the greatest potential profits.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/sabbate/BitcoinArbitrage/blob/master/README.md"&gt;https://github.com/sabbate/BitcoinArbitrage/blob/master/README.md&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;SHA-256 and Bitcoin&lt;/h2&gt;
&lt;p&gt;Jeremy Gabalski&lt;/p&gt;
&lt;p&gt;An Analysis of SHA256 and the use of ASIC Hashing Hardware on Bitcoin&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.google.com/presentation/d/10dsWd85N-PjWefId25ZtqdDkB0CmqAdWLchiCAN6GSY/edit?usp=sharing"&gt;Presentation (Slides)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a name="applications"&gt;&lt;/p&gt;
&lt;h1&gt;Bitcoin Applications&lt;/h1&gt;
&lt;p&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;CryptoKupa&lt;/h2&gt;
&lt;p&gt;Ori Shimony&lt;/p&gt;
&lt;p&gt;A scheme for decentralized communal funds on the blockchain.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://bitcoin-class.org/projects/CryptoKupa.pdf"&gt;Paper (PDF)&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Loans and Financial Instruments in the Bitcoin Marketplace&lt;/h2&gt;
&lt;p&gt;Our project aims to examine the current state of Bitcoin lending,
propose changes to the current system, and analyze the application of
the Credit Default Swap as a solution to keeping Bitcoin lending
anonymous.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://bitcoin-class.org/projects/trisha-merlin.pdf"&gt;Report (PDF)&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Mobile Multisignature Wallet&lt;/h2&gt;
&lt;p&gt;Will Emmanuel and Kevin Hoffman&lt;/p&gt;
&lt;p&gt;The first multi-signature Bitcoin wallet for iOS. &lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/willemmanuel/MultiSig"&gt;Project (github)&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Scro - An Escrow Service&lt;/h2&gt;
&lt;p&gt;Kyle Angelotti and Michelle Wang&lt;/p&gt;
&lt;p&gt;Scro is an escrow wallet service that aims to make a safer marketplace
for merchants.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://ec2-54-187-58-176.us-west-2.compute.amazonaws.com/"&gt;Project Link&lt;/a&gt;&lt;br /&gt;
&lt;a href="http://bitcoin-class.org/projects/michelle-kyle.pdf"&gt;Report&lt;/a&gt;&lt;br /&gt;
&lt;a href="https://github.com/kangelot/PointPies"&gt;Code (github)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a name="pointcoin"&gt;&lt;/p&gt;
&lt;h1&gt;PointCoin Projects&lt;/h1&gt;
&lt;p&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Kickstarting PointCoin&lt;/h2&gt;
&lt;p&gt;Jake Shankman &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Description:&lt;/strong&gt; Kickstarting PointCoin aims to remove many of the
"issues of trust" present in traditional crowd funding (like Kickstarter
and Indiegogo) via the implementation of assurance contracts in the
PointCoin protocol; it also serves as a way to expand the uses and
appeal of PointCoin beyond standard transactions.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/jshankman/pointcoinj/wiki"&gt;PointCoinJ Wiki&lt;/a&gt;&lt;br /&gt;
&lt;a href="https://github.com/jshankman/pointhouse/wiki"&gt;Pointhouse&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Remembar&lt;/h2&gt;
&lt;p&gt;Joey Weate and Charles Harding&lt;/p&gt;
&lt;p&gt;Remembar is a Google Chrome Extension that saves your PointCoin address and generates a unique QR code in order to enable quick transactions and facilitate the sharing of PointCoin. &lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/JoeWeate/PointCoinExtension"&gt;Project (github)&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Pointlist&lt;/h2&gt;
&lt;p&gt;Anat Gilboa and Benjamin Edgar&lt;/p&gt;
&lt;p&gt;A cryptocurrency marketplace for PointCoin&lt;/p&gt;
&lt;p&gt;&lt;a href="http://github.com/benedgar/pointlist"&gt;Project Site (github)&lt;/a&gt;&lt;br /&gt;
&lt;a href="http://ec2-52-24-65-30.us-west-2.compute.amazonaws.com/"&gt;Demo Site&lt;/a&gt;&lt;/p&gt;</summary></entry><entry><title>Final Projects</title><link href="http://bitcoin-class.org/final-projects.html" rel="alternate"></link><updated>2015-04-29T00:00:00-04:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-04-29:final-projects.html</id><summary type="html">&lt;h2&gt;Final Project Submissions&lt;/h2&gt;
&lt;p&gt;Your final project submissions are due on &lt;strong&gt;Sunday, 3 May&lt;/strong&gt; at
&lt;strong&gt;11:59pm&lt;/strong&gt;.  If you anticipate any problems submitting your final
project on time, please contact me by Friday to discuss.&lt;/p&gt;
&lt;p&gt;For most teams, I hope your final project submission will be an email
with subject line &lt;strong&gt;Cryptocurrency Project&lt;/strong&gt; and cc-ing all of your team
members.  The email should be plaintext containing:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A title for your project (this is the title I will use on the public
page listing all the projects).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A one-sentence description of your project.  This should be a clear,
well-written sentence that will be enough for someone to understand what
you did and why.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A URL that points to a publicly-viewable web page that describes your
project.  The linked page can (and probably should) contain links to
other pages (e.g., a website that is your actual project or a github
repo with your project code).  For example, the link you send could be a
link to &lt;em&gt;http://my-project-site.org/about.html&lt;/em&gt; or
&lt;em&gt;https://github.com/your-repo/README.md&lt;/em&gt;, which is a page describing
your project, as well as containing links to the main project site.
Please try to put your project site somewhere that will not expire when
you graduate from UVa, but that can survive forever.  &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It is not necessary to submit a separate PDF report, but you may do so
if there are things you do not want to put on a public website, or that
you think benefit from being written in a more formal way.&lt;/p&gt;
&lt;h2&gt;Course Feedback&lt;/h2&gt;
&lt;p&gt;Since I'll be offering a new version of this course in the fall, I would
much appreciate your feedback. Indeed, you already agreed to this on the
&lt;a href="http://bitcoin-class.org/pages/syllabus.html"&gt;course syllabus&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;b&gt;I will provide useful feedback.&lt;/b&gt; I realize that this is a new and
 experimental course, and it is important that I let the course staff
 know what they need to improve the course. I will not wait until the
 end of the course to make the course staff aware of any problems. I
 will provide feedback either anonymously or by contacting the course
 staff directly. &lt;b&gt;I will fill out all requested surveys honestly and
 thoroughly&lt;/b&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There are three possible ways for you to do this:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Arrange (by email or finding me in person) a time to meet with me for
coffee/lunch (I'll buy).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fill out this survey (which can be done anonymously): &lt;a href="http://goo.gl/forms/UigYUO4U8K"&gt;&lt;em&gt;http://goo.gl/forms/UigYUO4U8K&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Send me an email with your thoughts (including at least one concrete
suggestion for what to do next semester).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;(You are welcome to do more than one of these, but everyone should do at
least one of them!)&lt;/p&gt;
&lt;p&gt;Thanks again for all of your contributions to the class, and I look
forward to seeing your final projects.&lt;/p&gt;
&lt;p&gt;--- Dave&lt;/p&gt;</summary></entry><entry><title>Class 28: Presentations 3</title><link href="http://bitcoin-class.org/class-28-presentations-3.html" rel="alternate"></link><updated>2015-04-27T00:00:00-04:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-04-27:class-28-presentations-3.html</id><summary type="html">&lt;h3&gt;PointList: the PointCoin Marketplace&lt;/h3&gt;
&lt;p&gt;Anat Gilboa, Benjamin Edgar&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.google.com/a/virginia.edu/presentation/d/1NbO1gX0S29MI52p7YxykxJL6bqR__RYOjoriyaqhsps/edit?usp=sharing"&gt;Presentation (Google Slides)&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;PointCoin Pizza &amp;mdash; Revamped&lt;/h3&gt;
&lt;p&gt;Kyle Angelotti and Michelle Wang&lt;/p&gt;
&lt;p&gt;&lt;a href="http://bitcoin-class.org/classes/class28/pizza.pptx"&gt;Slides (PPTX)&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Remembar&lt;/h3&gt;
&lt;p&gt;Joey Weate, Charlie Harding&lt;/p&gt;
&lt;h3&gt;Examining Anonymous Marketplaces&lt;/h3&gt;
&lt;p&gt;Max Serpe, Peter Gregrowski&lt;/p&gt;
&lt;h3&gt;Script Analysis in the Blockchain&lt;/h3&gt;
&lt;p&gt;Saba Eskandarian&lt;/p&gt;
&lt;p&gt;&lt;a href="http://bitcoin-class.org/classes/class28/saba.pdf"&gt;Slides (PDF)&lt;/a&gt;&lt;/p&gt;</summary></entry><entry><title>Class 27: Presentations 2</title><link href="http://bitcoin-class.org/class-27-presentations-2.html" rel="alternate"></link><updated>2015-04-22T00:00:00-04:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-04-22:class-27-presentations-2.html</id><summary type="html">&lt;h1&gt;Project Presentations&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Wednesday, 22 April&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;Cryptocurrency Arbitrage&lt;/h3&gt;
&lt;p&gt;Sam Abbate&lt;/p&gt;
&lt;p&gt;&lt;a href="http://bitcoin-class.org/classes/class27/Arbitrage.pptx"&gt;Slides (PPTX)&lt;/a&gt;&lt;br /&gt;
&lt;a href="http://bitcoin-class.org/classes/class27/Arbitrage.py"&gt;Code (Python)&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Subsidy Studies&lt;/h3&gt;
&lt;p&gt;Laurence Meyers, Jacob Rosenberg&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.google.com/presentation/d/1QEHnTUDciIchYAopERUmiwY39IfP3yyxrn8VZ9cXwSc/edit?usp=sharing_eid&amp;amp;invite=CNW5qakH"&gt;Presentation (Google Slides)&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Multisignature Mobile Wallets&lt;/h3&gt;
&lt;p&gt;William Emmanuel and Kevin Hoffman &lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.google.com/a/virginia.edu/presentation/d/1hMXAphAEbvUuWeyJJLGWqS8OWGZPpYe3q216Gu-0l-U/edit?usp=sharing"&gt;Presentation (Google Slides)&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Cryptocurrency Survival&lt;/h3&gt;
&lt;p&gt;Avinash Ramesh&lt;/p&gt;
&lt;p&gt;&lt;a href="http://bitcoin-class.org/classes/class27/avinash.pptx"&gt;Slides (PPTX)&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;CryptoKupa: A Decentralized Banking Scheme for Communal Funds&lt;/h3&gt;
&lt;p&gt;Ori Shimony&lt;/p&gt;
&lt;p&gt;&lt;a href="https://prezi.com/-pn4ksh5yfha/cryptokupa/"&gt;Presentation (Prezi)&lt;/a&gt;&lt;/p&gt;</summary></entry><entry><title>Class 26: Presentations 1</title><link href="http://bitcoin-class.org/class-26-presentations-1.html" rel="alternate"></link><updated>2015-04-20T00:00:00-04:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-04-20:class-26-presentations-1.html</id><summary type="html">&lt;h1&gt;Project Presentations&lt;/h1&gt;
&lt;h3&gt;An Analysis and Breakdown of SHA Hashing in Bitcoin&lt;/h3&gt;
&lt;p&gt;Jeremy Gabalski&lt;/p&gt;
&lt;p&gt;&lt;a href="http://bitcoin-class.org/classes/class26/jeremy.pptx"&gt;Slides (PPTX)&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Financial Markets, Game Theory, and Self-Regulation&lt;/h3&gt;
&lt;p&gt;Merlin Zhang, Trisha Hajela&lt;/p&gt;
&lt;p&gt;&lt;a href="http://bitcoin-class.org/classes/class26/merlintrisha.pptx"&gt;Slides (PPTX)&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Bitcoin Market Price History&lt;/h3&gt;
&lt;p&gt;Oriana Ngo&lt;/p&gt;
&lt;p&gt;Presentation Links:&lt;br /&gt;
&lt;a href="http://prezi.com/zi0kbca2bc3z/?utm_campaign=share&amp;amp;utm_medium=copy"&gt;#1 (Prezi)&lt;/a&gt;&lt;br /&gt;
&lt;a href="https://www.youtube.com/watch?feature=player_detailpage&amp;amp;v=aw3OSTkdE-s#t=0"&gt;#2 (Youtube)&lt;/a&gt;&lt;br /&gt;
&lt;a href="https://www.youtube.com/watch?feature=player_detailpage&amp;amp;v=bKYkN2xDoZc#t=206"&gt;#3 (Youtube)&lt;/a&gt;&lt;br /&gt;
&lt;a href="http://prezi.com/r1zc6ukat_og/?utm_campaign=share&amp;amp;utm_medium=copy"&gt;#4 (Prezi)&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Kickstarting PointCoin&lt;/h3&gt;
&lt;p&gt;Jake Shankman&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.google.com/presentation/d/1Q1cZMRbsiUSaTvIWiU12wvzLGEbMeoM9GEIKSCg67Yc/edit?usp=sharing"&gt;Presentation (Google)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/jshankman/pointhouse/wiki/CryptoCurrency-Cafe-Pizza-Party"&gt;Instructions: &lt;em&gt;https://github.com/jshankman/pointhouse/wiki/CryptoCurrency-Cafe-Pizza-Party&lt;/em&gt;&lt;/a&gt;&lt;br /&gt;
&lt;a href="https://drive.google.com/folderview?id=0By93PLxW0NPrfmhEUTVIeUV6VjdORzNDWl9NeWRnRkdfRUlaOHExS3doR2NGOWZoUGd5WVU&amp;amp;usp=sharing"&gt;Directory Link&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Studying Coinbase Reserves as a means of Predicting Market Price&lt;/h3&gt;
&lt;p&gt;Alex Coffin, Ankit Gupta, Tara Raj, Corrigan Blanchfield&lt;/p&gt;
&lt;p&gt;&lt;a href="http://bitcoin-class.org/classes/class26/tara.pptx"&gt;Slides (PPTX)&lt;/a&gt;&lt;/p&gt;</summary></entry><entry><title>Final Presentations</title><link href="http://bitcoin-class.org/final-presentations.html" rel="alternate"></link><updated>2015-04-17T00:00:00-04:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-04-17:final-presentations.html</id><summary type="html">&lt;p&gt;The schedule for final project presentations is below.  Each group will
have 15 minutes total to present, including time for questions (so you
should plan to present for 10-12 minutes).&lt;/p&gt;
&lt;p&gt;[&lt;strong&gt;Note:&lt;/strong&gt; the schedule has been updated (April 17), but all people
impacted have been notified already.]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Monday, 20 April&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;An Analysis and Breakdown of SHA Hashing in Bitcoin&lt;/em&gt;&lt;br /&gt;
Jeremy Gabalski&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Financial Markets, Game Theory, and Self-Regulation&lt;/em&gt;&lt;br /&gt;
Merlin Zhang, Trisha Hajela&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Bitcoin Price History&lt;/em&gt;&lt;br /&gt;
Oriana Ngo&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Kickstarting PointCoin&lt;/em&gt;&lt;br /&gt;
Jake Shankman&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Studying Coinbase Reserves as a means of Predicting Market Price&lt;/em&gt;&lt;br /&gt;
Alex Coffin, Ankit Gupta, Tara Raj, Corrigan Blanchfield&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Wednesday, 22 April&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Universal Coin Converter&lt;/em&gt;&lt;br /&gt;
Sam Abbate&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Subsidy Studies&lt;/em&gt;&lt;br /&gt;
Laurence Meyers, Jacob Rosenberg&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Multisignature Mobile Wallets&lt;/em&gt;&lt;br /&gt;
William Emmanuel and Kevin Hoffman &lt;/p&gt;
&lt;p&gt;&lt;em&gt;Bitcoin Market Price&lt;/em&gt;&lt;br /&gt;
Avinash Ramesh&lt;/p&gt;
&lt;p&gt;&lt;em&gt;A Decentralized Banking Scheme for Communal Funds&lt;/em&gt;&lt;br /&gt;
Ori Shimony&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Monday, April 27&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;PointList: the PointCoin Marketplace&lt;/em&gt;&lt;br /&gt;
Anat Gilboa, Benjamin Edgar&lt;/p&gt;
&lt;p&gt;&lt;em&gt;PointCoin Pizza &amp;mdash; Revamped&lt;/em&gt;&lt;br /&gt;
Kyle Angelotti and Michelle Wang&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pointcoin Reddit Tip Bot&lt;/em&gt;&lt;br /&gt;
Joey Weate, Charlie Harding&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Examining Anonymous Marketplaces&lt;/em&gt;&lt;br /&gt;
Max Serpe, Peter Gregrowski&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Script Analysis in the Blockchain&lt;/em&gt;&lt;br /&gt;
Saba Eskandarian&lt;/p&gt;</summary></entry><entry><title>Class 25: Proof of Reserve</title><link href="http://bitcoin-class.org/class-25-proof-of-reserve.html" rel="alternate"></link><updated>2015-04-15T00:00:00-04:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-04-15:class-25-proof-of-reserve.html</id><summary type="html">&lt;p&gt;&lt;center&gt; 
&lt;iframe src="//www.slideshare.net/slideshow/embed_code/key/EkRzaMyu1XD5Qs" width="670" height="380" frameborder="2" marginwidth="0" marginheight="0" scrolling="no"&gt;&lt;/iframe&gt;
&lt;div class="caption"&gt;Note: due to a bug in
slideshare's updated player, ink markings no longer appear in the
viewer.  &lt;br&gt;If you &lt;a href="http://bitcoin-class.org/classes/class25/class25-inked.pptx"&gt;download the slides&lt;/a&gt;, they are present though.
Hopefully, the player will be fixed someday. &lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;h1&gt;Multiplicative Magic of Reserve Banking&lt;/h1&gt;
&lt;p&gt;J. Bradford De Long, &lt;a href="http://delong.typepad.com/print/20061012_LRWGDP.pdf"&gt;&lt;em&gt;Estimates of World GDP, One Million BC to Present&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;img src="/classes/class25/percapita.png" width=500&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;h1&gt;Proof of Reserve&lt;/h1&gt;
&lt;p&gt;Jack Doerner talked about his proof-of-reserve protocol.  If you'd like
to learn more about this, contact me or Jack directly to obtain the
working paper.&lt;/p&gt;</summary></entry><entry><title>Class 24: Silk Road</title><link href="http://bitcoin-class.org/class-24-silk-road.html" rel="alternate"></link><updated>2015-04-13T00:00:00-04:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-04-13:class-24-silk-road.html</id><summary type="html">&lt;h2&gt;Schedule&lt;/h2&gt;
&lt;p&gt;Each team will have an opportunity to present their project the last
three classes (April 20, 22 and 27).  The schedule is &lt;a href="http://bitcoin-class.org/final-presentations.html"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;center&gt; 
&lt;iframe src="//www.slideshare.net/slideshow/embed_code/46953307" width="670" height="380" frameborder="2" marginwidth="0" marginheight="0" scrolling="no"&gt;&lt;/iframe&gt;
&lt;div class="caption"&gt;Note: due to a bug in
slideshare's updated player, ink markings no longer appear in the
viewer.  &lt;br&gt;If you &lt;a href="http://bitcoin-class.org/classes/class24/class24-inked.pptx"&gt;download the slides&lt;/a&gt;, they are present though.
Hopefully, the player will be fixed someday. &lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;h1&gt;Legality of Bitcoin&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://bitcoin-class.org/classes/class24/FIN-2013-G001.pdf"&gt;&lt;em&gt;Application of FinCEN’s Regulations to Persons Administering,
Exchanging, or Using Virtual Currencies&lt;/em&gt;&lt;/a&gt; (March 2013)&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.irs.gov/uac/Newsroom/IRS-Virtual-Currency-Guidance"&gt;&lt;em&gt;IRS Virtual Currency Guidance : Virtual Currency Is Treated as Property for U.S. Federal Tax Purposes; General Rules for Property Transactions Apply&lt;/em&gt;&lt;/a&gt;, 24 March 2014.  &lt;a href="http://www.irs.gov/pub/irs-drop/n-14-21.pdf"&gt;Notice 2014-21&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Silk Road&lt;/h1&gt;
&lt;p&gt;Roger Dingledine, Nick Mathewson, Paul Syverson. &lt;a href="https://svn.torproject.org/svn/projects/design-paper/tor-design.pdf"&gt;&lt;em&gt;Tor: The Second-Generation Onion Router&lt;/em&gt;&lt;/a&gt;, &lt;a href="https://www.usenix.org/legacy/event/sec04/"&gt;USENIX Security Symposium 2004&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.torproject.org/"&gt;Tor Project Site&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://metrics.torproject.org/relayflags.html?graph=relayflags&amp;amp;start=2014-01-13&amp;amp;end=2015-04-13&amp;amp;flag=Running&amp;amp;flag=Exit&amp;amp;flag=Fast&amp;amp;flag=Stable"&gt;How many exit nodes?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Nicolas Christin, &lt;a href="http://arxiv.org/pdf/1207.7139.pdf"&gt;&lt;em&gt;Traveling the Silk Road: A measurement analysis of a large anonymous online marketplace&lt;/em&gt;&lt;/a&gt;. November 2012.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.nytimes.com/2014/01/19/business/eagle-scout-idealist-drug-trafficker.html?_r=0"&gt;&lt;em&gt;Eagle Scout. Idealist. Drug Trafficker?&lt;/em&gt;&lt;/a&gt;, New York Times, 18 Jan 2014.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.unitedstatescourts.org/federal/nysd/422824/"&gt;Documents from Ross Ulbright case&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://bitcoin-class.org/classes/class24/fbi.pdf"&gt;&lt;em&gt;Declaration of Christopher Tarbell&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://antilop.cc/sr/files/2015_03_06_ULBRICHT_motion_new_trial.pdf"&gt;Motion from 6 March&lt;/a&gt;&lt;/p&gt;</summary></entry><entry><title>Rest of Semester Survey</title><link href="http://bitcoin-class.org/rest-of-semester-survey.html" rel="alternate"></link><updated>2015-04-09T00:00:00-04:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-04-09:rest-of-semester-survey.html</id><summary type="html">&lt;p&gt;Please submit this form to provide some guidance on the rest of the semester: &lt;a href="http://goo.gl/forms/2jL6DWkI36"&gt;http://goo.gl/forms/2jL6DWkI36&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Mainly I need help on deciding how to schedule the final presentation
(over the last three scheduled courses, or during the final exam time on
April 30) and what topics there is the most interest in for the
remaining classes.&lt;/p&gt;</summary></entry><entry><title>Class 23: Sidechains</title><link href="http://bitcoin-class.org/class-23-sidechains.html" rel="alternate"></link><updated>2015-04-08T00:00:00-04:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-04-08:class-23-sidechains.html</id><summary type="html">&lt;p&gt;&lt;div class="phighlight"&gt;
   &lt;a href="http://bitcoin-class.org/classes/class23/class23.pdf"&gt;PDF version for printing&lt;/a&gt;
   &lt;/div&gt;&lt;/p&gt;
&lt;h2&gt;Schedule&lt;/h2&gt;
&lt;p&gt;Each team will have an opportunity to present their project the last
three classes (April 20, 22 and 27).  Teams will sign up for
presentation slots at Monday's class.  Final projects are due by 11:59pm
on Sunday, 3 May.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Thursday, 6pm Commerce School 223&lt;/strong&gt;.  &lt;em&gt;Entrepreneurial and Career
  Ventures in the world of Digital Currency&lt;/em&gt; Panel.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Friday, 10:45am Rice 242&lt;/strong&gt;.  Suman Jana, &lt;em&gt;Rise of the Planet of the
  Apps: Security and Privacy in the Age of Bad Code&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;center&gt; 
&lt;iframe src="//www.slideshare.net/slideshow/embed_code/46953167" width="670" height="380" frameborder="2" marginwidth="0" marginheight="0" scrolling="no"&gt;&lt;/iframe&gt;
&lt;div class="caption"&gt;Note: due to a bug in
slideshare's updated player, ink markings no longer appear in the
viewer.  &lt;br&gt;If you &lt;a href="http://bitcoin-class.org/classes/class23/class23-inked.pptx"&gt;download the slides&lt;/a&gt;, they are present though.
Hopefully, the player will be fixed someday. &lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;h1&gt;Bloom Filters&lt;/h1&gt;
&lt;p&gt;Burton Bloom, &lt;a href="http://bitcoin-class.org/classes/class23/bloom.pdf"&gt;&lt;em&gt;Space/Time Trade-offs in Hash Coding with Allowable
Errors&lt;/em&gt;&lt;/a&gt;, Communications of the ACM, July 1970.&lt;/p&gt;
&lt;h3&gt;Conventional Hash Table&lt;/h3&gt;
&lt;p&gt;Store collection of &lt;em&gt;N&lt;/em&gt; &lt;em&gt;b&lt;/em&gt;-bit elements, using &lt;em&gt;k&lt;/em&gt; &amp;gt; &lt;em&gt;N&lt;/em&gt; cells.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;H&lt;/em&gt; is pseudorandom function, &lt;em&gt;H&lt;/em&gt;(&lt;em&gt;x&lt;/em&gt;) &amp;larr; [0, &lt;em&gt;k&lt;/em&gt;).&lt;/p&gt;
&lt;div class="gap"&gt;

&lt;/div&gt;

&lt;h3&gt;Bloom Filter&lt;/h3&gt;
&lt;p&gt;Tradeoff: shrink size of array to store, accept false matches.  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;m&lt;/em&gt; = number of bits in array&lt;br /&gt;
&lt;em&gt;k&lt;/em&gt; = number of hash functions&lt;br /&gt;
&lt;em&gt;n&lt;/em&gt; = number of elements&lt;/p&gt;
&lt;p&gt;What is the probability a given element of the array is not selected by a particular hash function?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;What is the probability a given element of the array is not selected for
a particular element by any of the &lt;em&gt;k&lt;/em&gt; hash functions?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;After &lt;em&gt;n&lt;/em&gt; elements, what is the probability that an array bit is 0?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Probability of false match: (1 - (1 - 1/&lt;em&gt;m&lt;/em&gt;)&lt;sup&gt;&lt;em&gt;kn&lt;/em&gt;&lt;/sup&gt;)&lt;sup&gt;&lt;em&gt;k&lt;/em&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;How big should &lt;em&gt;m&lt;/em&gt; be to have less than 0.01% false positive rate for a block with 1000 addresses?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;How much privacy does using a bloom filter provide to an SPV wallet?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h1&gt;Merged Mining&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://en.bitcoin.it/wiki/Merged_mining_specification"&gt;Merged Mining Specification&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;How can Namecoin leverage Bitcoin mining power while maintaining its own blockchain and difficulty level?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;What are the advantages of enabing bitcoin miners to also mine namecoin?&lt;br /&gt;
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Bug: &lt;a href="https://bitcointalk.org/index.php?topic=310954"&gt;&lt;em&gt;Namecoin was stillborn, I had to switch off life-support&lt;/em&gt;&lt;/a&gt;&lt;br /&gt;
Patch: &lt;a href="https://github.com/namecoin/namecoin/commit/d70d01ff77310d3755891cb43cb2700b553019f4"&gt;https://github.com/namecoin/namecoin/commit/d70d01ff77310d3755891cb43cb2700b553019f4&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Side Chains&lt;/h1&gt;
&lt;p&gt;Why is it so hard to evolve bitcoin?
&lt;div class="gap"&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;Adam Back, Matt Corallo, Luke Dashjr, Mark Friedenbach, Gregory Maxwell, Andrew Miller, Andrew Poelstra, Jorge Timón, and Pieter Wuille.  &lt;a href="http://www.blockstream.com/sidechains.pdf"&gt;&lt;em&gt;Enabling Blockchain Innovations with Pegged Sidechains&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blockstream.com/"&gt;Blockstream&lt;/a&gt;&lt;/p&gt;</summary></entry><entry><title>Class 22: Subsidies, Ombuds, Melange</title><link href="http://bitcoin-class.org/class-22-subsidies-ombuds-melange.html" rel="alternate"></link><updated>2015-04-06T00:00:00-04:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-04-06:class-22-subsidies-ombuds-melange.html</id><summary type="html">&lt;h2&gt;Schedule&lt;/h2&gt;
&lt;p&gt;If your group didn't already send me a project progress update, please
remember to do so by midnight tonight.  Your update should either point
to your first deliverable (as specified in your proposal), or explain
what progress you've made and issues that have come up.  It does not
need to be a long or formal report, but enough to see that you're making
progress and raise any issues before it is too late to deal with them. &lt;/p&gt;
&lt;p&gt;Thursday evening at 6pm in Comm School (RRH) room 223 there will be a
bitcoin panel hosted by Carol Van Cleef, and including Alex Kuck, Nick
Skelsey, Josh Cincinnati, David Evans, and Denis Nekipelov as panelists.
Please fill in this form to make sure they order enough pizza:
&lt;a href="http://goo.gl/forms/1LJyaR9nCV"&gt;http://goo.gl/forms/1LJyaR9nCV&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Recap&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Subsidy Studies&lt;/em&gt;&lt;br /&gt;
Laurence Meyers, Jacob Rosenberg&lt;/p&gt;
&lt;p&gt;Alex Kuck and Nick Skelsey presented about &lt;a href="http://soapbox.systems/"&gt;Ombuds&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://hunterleath.com/"&gt;Hunter Leath&lt;/a&gt; presented about &lt;a href="https://namecoin.info/"&gt;Namecoin&lt;/a&gt; and
&lt;a href="http://www.getmelange.com/"&gt;Melange&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Reading&lt;/h2&gt;
&lt;p&gt;Next class, we'll talk about sidechains:&lt;/p&gt;
&lt;p&gt;Adam Back, Matt Corallo, Luke Dashjr, Mark Friedenbach, Gregory Maxwell, Andrew Miller, Andrew Poelstra, Jorge Timón, and Pieter Wuille.  &lt;a href="http://www.blockstream.com/sidechains.pdf"&gt;&lt;em&gt;Enabling Blockchain Innovations with Pegged Sidechains&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;</summary></entry><entry><title>Bitcoin Panel</title><link href="http://bitcoin-class.org/bitcoin-panel.html" rel="alternate"></link><updated>2015-04-01T00:00:00-04:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-04-01:bitcoin-panel.html</id><summary type="html">&lt;p&gt;There will be a panel on "Bitcoins and Entrepreneurial and Career
Ventures in the world of Digital Currency" next week Thursday, April 9
at 6pm (location to be announced soon).  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Discussion on Bitcoins and Entrepreneurial Ventures in the world of
Digital Currency will provide an introduction to the Bitcoin
Marketplace, entrepreneurial ventures in the space, and share tips for
navigating career opportunities. The session will also provide a forum
to discuss the technical, policy, economic related implications
associated with Bitcoins and digital currency. Pizza will be provided!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Panelists include:&lt;/p&gt;
&lt;p&gt;Carol Van Cleef (Panel Moderator, Attorney - Mannat, Phelps, &amp;amp; Phillips)&lt;br /&gt;
Josh Cincinnati (Entrepreneur)&lt;br /&gt;
David Evans (Computer Science)&lt;br /&gt;
Denis Nekipelov (Economics)&lt;br /&gt;
Alex Kuck (student - Bitcoin Entrepreneur)&lt;br /&gt;
Nick Skelsey (student - Bitcoin Entrepreneur)&lt;/p&gt;</summary></entry><entry><title>Class 21: Project Proposal Presentations 2</title><link href="http://bitcoin-class.org/class-21-project-proposal-presentations-2.html" rel="alternate"></link><updated>2015-04-01T00:00:00-04:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-04-01:class-21-project-proposal-presentations-2.html</id><summary type="html">&lt;p&gt;&lt;em&gt;PointCoin Pizza &amp;mdash; Revamped&lt;/em&gt; [&lt;a href="http://bitcoin-class.org/classes/class18/pizza.pptx"&gt;Slides&lt;/a&gt;]&lt;br /&gt;
Kyle Angelotti and Michelle Wang&lt;/p&gt;
&lt;p&gt;&lt;em&gt;PointList: the PointCoin Marketplace&lt;/em&gt;&lt;br /&gt;
Anat Gilboa, Benjamin Edgar&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Kickstarting PointCoin&lt;/em&gt;&lt;br /&gt;
Jake Shankman&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Studying Coinbase Reserves as a means of Predicting Market Price&lt;/em&gt;&lt;br /&gt;
Alex Coffin, Ankit Gupta, Tara Raj, Corrigan Blanchfield&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Anonymity in Practice&lt;/em&gt;&lt;br /&gt;
Satoshi Nakamoto&lt;/p&gt;
&lt;p&gt;&lt;em&gt;A Decentralized Banking Scheme for Communal Funds&lt;/em&gt;&lt;br /&gt;
Ori Shimony&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Bitcoin Market Price&lt;/em&gt;&lt;br /&gt;
Oriana Ngo and Avinash Ramesh&lt;/p&gt;</summary></entry><entry><title>Some Interesting Links</title><link href="http://bitcoin-class.org/some-interesting-links.html" rel="alternate"></link><updated>2015-04-01T00:00:00-04:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-04-01:some-interesting-links.html</id><summary type="html">&lt;p&gt;Here's a few interesting links relevant to several of the projects that were discussed today:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.nytimes.com/2015/03/31/nyregion/silk-road-case-federal-agents-charges.html?_r=2"&gt;&lt;em&gt;2 Ex-Federal Agents in Silk Road Case Are Charged With
Fraud&lt;/em&gt;&lt;/a&gt;, New York Times, 31 March 2015 --- the &lt;a href="https://s3.amazonaws.com/s3.documentcloud.org/documents/1697973/charges-against-former-federal-agents-in-silk.pdf"&gt;full
charges&lt;/a&gt;
are quite interesting reading, would be good to look for some of the
transactions mentioned in them in the blockchain.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.wsj.com/moneybeat/2015/03/29/interest-in-bitcoin-grows-on-wall-street/"&gt;&lt;em&gt;Interest in Bitcoin Grows on Wall Street&lt;/em&gt;&lt;/a&gt;, Wall Stree Journal, 29 March 2015.&lt;/p&gt;</summary></entry><entry><title>Class 20: Project Proposal Presentations 1</title><link href="http://bitcoin-class.org/class-20-project-proposal-presentations-1.html" rel="alternate"></link><updated>2015-03-30T00:00:00-04:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-03-30:class-20-project-proposal-presentations-1.html</id><summary type="html">&lt;p&gt;&lt;em&gt;Universal Coin Converter&lt;/em&gt;&lt;br /&gt;
Sam Abbate&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Script Analysis in the Blockchain&lt;/em&gt;&lt;br /&gt;
Saba Eskandarian&lt;/p&gt;
&lt;p&gt;&lt;em&gt;An Analysis and Breakdown of SHA Hashing in Bitcoin&lt;/em&gt; [&lt;a href="http://bitcoin-class.org/classes/class18/jeremy.pptx"&gt;Slides&lt;/a&gt;]&lt;br /&gt;
Jeremy Gabalski&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Multisignature Mobile Wallets&lt;/em&gt;&lt;br /&gt;
William Emmanuel and Kevin Hoffman &lt;/p&gt;
&lt;p&gt;&lt;em&gt;Examining Anonymous Marketplaces&lt;/em&gt;&lt;br /&gt;
Max Serpe, Peter Gregrowski&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Financial Markets, Game Theory, and Self-Regulation&lt;/em&gt;&lt;br /&gt;
Merlin Zhang, Trisha Hajela&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pointcoin Reddit Tip Bot&lt;/em&gt;&lt;br /&gt;
Joey Weate, Charlie Harding&lt;/p&gt;</summary></entry><entry><title>Office Hours Today</title><link href="http://bitcoin-class.org/office-hours-today.html" rel="alternate"></link><updated>2015-03-30T00:00:00-04:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-03-30:office-hours-today.html</id><summary type="html">&lt;p&gt;Nick isn't able to hold his scheduled office hours today.  I (Dave) will
be available until 5pm today.  We'll have regular office hours later
this week (4-5pm Thursday, Dave in Rice 507; noon-2pm Friday, Nick in
HackCville).  You are welcome and encouraged to use office hours to
discuss ideas and issues for your projects!&lt;/p&gt;</summary></entry><entry><title>Fall 2015 Course</title><link href="http://bitcoin-class.org/fall-2015-course.html" rel="alternate"></link><updated>2015-03-26T00:00:00-04:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-03-26:fall-2015-course.html</id><summary type="html">&lt;p&gt;A similar course, &lt;em&gt;Cryptocurrency Cabal&lt;/em&gt;, will be offered in Fall 2015.
It is listed as a cs4501 (Special Topics in Computer Science) with class
meetings Mondays and Wednesdays, 2:00-3:15pm in Olsson Hall 120.&lt;/p&gt;
&lt;p&gt;The &lt;a href="http://bitcoin-class.org/pages/syllabus.html"&gt;syllabus&lt;/a&gt; for this
semester's course will change some for the next version of the course,
but that page and the &lt;a href="http://bitcoin-class.org"&gt;rest of the material on this site&lt;/a&gt; will give you a
good idea what to expect.  The expected background for the Fall 2015
course is having completed cs2150 and cs3102 (or equivalent experience
and knowledge in some other way).  Exceptions will be made for students
who bring some other interesting background or perspective to the class.&lt;/p&gt;</summary></entry><entry><title>Class 19: Josh Cincinnati Visit</title><link href="http://bitcoin-class.org/class-19-josh-cincinnati-visit.html" rel="alternate"></link><updated>2015-03-25T00:00:00-04:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-03-25:class-19-josh-cincinnati-visit.html</id><summary type="html">&lt;p&gt;&lt;a href="http://bitbanter.com/"&gt;Josh Cincinnati&lt;/a&gt; visited the class and talked
about entrepreneurship connected to bitcoin.  You can follow Josh on
Twitter as &lt;a href="https://twitter.com/acityinohio"&gt;@acityinohio&lt;/a&gt;.  Also see
&lt;a href="http://www.blockcypher.com/"&gt;http://www.blockcypher.com&lt;/a&gt;.&lt;/p&gt;</summary></entry><entry><title>Project Proposal Presentations</title><link href="http://bitcoin-class.org/project-proposal-presentations.html" rel="alternate"></link><updated>2015-03-25T00:00:00-04:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-03-25:project-proposal-presentations.html</id><summary type="html">&lt;p&gt;Next week, each team will present their idea for the project.  You
should plan to have no more than 5-8 minutes to present your idea, and
then there will be some time for questions and discussion.  You can use
slides for your presentation (although it is fine is you want to present
without slides), but should have things set up on a laptop ready to go
when it is time for your team.  &lt;/p&gt;
&lt;p&gt;The schedule is below (but we won't rush the presentations Monday, so
some of the ones scheduled for Monday may be postponed to Wednesday).&lt;/p&gt;
&lt;h3&gt;Monday, 30 March&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Universal Coin Converter&lt;/em&gt;&lt;br /&gt;
Sam Abbate&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Script Analysis in the Blockchain&lt;/em&gt;&lt;br /&gt;
Saba Eskandarian&lt;/p&gt;
&lt;p&gt;&lt;em&gt;An Analysis and Breakdown of SHA Hashing in Bitcoin&lt;/em&gt; [&lt;a href="http://bitcoin-class.org/classes/class18/jeremy.pptx"&gt;Slides&lt;/a&gt;]&lt;br /&gt;
Jeremy Gabalski&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Multisignature Mobile Wallets&lt;/em&gt;&lt;br /&gt;
William Emmanuel and Kevin Hoffman &lt;/p&gt;
&lt;p&gt;&lt;em&gt;Examining Anonymous Marketplaces&lt;/em&gt;&lt;br /&gt;
Max Serpe, Peter Gregrowski&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Financial Markets, Game Theory, and Self-Regulation&lt;/em&gt;&lt;br /&gt;
Merlin Zhang, Trisha Hajela&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pointcoin Reddit Tip Bot&lt;/em&gt;&lt;br /&gt;
Joey Weate, Charlie Harding&lt;/p&gt;
&lt;h3&gt;Wednesday, 1 April&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;PointCoin Pizza &amp;mdash; Revamped&lt;/em&gt; [&lt;a href="http://bitcoin-class.org/classes/class18/pizza.pptx"&gt;Slides&lt;/a&gt;]&lt;br /&gt;
Kyle Angelotti and Michelle Wang&lt;/p&gt;
&lt;p&gt;&lt;em&gt;PointList: the PointCoin Marketplace&lt;/em&gt;&lt;br /&gt;
Anat Gilboa, Benjamin Edgar&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Kickstarting PointCoin&lt;/em&gt;&lt;br /&gt;
Jake Shankman&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Studying Coinbase Reserves as a means of Predicting Market Price&lt;/em&gt;&lt;br /&gt;
Alex Coffin, Ankit Gupta, Tara Raj, Corrigan Blanchfield&lt;/p&gt;
&lt;p&gt;&lt;em&gt;A Decentralized Banking Scheme for Communal Funds&lt;/em&gt;&lt;br /&gt;
Ori Shimony&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Bitcoin Market Price&lt;/em&gt;&lt;br /&gt;
Oriana Ngo and Avinash Ramesh&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Subsidy Studies&lt;/em&gt;&lt;br /&gt;
Laurence Meyers, Jacob Rosenberg&lt;/p&gt;</summary></entry><entry><title>Class 18: Useful Proofs-of-Work</title><link href="http://bitcoin-class.org/class-18-useful-proofs-of-work.html" rel="alternate"></link><updated>2015-03-23T00:00:00-04:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-03-23:class-18-useful-proofs-of-work.html</id><summary type="html">&lt;h2&gt;Schedule&lt;/h2&gt;
&lt;p&gt;Wednesday's class will be a visit from &lt;a href="http://bitbanter.com/"&gt;Josh
Cincinnati&lt;/a&gt;.  You are encouraged to read some of
his blog posts before his visit, including &lt;a href="http://bitbanter.com/2015/01/14/minimalist-socialism/"&gt;&lt;em&gt;Minimalist Socialism
through
Cryptocurrency&lt;/em&gt;&lt;/a&gt;
and &lt;a href="http://bitbanter.com/2015/02/20/lenovo-man-middle/"&gt;&lt;em&gt;Lenovo Under Sustained Man in Middle Management
Attack&lt;/em&gt;&lt;/a&gt;.  Josh
graduated from UVa in 2007 (double-majoring in Political &amp;amp; Social
Thought and Mathematics) and has been involved in &lt;a href="https://www.linkedin.com/pub/josh-cincinnati/5/944/98?trk=pub-pbmap"&gt;several interesting
companies since then&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Next week, each team will have an opportunity to present your project
idea.  The schedule will be posted separately soon.&lt;/p&gt;
&lt;p&gt;&lt;center&gt; 
&lt;iframe src="//www.slideshare.net/slideshow/embed_code/46251018" width="670" height="380" frameborder="2" marginwidth="0" marginheight="0" scrolling="no"&gt;&lt;/iframe&gt;
&lt;div class="caption"&gt;Note: due to a bug in
slideshare's updated player, ink markings no longer appear in the
viewer.  &lt;br&gt;If you &lt;a href="http://bitcoin-class.org/classes/class18/class18-inked.pptx"&gt;download the slides&lt;/a&gt;, they are present though.
Hopefully, the player will be fixed someday. &lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;h2&gt;Permacoin&lt;/h2&gt;
&lt;p&gt;Andrew Miller, Ari Juels, Elaine Shi, Bryan Parno, and Jonathan Katz. 
&lt;a href="http://cs.umd.edu/~amiller/permacoin.pdf"&gt;&lt;em&gt;Permacoin: Repurposing Bitcoin Work for Data Preservation&lt;/em&gt;&lt;/a&gt;.  IEEE Symposium on Security and Privacy ("Oakland") 2014.&lt;/p&gt;</summary></entry><entry><title>Class 17: Project Discussion</title><link href="http://bitcoin-class.org/class-17-project-discussion.html" rel="alternate"></link><updated>2015-03-18T00:00:00-04:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-03-18:class-17-project-discussion.html</id><summary type="html">&lt;p&gt;Welcome &lt;a href="http://goo.gl/NwvPMA"&gt;Maxwell&lt;/a&gt;!&lt;/p&gt;</summary></entry><entry><title>Class 16: Alternate Cryptocurrencies</title><link href="http://bitcoin-class.org/class-16-alternate-cryptocurrencies.html" rel="alternate"></link><updated>2015-03-15T00:00:00-04:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-03-15:class-16-alternate-cryptocurrencies.html</id><summary type="html">&lt;h2&gt;Project Proposals&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Project Proposals&lt;/strong&gt; are due &lt;strong&gt;Thursday, 19 March&lt;/strong&gt; (11:59pm).  Send
  your proposal by email to &lt;a
  href="mailto:evans@virginia.edu"&gt;&lt;em&gt;evans@virginia.edu&lt;/em&gt;&lt;/a&gt; with
  subject line &lt;code&gt;Project Proposal&lt;/code&gt;.  Your email should contain at least:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Title of your Proposal - a short title that should get across what you are doing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Team members list - a list of everyone on your team.  You should
&lt;code&gt;cc:&lt;/code&gt; all the team members in the email so I have one email to reply-all
to that will reach your full tem.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Motivation - explanation of why your project topic is worthwhile.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Project Plan - what you plan to do.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;First deliverable - description of what you will have ready to submit
for the first deadline, &lt;strong&gt;Sunday, 5 April&lt;/strong&gt; (note that you will be
presenting about your project in class on &lt;strong&gt;Wednesday, 1 April&lt;/strong&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you are looking for teammates for your project, or searching for a
project idea, come to my office hours after class today if possible.&lt;/p&gt;
&lt;p&gt;&lt;center&gt; 
&lt;iframe src="//www.slideshare.net/slideshow/embed_code/45906874" width="670" height="380" frameborder="2" marginwidth="0" marginheight="0" scrolling="no"&gt;&lt;/iframe&gt;
&lt;div class="caption"&gt;Note: due to a bug in
slideshare's updated player, ink markings no longer appear in the
viewer.  &lt;br&gt;If you &lt;a href="http://bitcoin-class.org/classes/class16/class16-inked.pptx"&gt;download the slides&lt;/a&gt;, they are present though.
Hopefully, the player will be fixed someday. &lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;h2&gt;Alternate Cryptocurrencies&lt;/h2&gt;
&lt;p&gt;How can decentralized cryptocurrencies be different from bitcoin?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Variations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Economics: deflationary vs. inflationary&lt;/li&gt;
&lt;li&gt;Proof-of-work: possible advantages of other proof-of-work mechanisms&lt;/li&gt;
&lt;li&gt;Consensus mechanism: majority of computing power vs. alternatives&lt;/li&gt;
&lt;li&gt;Scripting language for transactions: simpler vs. more powerful and expressive&lt;/li&gt;
&lt;li&gt;Parameters: speed of blocks, size of transactions&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Dogecoin!&lt;/h2&gt;
&lt;p&gt;What is a &lt;em&gt;key derivation function&lt;/em&gt;?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Why is SHA-256 is horrible key derivation function today?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Colin Percival, &lt;a href="http://bitcoin-class.org/classes/class16/scrypt.pdf"&gt;&lt;em&gt;Stronger Key Derivation via Sequential
Memory-Hard Functions&lt;/em&gt;&lt;/a&gt;, 2009. &lt;a href="http://www.daemonology.net/papers/scrypt-slides.pdf"&gt;presentation slides&lt;/a&gt; including &lt;a href="http://xkcd.com/538/"&gt;XKCD 538&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;What is a &lt;em&gt;memory-hard&lt;/em&gt; algorithm?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Is a memory-hard algorithm better for a cryptocurrency proof-of-work
than a compute-intensive one like SHA-256?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Andrew Miller, Ari Juels, Elaine Shi, Bryan Parno, and Jonathan
Katz. &lt;a href="http://bitcoin-class.org/classes/class16/permacoin.pdf"&gt;&lt;em&gt;Permacoin: Repurposing Bitcoin Work for Data
Preservation&lt;/em&gt;&lt;/a&gt;.  IEEE Security and Privacy
("Oakland") 2014.&lt;/p&gt;
&lt;h4&gt;Interesting Video&lt;/h4&gt;
&lt;p&gt;If you're still looking for ideas for your project still, this video may give you some good ideas:
&lt;a href="https://www.youtube.com/watch?v=rQ3e1Pzu7iI"&gt;&lt;em&gt;What Satoshi Didn't Know&lt;/em&gt;&lt;/a&gt;, Gavin Anderson, DevCore Boston 2015.  (This talk gets into the history of bitcoin and lots of issues with flaws in its design, and raises some interesting possibilities for future work - e.g., are there ways to use old unspent transactions to solve network problems without spending them?)&lt;/p&gt;</summary></entry><entry><title>Office Hours Snowed Out (now on Skype)</title><link href="http://bitcoin-class.org/office-hours-snowed-out-now-on-skype.html" rel="alternate"></link><updated>2015-03-05T00:00:00-05:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-03-05:office-hours-snowed-out-now-on-skype.html</id><summary type="html">&lt;p&gt;I won't be able to hold my scheduled office hours today due to the
expected megastorm.  I will be available by skype (evans1629) during the
scheduled time (4-5pm) if anyone has project ideas to disucss or other
questions.&lt;/p&gt;
&lt;p&gt;Stay warm and enjoy "Spring" break!&lt;/p&gt;</summary></entry><entry><title>Class 15: Script</title><link href="http://bitcoin-class.org/class-15-script.html" rel="alternate"></link><updated>2015-03-04T00:00:00-05:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-03-04:class-15-script.html</id><summary type="html">&lt;h2&gt;Schedule&lt;/h2&gt;
&lt;p&gt;&lt;div class="todo"&gt; &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://bitcoin-class.org/pages/project2.html"&gt;Project 2 Part
  2&lt;/a&gt; is due &lt;strong&gt;tomorrow&lt;/strong&gt; (Thursday, 5 March).&lt;br /&gt;
  Submission is by email, send a PDF with your
  answers to questions 5-9.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Keep thinking about ideas for your project.  The first deliverable for
  the project will be a preliminary proposal due on March 19.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enjoy your Spring Break!
   &lt;/div&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;center&gt; 
&lt;iframe src="//www.slideshare.net/slideshow/embed_code/45811474" width="670" height="380" frameborder="2" marginwidth="0" marginheight="0" scrolling="no"&gt;&lt;/iframe&gt;
&lt;div class="caption"&gt;Note: due to a bug in
slideshare's updated player, ink markings no longer appear in the
viewer.  &lt;br&gt;If you &lt;a href="http://bitcoin-class.org/classes/class15/class15-inked.pptx"&gt;download the slides&lt;/a&gt;, they are present though.
Hopefully, the player will be fixed someday. &lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;h1&gt;Bitcoin Script&lt;/h1&gt;
&lt;p&gt;Transaction outputs in bitcoin are protected by &lt;em&gt;locking scripts&lt;/em&gt;, and
must be unlocked by &lt;em&gt;unlocking scripts&lt;/em&gt;.  The scripts are written in a
simple (compared to, say, the Java Virtual Machine language, but quite
complex and poorly specified for what one might expect would be needed
for bitcoin transactions) stack-based language.  A transaction output is
not unlocked unless an unlocking script is provided such that the result
of executing the unlocking script, followed by executing the locking
script, is a stack with value True on top (and no invalid transaction
results during the execution).&lt;/p&gt;
&lt;p&gt;Some script instructions:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Opcode&lt;/th&gt;
&lt;th&gt;Input&lt;/th&gt;
&lt;th&gt;Output&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;OP_1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Pushes a &lt;strong&gt;1&lt;/strong&gt; (True) on the stack&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;OP_DUP&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;a&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;a&lt;/em&gt; &lt;em&gt;a&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;Duplicates the top element of the stack&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;OP_ADD&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;a&lt;/em&gt; &lt;em&gt;b&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;(&lt;em&gt;a&lt;/em&gt;+&lt;em&gt;b&lt;/em&gt;)&lt;/td&gt;
&lt;td&gt;Pushes the sum of the top two elements.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;OP_EQUAL&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;a&lt;/em&gt; &lt;em&gt;b&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;0&lt;/strong&gt; or &lt;strong&gt;1&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Pushes &lt;strong&gt;1&lt;/strong&gt; if the top two elements are exactly equal, otherwise &lt;strong&gt;0&lt;/strong&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;OP_VERIFY&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;a&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;If &lt;em&gt;a&lt;/em&gt; is not &lt;strong&gt;True&lt;/strong&gt; (&lt;strong&gt;1&lt;/strong&gt;), terminates as Invalid.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;OP_RETURN&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Terminates as Invalid.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;OP_EQUALVERIFY&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;a&lt;/em&gt; &lt;em&gt;b&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;If &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; are not equal, terminates as Invalid.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;OP_HASH160&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;a&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;H(&lt;em&gt;a&lt;/em&gt;)&lt;/td&gt;
&lt;td&gt;Pushes bitcoin address, RIPEMD(SHA256(&lt;em&gt;a&lt;/em&gt;)).&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Some more complex instructions:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;OP_IF&lt;/code&gt; [statements] &lt;code&gt;OP_ENDIF&lt;/code&gt; - If the top of the stack is &lt;strong&gt;1&lt;/strong&gt;, executes [statements].  Otherwise does nothing.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;OP_CHECKSIG&lt;/code&gt; - Pops two items from the stack, &lt;em&gt;publickey&lt;/em&gt; and &lt;em&gt;sig&lt;/em&gt;.
Verifies the entire transaction (known from node state, not the stack)
using the &lt;em&gt;publickey&lt;/em&gt; and &lt;em&gt;sig&lt;/em&gt;.  If the signature is valid, push &lt;strong&gt;1&lt;/strong&gt;;
otherwise, &lt;strong&gt;0&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;OP_1 OP_DUP OP_ADD OP_DUP OP_SUB OP_VERIFY&lt;/code&gt;
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;The most common locking script (send to public address):&lt;br /&gt;
&lt;code&gt;OP_DUP&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;OP_HASH160&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;OP_DATA20&lt;/code&gt; &lt;em&gt;(bitcoin address)&lt;/em&gt;&lt;br /&gt;
&lt;code&gt;OP_EQUALVERIFY&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;OP_CHECKSIG&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;What must be on the stack for the locking script to succeed (end with &lt;strong&gt;1&lt;/strong&gt; on top of stack)?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code&gt;OP_HASH160&lt;/code&gt;&lt;br /&gt;
[20-byte hash]&lt;br /&gt;
&lt;code&gt;OP_EQUAL&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;What must be on the stack for the locking script above ("Pay-to-Script-Hash") to succeed?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;According to &lt;a href="http://www.quantabytes.com/articles/a-survey-of-bitcoin-transaction-types"&gt;Most Popular Transaction
Scripts&lt;/a&gt;
(analysis of all transactions in first 290,000 blocks), the ninth most popular script is:
&lt;code&gt;OP_RETURN OP_DATA_40&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;What must be on the stack for the &lt;code&gt;OP_RETURN OP_DATA_40&lt;/code&gt; locking script to succeed (end with
&lt;strong&gt;1&lt;/strong&gt; on top of stack)? (Trick question: what happens to the coin
protected by this locking script?)
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Is the bitcoin scripting language Turing-complete?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;If you are not clear on what Turing-complete means, see &lt;a href="http://www.dori-mic.org"&gt;&lt;em&gt;Dori-Mic and the Universal Machine!&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;BTCD Code&lt;/h2&gt;
&lt;p&gt;Type: &lt;a href="https://github.com/btcsuite/btcd/blob/c153596542b3d87dd774c29aa5be5117ac01a234/txscript/script.go#L206"&gt;Script&lt;/a&gt; is the virtual machine the executes scripts (note that it has two Stacks) &lt;/p&gt;
&lt;p&gt;Execute a script: &lt;a href="https://github.com/btcsuite/btcd/blob/c153596542b3d87dd774c29aa5be5117ac01a234/txscript/script.go#L723"&gt;Execute&lt;/a&gt;&lt;br /&gt;
Execute one instruction: &lt;a href="https://github.com/btcsuite/btcd/blob/c153596542b3d87dd774c29aa5be5117ac01a234/txscript/script.go#L782"&gt;Step&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/btcsuite/btcd/blob/c153596542b3d87dd774c29aa5be5117ac01a234/txscript/opcode.go#L38"&gt;Opcodes&lt;/a&gt;&lt;br /&gt;
&lt;a href="https://github.com/btcsuite/btcd/blob/c153596542b3d87dd774c29aa5be5117ac01a234/txscript/opcode.go#L971"&gt;exec&lt;/a&gt; function executes one instruction  &lt;/p&gt;
&lt;p&gt;Some interesting opcode implementations:
&lt;a href="https://github.com/btcsuite/btcd/blob/c153596542b3d87dd774c29aa5be5117ac01a234/txscript/opcode.go#L1143"&gt;OP_IF&lt;/a&gt;&lt;br /&gt;
&lt;a href="https://github.com/btcsuite/btcd/blob/c153596542b3d87dd774c29aa5be5117ac01a234/txscript/opcode.go#L1235"&gt;OP_RETURN&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Bitcoin Core Code&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/bitcoin/bitcoin/blob/41e6e4caba9899ce7c165b0784461c55c867ee24/src/script/interpreter.cpp"&gt;script/interpreter.cpp&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/bitcoin/bitcoin/blob/41e6e4caba9899ce7c165b0784461c55c867ee24/src/script/interpreter.cpp#L524"&gt;OP_DUP&lt;/a&gt;&lt;br /&gt;
&lt;a href="https://github.com/bitcoin/bitcoin/blob/41e6e4caba9899ce7c165b0784461c55c867ee24/src/script/interpreter.cpp#L752"&gt;Crypto&lt;/a&gt;
&lt;a href="https://github.com/bitcoin/bitcoin/blob/41e6e4caba9899ce7c165b0784461c55c867ee24/src/script/interpreter.cpp#L785"&gt;OP_CHECKSIG&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Links&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.crmarsh.com/script-playground/"&gt;Script Playground&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Some interesting things you can do with bitcoin scripts:&lt;br /&gt;
&lt;a href="https://en.bitcoin.it/wiki/Contracts"&gt;Contracts&lt;/a&gt; (see also Nick Szabo's &lt;a href="http://szabo.best.vwh.net/formalize.html"&gt;&lt;em&gt;Formalizing and Securing Relationships on Public Networks&lt;/em&gt;&lt;/a&gt;&lt;br /&gt;
&lt;a href="http://eprint.iacr.org/2013/784"&gt;Secure Multiparty Computations&lt;/a&gt; (to implement lotteries)  &lt;/p&gt;
&lt;p&gt;The &lt;code&gt;OP_RETURN&lt;/code&gt;/pasted script execution bug doesn't even make this list of &lt;a href="http://www.coindesk.com/9-biggest-screwups-bitcoin-history/"&gt;&lt;em&gt;The 9 Biggest Screwups in Bitcoin History&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blockexplorer.com/rawblock/00000000000997f9fd2fe1ee376293ef8c42ad09193a5d2086dddf8e5c426b56"&gt;Block 71036&lt;/a&gt;&lt;/p&gt;</summary></entry><entry><title>Class 14: Selfish Mining</title><link href="http://bitcoin-class.org/class-14-selfish-mining.html" rel="alternate"></link><updated>2015-03-02T00:00:00-05:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-03-02:class-14-selfish-mining.html</id><summary type="html">&lt;h2&gt;Schedule&lt;/h2&gt;
&lt;p&gt;&lt;div class="todo"&gt; &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://bitcoin-class.org/pages/project2.html"&gt;Project 2 Part
  2&lt;/a&gt; is due next
  &lt;strong&gt;Thursday, 5 March.&lt;/strong&gt; Submission is by email, send a PDF with your
  answers to questions 5-9.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Keep thinking about ideas for your project.  The first deliverable for
  the project will be a preliminary proposal due on March 19.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;&lt;center&gt; 
&lt;iframe src="//www.slideshare.net/slideshow/embed_code/45339406" width="670" height="380" frameborder="2" marginwidth="0" marginheight="0" scrolling="no"&gt;&lt;/iframe&gt;
&lt;div class="caption"&gt;Note: due to a bug in
slideshare's updated player, ink markings no longer appear in the
viewer.  &lt;br&gt;If you &lt;a href="http://bitcoin-class.org/classes/class14/class14-inked.pptx"&gt;download the slides&lt;/a&gt;, they are present though.
Hopefully, the player will be fixed someday. &lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;h2&gt;Mining the Last Bitcoin&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/bitcoin/bitcoin/blob/59310f1c02673c3ee068cd82f8654bed9b757889/src/main.cpp#L1229"&gt;Computing the block value:&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;CAmount&lt;/span&gt; &lt;span class="nf"&gt;GetBlockValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;nHeight&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;CAmount&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;nFees&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;CAmount&lt;/span&gt; &lt;span class="n"&gt;nSubsidy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;COIN&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;halvings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nHeight&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;Params&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;SubsidyHalvingInterval&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="c1"&gt;// Force block reward to zero when right shift is undefined.&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;halvings&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;nFees&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// Subsidy is cut in half every 210,000 blocks which will occur approximately every 4 years.&lt;/span&gt;
    &lt;span class="n"&gt;nSubsidy&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;=&lt;/span&gt; &lt;span class="n"&gt;halvings&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;nSubsidy&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;nFees&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Interestingly, the &lt;a href="https://github.com/bitcoin/bitcoin/blob/4405b78d6059e536c36974088a8ed4d9f0f29898/main.cpp#L675"&gt;first commit version of this code&lt;/a&gt;
in github (29 August 2009) is missing the &lt;code&gt;halvings &amp;gt;= 64&lt;/code&gt; line we talked about in class: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;int64&lt;/span&gt; &lt;span class="n"&gt;CBlock&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;GetBlockValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt; &lt;span class="n"&gt;nFees&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;int64&lt;/span&gt; &lt;span class="n"&gt;nSubsidy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;COIN&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// Subsidy is cut in half every 4 years&lt;/span&gt;
    &lt;span class="n"&gt;nSubsidy&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nBestHeight&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;210000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;nSubsidy&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;nFees&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Will a node running the early version of this code (assuming the global &lt;code&gt;nBestHeight&lt;/code&gt; is equal to &lt;code&gt;nHeight&lt;/code&gt;)
ever compute a
different block value than a node running the current version of the
code?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Python code for estimating block time: &lt;a href="http://bitcoin-class.org/classes/class14/subsidy.py"&gt;subsidy.py&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;expect_block&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6929999&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;2132&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mo"&gt;05&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt; &lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;38.200000&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Why is it likely that the expected final bitcoin generation block is
found in 2132 instead of 2140 (as estimated by 10 minute expected block
generation rate)?&lt;/p&gt;
&lt;div class="gap"&gt;

&lt;/div&gt;

&lt;h2&gt;Selfish Mining&lt;/h2&gt;
&lt;p&gt;What are the risks and benefits of witholding a found block?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Based on the &lt;a href="http://www.submarinecablemap.com/"&gt;submarine cable map&lt;/a&gt;,
where should you put your bitcoin mining operation?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Suppose you (and no other bitcoin nodes) had access to an under-Artic
fiberoptic cable, providing faster than currently possible routes
between Japan and Anchorage.  Would this provide a valuable advantage in
bitcoin?  Would you prefer to have a fast microwave link between Japan
and Finland?&lt;/p&gt;
&lt;div class="gap"&gt;

&lt;/div&gt;

&lt;p&gt;This is the paper about selfish mining: Ittay Eyal and Emin G&amp;uuml;n
Sirer, &lt;a href="http://arxiv.org/pdf/1311.0243v5.pdf"&gt;&lt;em&gt;Majority is not Enough: Bitcoin Mining is
Vulnerable&lt;/em&gt;&lt;/a&gt; (Nov 2013).  There
has been a lot of debate about this paper and the claim that rational
miners will behave selfishly:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://freedom-to-tinker.com/blog/felten/game-theory-and-bitcoin/"&gt;Game Theory and Bitcoin&lt;/a&gt; (Ed Felten)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hackingdistributed.com/2013/11/14/response-to-feedback-on-selfish-mining/#id10"&gt;Response to Feedback on Selfish Mining&lt;/a&gt; (Eyal and Sirer's response to Felten's post and other arguments; read Felten's responses in the comments)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hackingdistributed.com/2013/11/05/faq-selfish-mining/"&gt;Some Frequently Asked Questions on Selfish Mining&lt;/a&gt; (includes Simpson's clip)&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Bitcoin Anthropology Talk</title><link href="http://bitcoin-class.org/bitcoin-anthropology-talk.html" rel="alternate"></link><updated>2015-02-25T00:00:00-05:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-02-25:bitcoin-anthropology-talk.html</id><summary type="html">&lt;p&gt;The talk I mentioned in class today is:&lt;/p&gt;
&lt;p&gt;Speaker: &lt;strong&gt;&lt;a href="http://llaannaa.com/"&gt;Lana Swartz&lt;/a&gt;&lt;/strong&gt;, Annenberg School for
Communication and Journalism, USC&lt;/p&gt;
&lt;p&gt;Title: &lt;em&gt;Social Transactions: The Meaning and Management of New Payment Infrastructures&lt;/em&gt;  &lt;/p&gt;
&lt;p&gt;When: &lt;strong&gt;Thursday, February 26, 2015, 3:30-4:30 pm&lt;/strong&gt; (note this overlaps with my scheduled office hours; I'll still have my office hours on Thursday and won't be able to make it to the talk, but I hope some of you will be able to make it to this and summarize it for us)  &lt;/p&gt;
&lt;p&gt;Where: &lt;strong&gt;New Cabell Hall 299a&lt;/strong&gt;
Host: Media Studies Department&lt;/p&gt;
&lt;p&gt;ABSTRACT: Money is an interface between people, and it connects them to
larger imaginaries like the "nation" and the "economy." Monetary
transactions depend on infrastructures, which are always instantiations
of relations and meaning. In recent years, economic downturn paired with
high penetration of information and communication technology has led to
an explosion of imagination and innovation around the form of
money. Many have begun to rethink the very infrastructures through which
value is measured and transferred. In particular, the tech industry has
discovered payment. What was once a slow-moving and marginalized sector
of consumer financial services is being rethought as a form of social
media. This talk considers how the infrastructures of payment are being
taken apart and put back together in new configurations by Silicon
Valley. Models native to social media are coming into contact with long
standing practices in the payments industry. What are the implications
of this interaction for the broader social functions of money and its
infrastructures? It is important now to understand this democratization
and, crucially, privatization of transaction.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Biography:&lt;/strong&gt; Lana Swartz is a PhD candidate at the Annenberg School for
Communication and Journalism at the University of Southern
California. Previously, she received an SM in Comparative Media Studies
from the Massachusetts Institute of Technology. Most of her research is
about money and other networked communication technologies. She was
published payment technologies such as a Diners' Club, the first third
party charge card, and Bitcoin, the anarcho-capitalist cryptographic
currency.&lt;/p&gt;</summary></entry><entry><title>Class 13: Quiz 2</title><link href="http://bitcoin-class.org/class-13-quiz-2.html" rel="alternate"></link><updated>2015-02-25T00:00:00-05:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-02-25:class-13-quiz-2.html</id><summary type="html">&lt;h2&gt;Schedule&lt;/h2&gt;
&lt;p&gt;&lt;div class="todo"&gt; &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://bitcoin-class.org/pages/project2.html"&gt;Project 2 Part
  2&lt;/a&gt; is due next
  &lt;strong&gt;Thursday, 5 March.&lt;/strong&gt; If you want do to an alternative project, make
  sure I know about it and have agreed that it is a good substitution by
  this Friday (Feb 27).&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;&lt;center&gt; 
&lt;iframe src="//www.slideshare.net/slideshow/embed_code/45320896" width="670" height="380" frameborder="2" marginwidth="0" marginheight="0" scrolling="no"&gt;&lt;/iframe&gt;
&lt;div class="caption"&gt;Note: due to a bug in
slideshare's updated player, ink markings no longer appear in the
viewer.  &lt;br&gt;If you &lt;a href="http://bitcoin-class.org/classes/class13/class13-inked.pptx"&gt;download the slides&lt;/a&gt;, they are present though.
Hopefully, the player will be fixed someday. &lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;h2&gt;Quiz 2&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://bitcoin-class.org/classes/class13/quiz2.pdf"&gt;Quiz 2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The answers to the quiz were discussed in class.  The full Morgan Spurlock video documentary on bitcoin is &lt;a href="http://youtu.be/utvkZ8korVM?t=19m8s"&gt;here&lt;/a&gt;:
&lt;center&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/utvkZ8korVM" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/center&gt;&lt;/p&gt;</summary></entry><entry><title>PointCoin Updates</title><link href="http://bitcoin-class.org/pointcoin-updates.html" rel="alternate"></link><updated>2015-02-23T21:00:00-05:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-02-23:pointcoin-updates.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Reminder:&lt;/strong&gt; We'll have a quiz in class Wednesday.  It will be similar
  to the previous quiz, and focus on fundamental understanding on how
  bitcoin works covering material from the beginning of the class
  through &lt;a href="http://bitcoin-class.org/class-10-more-mining.html"&gt;Class 10&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Mining:&lt;/strong&gt;
You'll notice in the PointCoin blockchain that I'm now running an
"unfair advantage" node, using a Medium instance on EC2.  This is at the
insistance of the PointCoin Pizza purveyor, who is worried that it may
be too easy for a single miner to obtain a high fraction of the
processing power just by managing their EC2 micro instance credits
carefully while everyone else's miner is throttled.  (You can see this
in the blockchain when a new miner starts up, it will often win several
blocks in a row, just because it has not yet hit the micro instance
throttling level.)  (I may decide to turn off my "unfair advantage"
miner at some later time, but for now I intend to leave it running to
make it a difficult for a single miner to obtain control of a large
fraction of the hashing power.)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Talk Tuesday!&lt;/strong&gt;: There's an interesting security-related talk from &lt;a href="https://ericw.us/trow/"&gt;Eric
Wustrow&lt;/a&gt; tomorrow: &lt;a href="http://www.cs.virginia.edu/events/colloquia/wustrow.html"&gt;&lt;em&gt;Anticensorship in the
Network&lt;/em&gt;&lt;/a&gt;,
10:45am in Rice 242.&lt;/p&gt;</summary></entry><entry><title>Class 12: Mostly About Superfish</title><link href="http://bitcoin-class.org/class-12-mostly-about-superfish.html" rel="alternate"></link><updated>2015-02-23T19:00:00-05:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-02-23:class-12-mostly-about-superfish.html</id><summary type="html">&lt;h2&gt;Schedule&lt;/h2&gt;
&lt;p&gt;&lt;div class="todo"&gt; &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Quiz 2 will be in class on &lt;strong&gt;Wednesday, 25 February&lt;/strong&gt;.  It will be similar in length, format, and content to Quiz 1 (except will cover material from the beginning of the class through &lt;a href="http://bitcoin-class.org/class-10-more-mining.html"&gt;Class 10&lt;/a&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://bitcoin-class.org/pages/project2.html"&gt;Project 2 Part 2&lt;/a&gt; starts now!  Read the rules carefully to understand what is within scope for this, and please ask for clarifications before doing anything questionable.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;&lt;center&gt; 
&lt;iframe src="//www.slideshare.net/slideshow/embed_code/45046365" width="670" height="380" frameborder="2" marginwidth="0" marginheight="0" scrolling="no"&gt;&lt;/iframe&gt;
&lt;div class="caption"&gt;Note: due to a bug in
slideshare's updated player, ink markings no longer appear in the
viewer.  &lt;br&gt;If you &lt;a href="http://bitcoin-class.org/classes/class12/class12-inked.pptx"&gt;download the slides&lt;/a&gt;, they are present though.
Hopefully, the player will be fixed someday. &lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;h2&gt;Difficulty&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://bitcoinwisdom.com/bitcoin/difficulty"&gt;Bitcoin Difficulty increased yesterday!&lt;/a&gt;: 46684376316&lt;/p&gt;
&lt;p&gt;This invalidates our results from the previous class about the SP20
miner being profitable (with our assumption about 5% difficulty increase
per month). &lt;/p&gt;
&lt;p&gt;PointCoin's difficulty rate reveals something about when students got
their miners working, and about how EC2 throttles micro instances:&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;a href="/classes/class12/pointcoin-difficulty.png"&gt;&lt;img src="/classes/class12/pointcoin-difficulty.png" width=600&gt;&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;h2&gt;Superfish&lt;/h2&gt;
&lt;p&gt;Here are some articles about superfish:  &lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.filippo.io/komodia-superfish-ssl-validation-is-broken/"&gt;&lt;em&gt;Komodia/Superfish SSL Validation is Broken&lt;/em&gt;&lt;/a&gt;, Filippo Valsorda&lt;br /&gt;
&lt;a href="http://blog.erratasec.com/2015/02/extracting-superfish-certificate.html"&gt;&lt;em&gt;Extracting the SuperFish certificate&lt;/em&gt;&lt;/a&gt;, Robert Graham&lt;br /&gt;
&lt;a href="http://bitbanter.com/2015/02/20/lenovo-man-middle/"&gt;&lt;em&gt;Lenovo Under Sustained Man in Middle Management Attack&lt;/em&gt;&lt;/a&gt;, Josh Cincinatti&lt;br /&gt;
&lt;a href="http://www.slate.com/articles/technology/bitwise/2015/02/lenovo_superfish_scandal_why_it_s_one_of_the_worst_consumer_computing_screw.html"&gt;&lt;em&gt;You Had One Job, Lenovo&lt;/em&gt;&lt;/a&gt;, David Auerbach, Slate  &lt;/p&gt;
&lt;h2&gt;SSL Warings&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://research.google.com/pubs/AdrienneFelt.html"&gt;Adrienne Felt&lt;/a&gt;'s work on SSL warnings in Chrome browser:&lt;br /&gt;
&lt;a href="https://docs.google.com/presentation/d/1TNFx6eaQVfe83PV80-FZ39QY1dSLGCWW8f2i5-NeJ48/edit#slide=id.p"&gt;&lt;em&gt;Improving SSL Warnings&lt;/em&gt;&lt;/a&gt; (talk slides)&lt;br /&gt;
&lt;a href="http://static.googleusercontent.com/media/research.google.com/en/us/pubs/archive/43265.pdf"&gt;&lt;em&gt;Improving SSL Warnings: Comprehension and Adherence&lt;/em&gt;&lt;/a&gt;&lt;br /&gt;
&lt;a href="http://static.googleusercontent.com/media/research.google.com/en/us/pubs/archive/41927.pdf"&gt;&lt;em&gt;Experimenting At Scale With Google Chrome's SSL Warning&lt;/em&gt;&lt;/a&gt;&lt;br /&gt;
You can also see her old page about the work she did at UVa: &lt;a href="http://www.cs.virginia.edu/felt/privacy/"&gt;&lt;em&gt;Privacy Protection for Social Network APIs&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;</summary></entry><entry><title>PointCoin Pizza</title><link href="http://bitcoin-class.org/pointcoin-pizza.html" rel="alternate"></link><updated>2015-02-21T00:00:00-05:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-02-21:pointcoin-pizza.html</id><summary type="html">&lt;p&gt;The PointCoin currency has now reached the level of stability and market
acceptance, that merchants are beginning to accept it!&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pizza.bitcoin-class.com/"&gt;&lt;strong&gt;PointCoin Pizza&lt;/strong&gt;&lt;/a&gt; is now open and
accepting orders.  &lt;/p&gt;
&lt;p&gt;Note that PointCoin Pizza's opening hours are unpredicatable and
unannounced, so there is no guarantee that your pizza order will be
delivered within a reasonable time.  The price of pizza is currently 150
PTC, but it may go up rapidly depending on market conditions.&lt;/p&gt;
&lt;p&gt;Spend your PointCoins carefully, though.  You don't want to be reading about
&lt;a href="http://www.forbes.com/sites/ericmack/2013/12/23/the-bitcoin-pizza-purchase-thats-worth-7-million-today/"&gt;&lt;em&gt;The Bitcoin Pizza Purchase That's Worth $7 Million Today&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;</summary></entry><entry><title>Class 11: Pools and Profits</title><link href="http://bitcoin-class.org/class-11-pools-and-profits.html" rel="alternate"></link><updated>2015-02-18T00:00:00-05:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-02-18:class-11-pools-and-profits.html</id><summary type="html">&lt;h2&gt;Schedule&lt;/h2&gt;
&lt;p&gt;&lt;div class="todo"&gt; &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://bitcoin-class.org/pages/project2.html"&gt;Project 2&lt;/a&gt;, Part 1 is due &lt;strong&gt;Sunday, 22 February&lt;/strong&gt;.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Quiz 2 will be in class on &lt;strong&gt;Wednesday, 25 February&lt;/strong&gt;.  It will be similar in length, format, and content to Quiz 1 (except will cover material from the beginning of the class through &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Continue thinking about project ideas! &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;&lt;center&gt; 
&lt;iframe src="//www.slideshare.net/slideshow/embed_code/44858338" width="670" height="380" frameborder="2" marginwidth="0" marginheight="0" scrolling="no"&gt;&lt;/iframe&gt;
&lt;div class="caption"&gt;Note: due to a bug in
slideshare's updated player, ink markings no longer appear in the
viewer.  &lt;br&gt;If you &lt;a href="http://bitcoin-class.org/classes/class11/class11-inked.pptx"&gt;download the slides&lt;/a&gt;, they are present though.
Hopefully, the player will be fixed someday. &lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;h1&gt;Mining Model&lt;/h1&gt;
&lt;p&gt;Mining Harware on the market today: &lt;a href="http://www.spondoolies-tech.com/products/holiday-special-sp20-jackson-shipping-from-stock"&gt;Spondoolies SP20&lt;/a&gt; (this is just an example, certainly not a commercial endorsement!)&lt;/p&gt;
&lt;p&gt;&lt;div class="indented"&gt;
&lt;strong&gt;Cost:&lt;/strong&gt; US$ 479&lt;br /&gt;
&lt;strong&gt;Hash rate:&lt;/strong&gt; 1.7 TH/s&lt;br /&gt;
&lt;strong&gt;Power use:&lt;/strong&gt; 1200 W&lt;br /&gt;
&lt;strong&gt;&lt;a href="https://encrypted.google.com/search?hl=en&amp;amp;q=BTC%20to%20USD"&gt;BTC Price&lt;/a&gt;:&lt;/strong&gt; US$ 240&lt;br /&gt;
&lt;strong&gt;Difficulty:&lt;/strong&gt; 44455415962 # from https://blockchain.info/stats, 18 Feb 2015
    &lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.google.com/spreadsheet/ccc?key=0AiFMBvXvL2dtdEZkR2J4eU5rS3B4ei1iUmJxSWNlQ0E#gid=0"&gt;This
spreadsheet&lt;/a&gt;
has lots of information about bitcoin difficulty over time.&lt;/p&gt;
&lt;p&gt;&lt;div class="warning"&gt;
&lt;strong&gt;Please don't make any investment decisions based on any of these models!&lt;/strong&gt;  Even the best one is still much simplified and with many guesses (e.g., assumption that BTC value will not change, slow increase in difficulty).
   &lt;/div&gt;&lt;/p&gt;
&lt;h3&gt;Super Simple Model&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;expected_hashes&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.7&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mf"&gt;112314445.6981567&lt;/span&gt; &lt;span class="c"&gt;# expected seconds to find block&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mf"&gt;1299.935714099036&lt;/span&gt; &lt;span class="c"&gt;# days to find block&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;block_value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;240&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;earnings_per_year&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;block_value&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;365.25&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;1300&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;earnings_per_year&lt;/span&gt;
&lt;span class="mf"&gt;1685.769230769231&lt;/span&gt;
&lt;span class="sb"&gt;````&lt;/span&gt;

&lt;span class="n"&gt;Why&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;estimate&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;expected&lt;/span&gt; &lt;span class="n"&gt;earnings&lt;/span&gt; &lt;span class="n"&gt;totally&lt;/span&gt; &lt;span class="n"&gt;broken&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt; &lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;gap&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;### Better Model&lt;/span&gt;

&lt;span class="n"&gt;Python&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;excerpted&lt;/span&gt; &lt;span class="n"&gt;below&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;mining&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="o"&gt;|./&lt;/span&gt;&lt;span class="n"&gt;mining&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;simple&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="sb"&gt;``&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;guess_difficulty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;month&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;difficulty&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;rate_of_difficulty&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="n"&gt;month&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;hash_rate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1.7&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt; &lt;span class="c"&gt;# 1.7 Th/s&lt;/span&gt;
&lt;span class="n"&gt;hashes_in_month&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hash_rate&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;ave_days_in_month&lt;/span&gt;
&lt;span class="n"&gt;block_value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;240&lt;/span&gt; &lt;span class="c"&gt;# assumes fixed BTC value &lt;/span&gt;
&lt;span class="n"&gt;electricity_cost&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;kWh&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;ave_days_in_month&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;expected_revenue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;month&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;success_probability&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;find_target&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;guess_difficulty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;month&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;256&lt;/span&gt; 
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;block_value&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;hashes_in_month&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;success_probability&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;cumulative_income&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;months&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;income&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.0&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;month&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;months&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;income&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;expected_revenue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;month&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;electricity_cost&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;income&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Given this model, when should the miner be turned off and turned to scrap?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Bitcoin core code: &lt;a href="https://github.com/bitcoin/bitcoin/blob/175d86e633bedcfb642fb326f1ec0b43c14c4f3b/src/main.cpp#L1229"&gt;GetBlockValue&lt;/a&gt;, &lt;a href="https://github.com/bitcoin/bitcoin/blob/31dedb463b0ce77364e516239bf1b9c7eed5b3b0/src/chainparams.cpp"&gt;ChainParams&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;What should happen to the bitcoin difficulty when subsidy is halved after block 420,000?
(Current block is 344,044 so we should reach block 420,000 in (420000-34400 / (6 * 24)) = 527 days.)
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h1&gt;Mining Pools&lt;/h1&gt;
&lt;p&gt;How can an open mining pool fairly determine miners share of the reward?  Why is it not sensible to use actual blocks mined to estminate pool share?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;What are the risks of a mining pool controlling a large fraction over
the hashing power?  Does anything dramatic happen when that fraction
exceeds 50%?&lt;/p&gt;
&lt;div class="gap"&gt;

&lt;/div&gt;

&lt;h1&gt;Links&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://hackingdistributed.com/2014/06/13/time-for-a-hard-bitcoin-fork/"&gt;&lt;em&gt;What Happens At Armageddon?&lt;/em&gt;&lt;/a&gt;
(Ittay Eyal and Emin G&amp;uuml;n Sirer, 13 June 2014)&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bitcointalk.org/?topic=441465.msg7282674#msg7282674"&gt;Discussion about Eligius Block Witholding Attack&lt;/a&gt;&lt;/p&gt;</summary></entry><entry><title>Project 2 - New Network Up</title><link href="http://bitcoin-class.org/project-2-new-network-up.html" rel="alternate"></link><updated>2015-02-17T00:00:00-05:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-02-17:project-2-new-network-up.html</id><summary type="html">&lt;p&gt;The new PointCoin network is now up!  This fixes the reset problem and
some other issues that were discussed in Monday's class.  It also sets
the expected block generating time to 10 minutes and the mining reward
to 10 PointCoin.&lt;/p&gt;
&lt;p&gt;To migrate your node to the PointCoin 0.2 network follow these directions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/PointCoin/pointcoind/wiki/Migration"&gt;Migration&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once you have your node running on the new network, add your public IP address here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/PointCoin/pointcoind/wiki/Publicly-Listed-IP-Address"&gt;Node Addresses&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There is no automatic peering.  We believe this is a design decision in
btcd (which pointcoind is forked from), to not trust any node that is
not announced by multiple other nodes.&lt;/p&gt;
&lt;p&gt;You can see the blockchain at:
&lt;a href="http://blockexplorer.bitcoin-class.org/"&gt;&lt;em&gt;http://blockexplorer.bitcoin-class.org/&lt;/em&gt;&lt;/a&gt;.
We will consider this the canonical PointCoin blockchain (at least until
next Monday, when you can start launching attacks).&lt;/p&gt;
&lt;p&gt;Because of the problems with the network, it is no longer necessary to
acquire 100 PointCoin to earn full credit for Problem 1.  It is
sufficient to successfully mine at least one block.  Earning more
PointCoin will still be beneficial though!  You'll have other
opportunities to use it.&lt;/p&gt;
&lt;p&gt;Thanks a bunch to Alex and Nick for tremendous work getting this
working!  It seems to be stable, and our nodes (including nodes running
on EC2 micro instances) have been stable (no crashes) for more than 24
hours now, so we're optimistic there will not be further problems.&lt;/p&gt;
&lt;p&gt;I'm really sorry for the confusion and trouble this has caused, not to
mention the PointCoins you've lost that you may have mined successfully
on the original network.  I think we'll learn a lot from trying to
launch a cryptocurrency, and there is plenty that can go wrong.&lt;/p&gt;</summary></entry><entry><title>Class 10: More Mining</title><link href="http://bitcoin-class.org/class-10-more-mining.html" rel="alternate"></link><updated>2015-02-16T00:00:00-05:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-02-16:class-10-more-mining.html</id><summary type="html">&lt;h2&gt;Schedule&lt;/h2&gt;
&lt;p&gt;&lt;div class="todo"&gt; &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://bitcoin-class.org/pages/project2.html"&gt;Project 2&lt;/a&gt;, Part 1 is due &lt;strong&gt;Sunday, 22 February&lt;/strong&gt;.  Part 2 will begin afte class on Monday, 23 February and is due on Thursday, 5 March.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start (continue!) thinking of ideas for your final project.  I've posted a few starting ideas &lt;a href="http://bitcoin-class.org/pages/project-ideas.html"&gt;on the course site&lt;/a&gt;.  The first major deliverable for the final project will be a project proposal (due &lt;strong&gt;20 March&lt;/strong&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reading: finish reading through &lt;a href="https://github.com/aantonop/bitcoinbook/blob/develop/ch08.asciidoc"&gt;&lt;em&gt;Chapter 8: Mining and Consensus&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;&lt;center&gt; 
&lt;iframe src="//www.slideshare.net/slideshow/embed_code/44794648" width="670" height="380" frameborder="2" marginwidth="0" marginheight="0" scrolling="no"&gt;&lt;/iframe&gt;
&lt;div class="caption"&gt;Note: due to a bug in
slideshare's updated player, ink markings no longer appear in the
viewer.  &lt;br&gt;If you &lt;a href="http://bitcoin-class.org/classes/class10/class10-inked.pptx"&gt;download the slides&lt;/a&gt;, they are present though.
Hopefully, the player will be fixed someday. &lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;h1&gt;Final Project&lt;/h1&gt;
&lt;p&gt;Your main assignment after finishing Project 2 will be an open-ended
project.  You can work on anything you want that is related to
cryptocurrency (loosely defined), so long as you can convince me it will
be interesting and worthwhile.  My hope is everyone will do a project
that will have significant value beyond just our class.&lt;/p&gt;
&lt;p&gt;You can work alone or in a team of any size.  The impressiveness of your
project should scale with the size of your team (but not linearly, since
there is added communication overhead as your team size increases).  It
should scale as at least &lt;span class="math"&gt;&lt;em&gt;N&lt;/em&gt;&lt;sup&gt;2/3&lt;/sup&gt;&lt;/span&gt;
where &lt;span class="math"&gt;&lt;em&gt;N&lt;/em&gt;&lt;/span&gt; is the number of students in the
course on your team.  (You are welcome to enlist help from people not in
the class, and they don't count towards your &lt;span
class="math"&gt;&lt;em&gt;N&lt;/em&gt;&lt;/span&gt; value.)&lt;/p&gt;
&lt;h1&gt;Forking PointCoin&lt;/h1&gt;
&lt;p&gt;What causes a blockchain to fork?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;If all the trans-pacific network cables (there are &lt;a href="http://www.submarinecablemap.com/"&gt;only about
12&lt;/a&gt;) were cut, what would happen to
the bitcoin blockchain?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h1&gt;Asymptotic Analysis&lt;/h1&gt;
&lt;p&gt;When is asymptotic analysis useful?
&lt;div class="gap"&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;When is asymptotic analysis useless?
&lt;div class="gap"&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;The measured time to compute one SHA-256 hash on my EC2 node (2.5 GHz
processor) is 750 ns.  Approximately how many instructions execute to
compute on SHA-256 hash?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h1&gt;Mining Cost&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Assumption.&lt;/strong&gt; SHA-256 produces a uniform random output.  (We know this
  is not really true, but it is a reasonable approximation, and
  necessary for the analysis.)  So, we can model SHA-256 on any (new)
  input &lt;span class="math"&gt;&lt;em&gt;x&lt;/em&gt;&lt;/span&gt; as drawing randomly from 2&lt;sup&gt;256&lt;/sup&gt; possible outputs:&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SHA-256(&lt;span class="math"&gt;&lt;em&gt;x&lt;/em&gt;) &amp;larr; [0, 2&lt;sup&gt;256&lt;/sup&gt;)&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;Target = T&lt;sub&gt;max&lt;/sub&gt; / Difficulty&lt;/span&gt;&lt;br /&gt;
&lt;span class="math"&gt;T&lt;sub&gt;max&lt;/sub&gt; = (2&lt;sup&gt;16&lt;/sup&gt; – 1)2&lt;sup&gt;256&lt;sup&gt; &amp;approx; 2&lt;sup&gt;224&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;Current (15 Feb) Bitcoin Difficulty = 44,455,415,962&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="mi"&gt;224&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;44455415962&lt;/span&gt;
&lt;span class="mi"&gt;606449092506427232846302685260647042725721699378946247123L&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;success_probability&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;256&lt;/span&gt;
&lt;span class="mf"&gt;5.237396582969569e-21&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;expected_hashes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;success_probability&lt;/span&gt;
&lt;span class="mf"&gt;1.9093455768686638e+20&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;nanos_needed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;expected_hashes&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;760&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;seconds_needed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nanos_needed&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;
&lt;span class="mf"&gt;145110263842018.44&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;days&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;seconds_needed&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mf"&gt;1679516942.6159542&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;years&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;days&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;365&lt;/span&gt;
&lt;span class="mf"&gt;4601416.2811396&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;years&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="o"&gt;~&lt;/span&gt; &lt;span class="mf"&gt;9.2&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt; &lt;span class="n"&gt;years&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;find&lt;/span&gt; &lt;span class="n"&gt;one&lt;/span&gt; &lt;span class="n"&gt;block&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;EC2&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;assuming&lt;/span&gt; &lt;span class="n"&gt;difficulty&lt;/span&gt; &lt;span class="n"&gt;doesn&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="n"&gt;increase&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Energy&lt;/h1&gt;
&lt;p&gt;Why is energy/hash so much less for custom ASICs? 
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;In an ASIC, it is possible to build an XOR using 4 transistors.  How
many transistors have to flip to do an XOR on a general purpose
processor like an Intel i7?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href="https://en.bitcoin.it/wiki/Mining_hardware_comparison"&gt;Mining Hardware&lt;/a&gt;
- current ASIC miners achive &amp;gt;5 Billion hashes per seconds and over 1500
Million hashes per Joule (the energy required to lift an apple one
meter).&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.thecoinsman.com/2014/08/bitcoin/inside-chinese-bitcoin-mine/"&gt;&lt;em&gt;Inside a Chinese Bitcoin Mine&lt;/em&gt;&lt;/a&gt;, The Coinsman, 11 August 2014.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The first thing you notice as you approach the warehouse is the noise. It begins as soon as you step out of the car, at which point it sounds like massive swarm of angry bees droning away somewhere off in the distance. It becomes louder and louder the closer you get to the building, and as you step through the doors it becomes a deafening and steady roar...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Estimate for total energy use of bitcoin network with current hashrate:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;expected_hashes&lt;/span&gt;
&lt;span class="mf"&gt;1.9093455768686638e+20&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;hashes_per_second&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;expected_hashes&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;600&lt;/span&gt;
&lt;span class="mf"&gt;3.18224262811444e+17&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mf"&gt;309384699.96&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;according&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;blockchain&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;309&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;384&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;699.96&lt;/span&gt; &lt;span class="n"&gt;GH&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;
&lt;span class="mf"&gt;3.0938469996e+17&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;hashes_per_second&lt;/span&gt;
&lt;span class="mf"&gt;0.9722222222361415&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Mhash_per_J&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1500&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Mhash_per_second&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hashes_per_second&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;J&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Mhash_per_second&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;Mhash_per_J&lt;/span&gt;
&lt;span class="mf"&gt;212149508.54096264&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;212 MJ per second = 212 MW&lt;/p&gt;
&lt;p&gt;Our nearest nuclear plant, the &lt;a href="https://www.dom.com/corporate/what-we-do/electricity/generation/nuclear/north-anna-power-station"&gt;North Anna Power
Station&lt;/a&gt;
(Lake Anna) generates 1892 MW, "enough to power 450,000 homes" or about
9x the amount needed to power the current bitcoin network (only counting
the miners themselves; additional power needed for cooling, etc.)&lt;/p&gt;
&lt;p&gt;How does the energy use of bitcoin compare to what is used by the
current financial infrastructure for comparable service?  (This is a
very difficult question to answer, would be a good project idea, not
something to answer in the blank below!)&lt;/p&gt;
&lt;div class="gap"&gt;

&lt;/div&gt;</summary></entry><entry><title>Class 9: Mining</title><link href="http://bitcoin-class.org/class-9-mining.html" rel="alternate"></link><updated>2015-02-11T00:00:00-05:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-02-11:class-9-mining.html</id><summary type="html">&lt;h2&gt;Schedule&lt;/h2&gt;
&lt;p&gt;&lt;div class="todo"&gt; &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://bitcoin-class.org/pages/project2.html"&gt;Project 2&lt;/a&gt;, Part 1 is due &lt;strong&gt;Sunday, 22 February&lt;/strong&gt;.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reading: finish reading through &lt;a href="https://github.com/aantonop/bitcoinbook/blob/develop/ch08.asciidoc"&gt;&lt;em&gt;Chapter 8: Mining and Consensus&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;&lt;center&gt; 
&lt;iframe src="//www.slideshare.net/slideshow/embed_code/44686287" width="670" height="380" frameborder="2" marginwidth="0" marginheight="0" scrolling="no"&gt;&lt;/iframe&gt;
&lt;div class="caption"&gt;Note: due to a bug in
slideshare's updated player, ink markings no longer appear in the
viewer.  &lt;br&gt;If you &lt;a href="http://bitcoin-class.org/classes/class9/class9-inked.pptx"&gt;download the slides&lt;/a&gt;, they are present though.
Hopefully, the player will be fixed someday. &lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;h1&gt;Quiz&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://bitcoin-class.org/classes/class9/quiz.pdf"&gt;Quiz 1&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Cost of Computation&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;gaussSum&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="n"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;How would a cs2110/cs2150 student analyze the above code?&lt;br /&gt;
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;When is asymptotic analysis appropriate, and when is it essentially useless?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;What is the cost of executing this code in practice?&lt;br /&gt;
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;</summary></entry><entry><title>Project 2</title><link href="http://bitcoin-class.org/project-2.html" rel="alternate"></link><updated>2015-02-11T00:00:00-05:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-02-11:project-2.html</id><summary type="html">&lt;p&gt;&lt;a href="http://bitcoin-class.org/pages/project2.html"&gt;Project 2&lt;/a&gt; is now
posted.  The first part is due &lt;strong&gt;February 22&lt;/strong&gt;.  (After February 23, we
will be encouraging you to try launching attacks on the PointCoin
network, which is Part 2 of this project.  Until then, though, you
should aim to be a cooperative and honest pointcoin node and miner.)&lt;/p&gt;
&lt;p&gt;If you haven't already got your pointcoin node up and running on an EC2
node, you should definitely get this done by the end of this week.
(Note: Dave has office hours Thursday 4-5pm, and Nick/Alex has office
hours Friday noon-2pm.  Please don't wait to get help if you are stuck
on this!)&lt;/p&gt;</summary></entry><entry><title>Class 8: Review and Project 2</title><link href="http://bitcoin-class.org/class-8-review-and-project-2.html" rel="alternate"></link><updated>2015-02-09T00:00:00-05:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-02-09:class-8-review-and-project-2.html</id><summary type="html">&lt;h2&gt;Schedule&lt;/h2&gt;
&lt;p&gt;&lt;div class="todo"&gt; &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Quiz&lt;/strong&gt;: We'll have a short quiz in class on Wednesday, 11
    &lt;strong&gt;February&lt;/strong&gt;.  The quiz will be closed resources, except for your course notes (things you have on paper, not using the electronic resources).  The point of the quiz is to see how well people are &lt;strong&gt;understanding the core ideas we've covered&lt;/strong&gt;.  It covers the material from Classes 1-7, Project 1, and the readings from Antonopoulos' book Chapters 1-7 and Satoshi's paper.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Project 2&lt;/strong&gt;: Our goal is to have everyone in the class have a
    PointCoin node up an running on an EC2 node by the end of today's
    class.  After that, your task for Project 2 is to create a PointCoin
    miner.  We will provide some more guidance on this (posted by
    Wednesday), as well as specific questions to answer for Project 2.
   &lt;/div&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(The are no notes or slides for this class, it was used to answer
questions and provide help getting started on Project 2.)&lt;/p&gt;</summary></entry><entry><title>Starting Project 2</title><link href="http://bitcoin-class.org/starting-project-2.html" rel="alternate"></link><updated>2015-02-05T00:00:00-05:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-02-05:starting-project-2.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Project 1.&lt;/strong&gt; You should have received your Project 1 grade as a
  transfer to your vanity address (on a 100,000 satoshi scale, so 0.001
  BTC is full credit).  You should be able to see this in the blockchain
  (e.g., by searching for your vanity address).  Note that this is
  different from the address you used to create your initial wallet, so
  you won't see it in your wallet unless you load the keys for your
  vanity address into your wallet (see
  &lt;a href="https://multibit.org/en/help/v0.5/help_importingPrivateKeys.html"&gt;https://multibit.org/en/help/v0.5/help_importingPrivateKeys.html&lt;/a&gt;
  for how to import your vanity address private key into MultiBit).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Geting started on Project 2.&lt;/strong&gt; For project 2, you'll be implementing
  and running a miner for a new cryptocurrency,
  &lt;a href="https://github.com/PointCoin/pointcoind"&gt;PointCoin&lt;/a&gt;.  We'll talk more
  about this in class Monday and post a more detailed project
  descruption soon, but you should get started by setting up your
  pointcoind node before class Monday.  &lt;/p&gt;
&lt;p&gt;Directions for getting your
  pointcoind node setup on a free EC2 instance are here: &lt;a href="https://github.com/PointCoin/pointcoind/wiki/Installing-PointCoin-on-AWS"&gt;Installing
  PointCoin on
  AWS&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you get stuck, we'll have time in class Monday to help, but you
  should get as far as you can on your own before class Monday.  Feel
  free to also post coments and questions here.&lt;/p&gt;</summary></entry><entry><title>Class 7: Merkle Trees</title><link href="http://bitcoin-class.org/class-7-merkle-trees.html" rel="alternate"></link><updated>2015-02-04T00:00:00-05:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-02-04:class-7-merkle-trees.html</id><summary type="html">&lt;p&gt;&lt;div class="phighlight"&gt;
   &lt;a href="http://bitcoin-class.org/classes/class7/class7.pdf"&gt;PDF version for printing&lt;/a&gt;
   &lt;/div&gt;&lt;/p&gt;
&lt;h2&gt;Schedule&lt;/h2&gt;
&lt;p&gt;&lt;div class="todo"&gt; &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;If you didn’t get full credit for Project 1 because of failure to post
  something interesting, you can (and should!) redeem yourself and earn
  full credit by &lt;strong&gt;posting an interesting comment by Thursday&lt;/strong&gt;.  It can
  be on (1) Discussion questions from Project 1 (2) notes from classes,
  or (3) general forum.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Quiz&lt;/strong&gt;: We'll have a short, closed resources quiz in class on
    &lt;strong&gt;Wednesday, 11 February&lt;/strong&gt;.  The point of the quiz is to see how
    well people are understanding the core ideas we've covered so far
    (including today).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Read&lt;/strong&gt; (by Monday): &lt;a href="https://github.com/aantonop/bitcoinbook/blob/develop/ch06.asciidoc"&gt;&lt;em&gt;Chapter 6: The Bitcoin
Network&lt;/em&gt;&lt;/a&gt;,
&lt;a href="https://github.com/aantonop/bitcoinbook/blob/develop/ch07.asciidoc"&gt;&lt;em&gt;Chapter 7: The
Blockchain&lt;/em&gt;&lt;/a&gt;
from Andreas Antonopoulos' book.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I am away the rest of this week, so will not have office hours on
  Thursday.  (I am, of course, still available by email and course web
  site.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In Monday's class, Nick and Alex will explain what is provided and
what you need to do for project 2.  You should at least set up your node
for project 2 before class Monday (details will be posted tomorrow).
You will also have an opportunity to ask questions about anything we
have covered so far.  If you have questions you want answered, or topics
you'd like discussed, you can post them in the comments for these notes (or email me directly).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;&lt;center&gt; 
&lt;iframe src="//www.slideshare.net/slideshow/embed_code/44277798" width="476" height="400" frameborder="0" marginwidth="0" marginheight="0" scrolling="no"&gt;&lt;/iframe&gt;
&lt;div class="caption"&gt;Note: due to a bug in
slideshare's updated player, ink markings no longer appear in the
viewer.  &lt;br&gt;If you download the slides, they are present though.
Hopefully, the player will be fixed someday. &lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;h1&gt;Exploring Blocks&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Label&lt;/strong&gt;&lt;/th&gt;
&lt;th align="left"&gt;&lt;strong&gt;Bytes&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;version&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;4&lt;/td&gt;
&lt;td&gt;Block version information&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;prev_block&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;32&lt;/td&gt;
&lt;td&gt;Hash of the previous block&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;merkle_root&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;32&lt;/td&gt;
&lt;td&gt;Hash of Merkle tree of all transactions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;4&lt;/td&gt;
&lt;td&gt;When block was created (overflows in 2106)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;bits&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;4&lt;/td&gt;
&lt;td&gt;Difficulty target used for this block&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;nonce&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;4&lt;/td&gt;
&lt;td&gt;Nonce found to generate this block&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a href="http://blockexplorer.com/b/341537"&gt;Block 341537&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;hash&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;000000000000000002b32e242989056214fef31c5aac08ae517840db3e3e7fd2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;ver&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;prev_block&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;000000000000000014a97984448f2b3e5b8582ece719be1a1ea7db1d1fce5561&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;mrkl_root&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;d634ceec0d9a8b065ad3203555b74877d0476e0b302972be41671a6b92a0a066&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;time&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1422830051&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;bits&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;404399040&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;nonce&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;527809407&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;n_tx&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1511&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;size&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;760657&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;tx&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="s2"&gt;&amp;quot;hash&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;57db55dadb51ceeee6417af30946f234b2f77613e40586a2c03ce5e3a2be8bbb&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;&amp;quot;ver&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;...&lt;/span&gt;
      &lt;span class="s2"&gt;&amp;quot;size&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3533&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;&amp;quot;in&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="s2"&gt;&amp;quot;prev_out&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;hash&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0000000000000000000000000000000000000000000000000000000000000000&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;n&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;4294967295&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;
      &lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="s2"&gt;&amp;quot;out&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="s2"&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1.00076629&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;
   &lt;span class="p"&gt;},&lt;/span&gt;
   &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="s2"&gt;&amp;quot;hash&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;675e40df163d5ae4556774b325cdd7b0885d552bf7989d5e24f7039fce315a5b&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;...&lt;/span&gt;
      &lt;span class="s2"&gt;&amp;quot;in&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="s2"&gt;&amp;quot;prev_out&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;hash&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;04e9c75d42093094a486a1c898527f4b50e1788fe4fda3ecb2574662b75b6f90&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;...&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="s2"&gt;&amp;quot;out&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="s2"&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0.00100000&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="s2"&gt;&amp;quot;scriptPubKey&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;OP_DUP OP_HASH160 9e21abc1748a1df63b4016ac313c0f88e557d5fd ...&amp;quot;&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="s2"&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0.00710182&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="s2"&gt;&amp;quot;scriptPubKey&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;OP_DUP OP_HASH160 e37cd341540dd1e912568ae5b004d62422bd6b38 ...&amp;quot;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;     
    &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;mrkl_tree&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;57db55dadb51ceeee6417af30946f234b2f77613e40586a2c03ce5e3a2be8bbb&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;66a3eea4610dfb7d7987ad4fc22392c7964340d21006c1eea4c88174fd660c58&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;675e40df163d5ae4556774b325cdd7b0885d552bf7989d5e24f7039fce315a5b&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;!-- # Merkle's Puzzles

Ralph Merkle, [_Publishing a New Idea_](http://merkle.com/1974/).
Includes his [cs244 project
proposal](http://merkle.com/1974/FirstCS244projectProposal.pdf)
("Discussion: No, I am not joking.") and [ACM rejection
letter](http://merkle.com/1974/ExpertLetter.pdf) ("I am sorry to have to
inform you that the paper is not in the main stream of present
cryptography thinking and I would not recommend that it be
published...").

**Construction.**
--&gt;

&lt;h1&gt;Merkle Trees&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/btcsuite/btcd/blob/master/blockchain/merkle.go"&gt;https://github.com/btcsuite/btcd/blob/master/blockchain/merkle.go&lt;/a&gt; (some comments removed)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;// HashMerkleBranches takes two hashes, treated as the left and right tree&lt;/span&gt;
&lt;span class="c1"&gt;// nodes, and returns the hash of their concatenation. &lt;/span&gt;
&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;HashMerkleBranches&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;left&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;btcwire&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ShaHash&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;right&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;btcwire&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ShaHash&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;btcwire&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ShaHash&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;sha&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;btcwire&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;HashSize&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kt"&gt;byte&lt;/span&gt;
   &lt;span class="nb"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sha&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="nx"&gt;btcwire&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;HashSize&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;left&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Bytes&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
   &lt;span class="nb"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sha&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;btcwire&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;HashSize&lt;/span&gt;&lt;span class="p"&gt;:],&lt;/span&gt; &lt;span class="nx"&gt;right&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Bytes&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
   &lt;span class="nx"&gt;newSha&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;btcwire&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NewShaHash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;btcwire&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DoubleSha256&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sha&lt;/span&gt;&lt;span class="p"&gt;[:]))&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;newSha&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;BuildMerkleTreeStore&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;transactions&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;btcutil&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Tx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;btcwire&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ShaHash&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;nextPoT&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;nextPowerOfTwo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;transactions&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="nx"&gt;arraySize&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;nextPoT&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="nx"&gt;merkles&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;make&lt;/span&gt;&lt;span class="p"&gt;([]&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;btcwire&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ShaHash&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;arraySize&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;// Create the base transaction shas and populate the array with them.&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;tx&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="nx"&gt;transactions&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;merkles&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;tx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Sha&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// Start the array offset after the last transaction and adjusted to the&lt;/span&gt;
    &lt;span class="c1"&gt;// next power of two.&lt;/span&gt;
    &lt;span class="nx"&gt;offset&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;nextPoT&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;arraySize&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
           &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nx"&gt;merkles&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
              &lt;span class="nx"&gt;merkles&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;

           &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nx"&gt;merkles&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
              &lt;span class="nx"&gt;newSha&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;HashMerkleBranches&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;merkles&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;merkles&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
              &lt;span class="nx"&gt;merkles&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;newSha&lt;/span&gt;

           &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
              &lt;span class="nx"&gt;newSha&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;HashMerkleBranches&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;merkles&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;merkles&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
              &lt;span class="nx"&gt;merkles&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;newSha&lt;/span&gt;
       &lt;span class="p"&gt;}&lt;/span&gt;
       &lt;span class="nx"&gt;offset&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;merkles&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="/classes/class7/merkle.png"&gt;&lt;img src="/classes/class7/merkle.png" width=600&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;What is needed to verify &lt;span class="math"&gt;T&lt;sub&gt;2&lt;/sub&gt;&lt;/span&gt; in &lt;span class="math"&gt;H&lt;sub&gt;root&lt;/sub&gt;&lt;/span&gt;?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;What must be recomputed if &lt;span class="math"&gt;T&lt;sub&gt;3&lt;/sub&gt;&lt;/span&gt; is replaced?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;What must be computed if a new node, &lt;span class="math"&gt;T&lt;sub&gt;5&lt;/sub&gt;&lt;/span&gt;, is added?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;How many SHA-256 hashes must be computed to verify &lt;a href="http://blockexplorer.com/b/341537"&gt;Block 341537&lt;/a&gt;?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;</summary></entry><entry><title>Class 6: Proofs of Work</title><link href="http://bitcoin-class.org/class-6-proofs-of-work.html" rel="alternate"></link><updated>2015-02-02T00:00:00-05:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-02-02:class-6-proofs-of-work.html</id><summary type="html">&lt;p&gt;&lt;div class="phighlight"&gt;
   &lt;a href="http://bitcoin-class.org/classes/class6/class6.pdf"&gt;PDF version for printing&lt;/a&gt;
   &lt;/div&gt;&lt;/p&gt;
&lt;h2&gt;Schedule&lt;/h2&gt;
&lt;div class="todo"&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;If you didn’t get full credit for Project 1 because of failure to post
  something interesting, you can (and should!) redeem yourself and earn
  full credit by &lt;strong&gt;posting an interesting comment by Thursday&lt;/strong&gt;.  It can
  be on (1) Discussion questions from Project 1 (2) notes from classes,
  or (3) general forum.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Read:&lt;/strong&gt; &lt;a href="https://github.com/aantonop/bitcoinbook/blob/develop/ch06.asciidoc"&gt;&lt;em&gt;Chapter 6: The Bitcoin
Network&lt;/em&gt;&lt;/a&gt;,
&lt;a href="https://github.com/aantonop/bitcoinbook/blob/develop/ch07.asciidoc"&gt;&lt;em&gt;Chapter 7: The
Blockchain&lt;/em&gt;&lt;/a&gt;
from Andreas Antonopoulos' book.  (Ideally, you should finish these
before Wednesday's class, but at the latest by Monday, 9 Feb.)
   &lt;/div&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;center&gt; 
&lt;iframe src="//www.slideshare.net/slideshow/embed_code/44177245" width="476" height="400" frameborder="0" marginwidth="0" marginheight="0" scrolling="no"&gt;&lt;/iframe&gt;
&lt;div class="caption"&gt;Note: due to a bug in
slideshare's updated player, ink markings no longer appear in the
viewer.  &lt;br&gt;If you download the slides, they are present though.
Hopefully, the player will be fixed someday. &lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;h1&gt;Trust&lt;/h1&gt;
&lt;p&gt;What are valid sources of &lt;em&gt;trust&lt;/em&gt;?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;What are invalid sources of &lt;em&gt;trust&lt;/em&gt;?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;What mechanisms have humans evolved or constructed to enhance trust among strangers?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h1&gt;Distributed Consensus&lt;/h1&gt;
&lt;p&gt;How well does the 2-out-of-3 network consensus public ledger protocol work?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h1&gt;Proof-of-Work&lt;/h1&gt;
&lt;p&gt;Cynthia Dwork and Moni Naor.  &lt;a href="http://bitcoin-class.org/classes/class6/pvp.pdf"&gt;&lt;em&gt;Pricing via Processing or Combatting Junk Mail&lt;/em&gt;&lt;/a&gt;, CRYPTO 1992.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Pricing Function&lt;/strong&gt;: (&lt;span class="math"&gt;&lt;em&gt;f&lt;/em&gt;&lt;/span&gt;)
- moderately easy to compute
- cannot be amortized 
- computing &lt;span class="math"&gt;&lt;em&gt;f&lt;/em&gt;(&lt;em&gt;m&lt;/em&gt;&lt;sub&gt;1&lt;/sub&gt;), ..., &lt;em&gt;f&lt;/em&gt;(&lt;em&gt;m&lt;/em&gt;&lt;sub&gt;l&lt;/sub&gt;)&lt;/span&gt; costs &lt;span class="math"&gt;&lt;em&gt;l&lt;/em&gt;&lt;/span&gt; times as much as computing &lt;span class="math"&gt;&lt;em&gt;f&lt;/em&gt;(&lt;em&gt;m&lt;/em&gt;&lt;sub&gt;i&lt;sub&gt;)&lt;/span&gt;. 
- easily verified: given &lt;span class="math"&gt;&lt;em&gt;x&lt;/em&gt;&lt;/span&gt;, &lt;span class="math"&gt;&lt;em&gt;y&lt;/em&gt;&lt;/span&gt; easy to check &lt;span class="math"&gt;&lt;em&gt;y&lt;/em&gt; = &lt;em&gt;f&lt;/em&gt;(&lt;em&gt;x&lt;/em&gt;)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Adam Back. &lt;a href="http://www.hashcash.org/papers/announce.txt"&gt;&lt;em&gt;Hash Cash Postage Implementation&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Interactive Hashcash&lt;/strong&gt;:&lt;br /&gt;
1. Sender to Receiver: &lt;code&gt;Hello&lt;/code&gt;&lt;br /&gt;
2. Receiver to Sender: &lt;span class="math"&gt;&lt;em&gt;r&lt;/em&gt;&lt;/span&gt; (random nonce)&lt;br /&gt;
3. Sender to Receiver: &lt;span class="math"&gt;&lt;em&gt;x&lt;/em&gt;&lt;/span&gt;, &lt;code&gt;Mail&lt;/code&gt; where &lt;span class="math"&gt;&lt;em&gt;x&lt;/em&gt; = &lt;em&gt;f&lt;/em&gt;(&lt;em&gt;r&lt;/em&gt;)&lt;/span&gt;.&lt;br /&gt;
4. Receiver verifies &lt;span class="math"&gt;&lt;em&gt;x&lt;/em&gt; = &lt;em&gt;f&lt;/em&gt;(&lt;em&gt;r&lt;/em&gt;)&lt;/span&gt;.  &lt;/p&gt;
&lt;p&gt;How well does this protocol work for sending mail?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Suppose we use SHA-256 for &lt;span class="math"&gt;&lt;em&gt;f&lt;/em&gt;&lt;/span&gt;?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;How can we make this protocol non-interactive?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h1&gt;Bitcoin Mining&lt;/h1&gt;
&lt;p&gt;Proof-of-work: Find an &lt;span class="math"&gt;&lt;em&gt;x&lt;/em&gt;&lt;/span&gt; such that: SHA-256(SHA-256(&lt;span class="math"&gt;&lt;em&gt;r&lt;/em&gt;&lt;/span&gt; + &lt;span class="math"&gt;&lt;em&gt;x&lt;/em&gt;&lt;/span&gt;)) &amp;lt; &lt;span class="math"&gt;&lt;em&gt;T&lt;/em&gt;/&lt;em&gt;d&lt;/em&gt;&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;&lt;em&gt;d&lt;/em&gt;&lt;/span&gt; is the "difficulty" (varies).&lt;br /&gt;
&lt;span class="math"&gt;&lt;em&gt;T&lt;/em&gt;&lt;/span&gt; is a fixed target (256-bit number).&lt;br /&gt;
&lt;span class="math"&gt;&lt;em&gt;r&lt;/em&gt;&lt;/span&gt; depends on hash of previous block, transactions, and other information.&lt;/p&gt;
&lt;p&gt;What does it mean for the bitcoin difficulty to go down?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href="https://github.com/bitcoin/bitcoin/blob/master/src/miner.cpp"&gt;BitcoinMiner&lt;/a&gt; (code from core Bitcoin implementation)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;//&lt;/span&gt;
&lt;span class="c1"&gt;// ScanHash scans nonces looking for a hash with at least some zero bits.&lt;/span&gt;
&lt;span class="c1"&gt;// The nonce is usually preserved between calls, but periodically or if the&lt;/span&gt;
&lt;span class="c1"&gt;// nonce is 0xffff0000 or above, the block is rebuilt and nNonce starts over at&lt;/span&gt;
&lt;span class="c1"&gt;// zero.&lt;/span&gt;
&lt;span class="c1"&gt;//&lt;/span&gt;
&lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="nf"&gt;ScanHash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;CBlockHeader&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pblock&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;uint32_t&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;nNonce&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;uint256&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;phash&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Write the first 76 bytes of the block header to a double-SHA256 state.&lt;/span&gt;
    &lt;span class="n"&gt;CHash256&lt;/span&gt; &lt;span class="n"&gt;hasher&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;CDataStream&lt;/span&gt; &lt;span class="n"&gt;ss&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SER_NETWORK&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PROTOCOL_VERSION&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;ss&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pblock&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;assert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ss&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;hasher&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Write&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ss&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;76&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;nNonce&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="c1"&gt;// Write the last 4 bytes of the block header (the nonce) to a copy of&lt;/span&gt;
        &lt;span class="c1"&gt;// the double-SHA256 state, and compute the result.&lt;/span&gt;
        &lt;span class="n"&gt;CHash256&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hasher&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Write&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;nNonce&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Finalize&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;phash&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="c1"&gt;// Return the nonce if the hash has at least some zero bits,&lt;/span&gt;
        &lt;span class="c1"&gt;// caller will check if it has enough to reach the target&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(((&lt;/span&gt;&lt;span class="kt"&gt;uint16_t&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;phash&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="c1"&gt;// If nothing found after trying for a while, return -1&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;nNonce&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0xfff&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="https://github.com/bitcoin/bitcoin/blob/master/src/miner.cpp#L438"&gt;BitcoinMiner&lt;/a&gt;: (excerpted, most error checking code removed)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="nf"&gt;BitcoinMiner&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CWallet&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pwallet&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;SetThreadPriority&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;THREAD_PRIORITY_LOWEST&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;CReserveKey&lt;/span&gt; &lt;span class="n"&gt;reservekey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pwallet&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;nExtraNonce&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;// Create new block&lt;/span&gt;
            &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;nTransactionsUpdatedLast&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mempool&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetTransactionsUpdated&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;CBlockIndex&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;pindexPrev&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;chainActive&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Tip&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

            &lt;span class="n"&gt;auto_ptr&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;CBlockTemplate&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;pblocktemplate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CreateNewBlockWithKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;reservekey&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
            &lt;span class="n"&gt;CBlock&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pblock&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;pblocktemplate&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;IncrementExtraNonce&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pblock&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pindexPrev&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nExtraNonce&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="kt"&gt;int64_t&lt;/span&gt; &lt;span class="n"&gt;nStart&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;GetTime&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;arith_uint256&lt;/span&gt; &lt;span class="n"&gt;hashTarget&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arith_uint256&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;SetCompact&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pblock&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;nBits&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;uint256&lt;/span&gt; &lt;span class="n"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="kt"&gt;uint32_t&lt;/span&gt; &lt;span class="n"&gt;nNonce&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="c1"&gt;// Check if something found&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ScanHash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pblock&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nNonce&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UintToArith256&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;hashTarget&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="c1"&gt;// Found a solution&lt;/span&gt;
                        &lt;span class="n"&gt;pblock&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;nNonce&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nNonce&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                        &lt;span class="n"&gt;assert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hash&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;pblock&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;GetHash&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

                        &lt;span class="n"&gt;SetThreadPriority&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;THREAD_PRIORITY_NORMAL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                        &lt;span class="n"&gt;LogPrintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;proof-of-work found  &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;  hash: %s  &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;target: %s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                              &lt;span class="n"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetHex&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;hashTarget&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetHex&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
                        &lt;span class="n"&gt;ProcessBlockFound&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pblock&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pwallet&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;reservekey&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                        &lt;span class="n"&gt;SetThreadPriority&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;THREAD_PRIORITY_LOWEST&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;

                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nNonce&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mh"&gt;0xffff0000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="c1"&gt;// ... other breaking conditions elided&lt;/span&gt;
                &lt;span class="c1"&gt;// Update nTime every few seconds&lt;/span&gt;
                &lt;span class="n"&gt;UpdateTime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pblock&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pindexPrev&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;boost&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;thread_interrupted&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;LogPrintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;BitcoinMiner terminated&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;throw&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary></entry><entry><title>Extra Office Hours</title><link href="http://bitcoin-class.org/extra-office-hours.html" rel="alternate"></link><updated>2015-01-29T00:00:00-05:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-01-29:extra-office-hours.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Alex Kuck&lt;/strong&gt; has offered to hold some extra office hours this evening
  to help out on Project 1.  You'll find him in the Rice Hall common
  area (the space next to the bagel shop) today, 5-7pm.&lt;/p&gt;</summary></entry><entry><title>Class 5: DigiCash</title><link href="http://bitcoin-class.org/class-5-digicash.html" rel="alternate"></link><updated>2015-01-28T00:00:00-05:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-01-28:class-5-digicash.html</id><summary type="html">&lt;p&gt;&lt;div class="phighlight"&gt;
   &lt;a href="http://bitcoin-class.org/classes/class5/class5.pdf"&gt;PDF version for printing&lt;/a&gt;
   &lt;/div&gt;&lt;/p&gt;
&lt;h2&gt;Schedule&lt;/h2&gt;
&lt;p&gt;&lt;div class="todo"&gt;
&lt;a href="http://bitcoin-class.org/pages/project1.html"&gt;Project 1&lt;/a&gt; is due &lt;strong&gt;Friday, 30 January&lt;/strong&gt; (11:59pm).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Upcoming office hours:&lt;/strong&gt;  Thursday 4-5pm (Dave, Rice 507); Friday (Nick, noon-2pm in Hackcville).
   &lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;center&gt; 
&lt;iframe src="//www.slideshare.net/slideshow/embed_code/44010587" width="476" height="400" frameborder="0" marginwidth="0" marginheight="0" scrolling="no"&gt;&lt;/iframe&gt;&lt;br&gt;
&lt;div class="caption"&gt;Note: due to a bug in
slideshare's updated player, ink markings no longer appear in the
viewer.  &lt;br&gt;If you download the slides, they are present though.
Hopefully, the player will be fixed someday. &lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;h2&gt;Cryptographic Hash Functions&lt;/h2&gt;
&lt;p&gt;A &lt;em&gt;cryptographic hash function&lt;/em&gt;, &lt;span class="math"&gt;&lt;em&gt;H&lt;/em&gt;(&lt;em&gt;x&lt;/em&gt;)&lt;/span&gt;, must satisfy these two properties:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;one-way&lt;/strong&gt; (preimage resistance): given &lt;span class="math"&gt;&lt;em&gt;h&lt;/em&gt;= &lt;em&gt;H&lt;/em&gt;(&lt;em&gt;x&lt;/em&gt;)&lt;/span&gt; it is hard to find preimage &lt;span class="math"&gt;&lt;em&gt;x&lt;/em&gt;&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;strong collision-resistance&lt;/strong&gt;: hard to find any pair &lt;span class="math"&gt;&lt;em&gt;x&lt;/em&gt;&lt;/span&gt; and &lt;span class="math"&gt;&lt;em&gt;y&lt;/em&gt;&lt;/span&gt; where &lt;span class="math"&gt;&lt;em&gt;H&lt;/em&gt;(&lt;em&gt;x&lt;/em&gt;) = &lt;em&gt;H&lt;/em&gt;(&lt;em&gt;y&lt;/em&gt;)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If we use SHA-256 for &lt;span class="math"&gt;&lt;em&gt;H&lt;/em&gt;&lt;/span&gt;, how many 258-bit
messages would be expected to hash to a given value &lt;span
class="math"&gt;&lt;em&gt;x&lt;/em&gt;&lt;/span&gt;?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h2&gt;Signing Message Digests&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Sign:&lt;/strong&gt; Sign(&lt;span class="math"&gt;m&lt;/span&gt;) = &lt;span class="math"&gt;&lt;em&gt;E&lt;/em&gt;(&lt;em&gt;KR&lt;/em&gt;&lt;sub&gt;A&lt;/sub&gt;, &lt;em&gt;H&lt;/em&gt;(&lt;em&gt;m&lt;/em&gt;))&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Given &lt;span class="math"&gt;&lt;em&gt;KU&lt;/em&gt;&lt;sub&gt;A&lt;/sub&gt;&lt;/span&gt;, &lt;span
class="math"&gt;&lt;em&gt;m&lt;/em&gt;&lt;/span&gt;, and &lt;span class="math"&gt;&lt;em&gt;S&lt;/em&gt;&lt;/span&gt;, how does Bob
verify that &lt;span class="math"&gt;&lt;em&gt;S&lt;/em&gt;&lt;/span&gt; is a valid signature from
Alice for &lt;span class="math"&gt;&lt;em&gt;m&lt;/em&gt;&lt;/span&gt;?&lt;/p&gt;
&lt;div class="gap"&gt;

&lt;/div&gt;

&lt;p&gt;A bitcoin address for public key &lt;em&gt;K&lt;/em&gt; is RIPEMD160(SHA256(&lt;em&gt;K&lt;/em&gt;)) where both
RIPEMD160 and SHA256 are cryptographic hash functions.  &lt;/p&gt;
&lt;p&gt;Is this more or less secure than just using &lt;em&gt;K&lt;/em&gt;?&lt;br /&gt;
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Suppose someone finds a way to find collisions for RIPEMD160.  How
serious of a risk would this pose to bitcoin?&lt;br /&gt;
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Suppose someone finds a way to find preimages for RIPEMD160.  How
serious of a risk would this pose to bitcoin?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h2&gt;Untraceable Electronic Cash&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.fdic.gov/bank/individual/failed/hightrust.html"&gt;High Trust Bank&lt;/a&gt; must be trusty!&lt;/p&gt;
&lt;p&gt;David Chaum, Amos Fiat, and Moni Naor.  &lt;a href="http://bitcoin-class.org/classes/class5/ecash.pdf"&gt;&lt;em&gt;Untraceable Electronic
Cash&lt;/em&gt;&lt;/a&gt;.  CRYPTO 1988.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Simple RSA Signatures&lt;/strong&gt;&lt;br /&gt;
Public Key = &lt;span class="math"&gt;(&lt;em&gt;e&lt;/em&gt;, &lt;em&gt;n&lt;/em&gt;)&lt;/span&gt;
Private Key = &lt;span class="math"&gt;&lt;em&gt;d&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Identity: &lt;span class="math"&gt;&lt;em&gt;M&lt;/em&gt;&lt;sup&gt;&lt;em&gt;de&lt;/em&gt;&lt;/sup&gt; = &lt;em&gt;M&lt;/em&gt; mod &lt;em&gt;n&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;Sign(&lt;em&gt;m&lt;/em&gt;) = &lt;em&gt;m&lt;/em&gt;&lt;sup&gt;&lt;em&gt;d&lt;/em&gt;&lt;/sup&gt; mod &lt;em&gt;n&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Blind Signatures&lt;/strong&gt;
Alice picks random &lt;span class="math"&gt;&lt;em&gt;k&lt;/em&gt;&lt;/span&gt; in &lt;span class="math"&gt;[1, &lt;em&gt;n&lt;/em&gt;)&lt;/span&gt;&lt;br /&gt;
&lt;span class="math"&gt;&lt;em&gt;t&lt;/em&gt; = &lt;em&gt;mk&lt;/em&gt;&lt;sup&gt;&lt;em&gt;e&lt;/em&gt;&lt;/sup&gt; mod &lt;em&gt;n&lt;/em&gt;&lt;/span&gt;&lt;br /&gt;
Sends &lt;span class="math"&gt;&lt;em&gt;t&lt;/em&gt;&lt;/span&gt; to signer.&lt;/p&gt;
&lt;p&gt;Signer returns &lt;span class="math"&gt;&lt;em&gt;t&lt;/em&gt;&lt;sup&gt;&lt;em&gt;d&lt;/em&gt;&lt;/sub&gt;&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Signer returns &lt;span class="math"&gt;&lt;em&gt;t&lt;/em&gt;&lt;sup&gt;&lt;em&gt;d&lt;/em&gt;&lt;/sup&gt;&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;&lt;em&gt;t&lt;/em&gt;&lt;sup&gt;&lt;em&gt;d&lt;/em&gt;&lt;/sup&gt; = (&lt;em&gt;mk&lt;/em&gt;&lt;sup&gt;&lt;em&gt;e&lt;/em&gt;&lt;/sup&gt; mod &lt;em&gt;n&lt;/em&gt;)&lt;sup&gt;&lt;em&gt;d&lt;/em&gt;&lt;/sup&gt; mod &lt;em&gt;n&lt;/em&gt;&lt;/span&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="math"&gt;= &lt;em&gt;m&lt;/em&gt;&lt;sup&gt;&lt;em&gt;d&lt;/em&gt;&lt;/sup&gt;&lt;em&gt;k&lt;/em&gt;&lt;sup&gt;&lt;em&gt;ed&lt;/em&gt;&lt;/sup&gt; mod &lt;em&gt;n&lt;/em&gt;&lt;/span&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="math"&gt;= &lt;em&gt;m&lt;/em&gt;&lt;sup&gt;&lt;em&gt;d&lt;/em&gt;&lt;/sup&gt;&lt;em&gt;k&lt;/em&gt; mod &lt;em&gt;n&lt;/em&gt;&lt;/span&gt;  &lt;/p&gt;
&lt;p&gt;Dividing by &lt;span class="math"&gt;&lt;em&gt;k&lt;/em&gt;&lt;/span&gt; gives &lt;span class="math"&gt;Sign(&lt;em&gt;m&lt;/em&gt;) = &lt;em&gt;m&lt;/em&gt;&lt;sup&gt;&lt;em&gt;d&lt;/em&gt;&lt;/sup&gt; mod &lt;em&gt;n&lt;/em&gt;&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;What should a signer know before signing a random-looking string?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;
&lt;h1&gt;&lt;/h1&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Cut-and-Choose&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Suppose Alice sends 256 copies and the Bank checks 255 of them.  What is the probability Alice can cheat without getting caught?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;
&lt;/div&gt;

&lt;p&gt;What should the maximimum bill size be to prevent cheating?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;
&lt;/div&gt;

&lt;h3&gt;Identity Strings&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;I&lt;/em&gt; = "alice@alice.org"  &lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;&lt;em&gt;M&lt;/em&gt;&lt;sub&gt;&lt;em&gt;i&lt;/em&gt;&lt;/sub&gt;&lt;/span&gt; = "Bill #[r&lt;sub&gt;i&lt;/sub&gt;] : Bear’s Turns Bank owes the holder of this message $100."&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp; + identity strings:
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class="math"&gt;&lt;em&gt;I&lt;/em&gt;&lt;sub&gt;1&lt;/sub&gt; = (&lt;em&gt;h&lt;/em&gt;(&lt;em&gt;I&lt;/em&gt;&lt;sub&gt;1L&lt;/sub&gt;), &lt;em&gt;h&lt;/em&gt;(&lt;em&gt;I&lt;/em&gt;&lt;sub&gt;1R&lt;/sub&gt;)), ..., &lt;em&gt;I&lt;/em&gt;&lt;sub&gt;&lt;em&gt;n&lt;/em&gt;&lt;/sub&gt; = (&lt;em&gt;h&lt;/em&gt;(&lt;em&gt;I&lt;/em&gt;&lt;sub&gt;nL&lt;/sub&gt;), &lt;em&gt;h&lt;/em&gt;(&lt;em&gt;I&lt;/em&gt;&lt;sub&gt;nR&lt;/sub&gt;))&lt;/span&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp; where &lt;span class="math"&gt;&lt;em&gt;h&lt;/em&gt;&lt;/span&gt; is a one-way hash function and each &lt;span class="math"&gt;&lt;em&gt;I&lt;/em&gt;&lt;sub&gt;iL&lt;/sub&gt; &amp;oplus; &lt;em&gt;I&lt;/em&gt;&lt;sub&gt;iR&lt;/sub&gt; = &lt;em&gt;I&lt;/em&gt;&lt;/span&gt; (but &lt;span class="math"&gt;&lt;em&gt;I&lt;/em&gt;&lt;sub&gt;iL&lt;/sub&gt; is choosen randomly).&lt;/p&gt;
&lt;p&gt;To spend a bill, the reciever chooses either L or R for each pair for spender to open.&lt;/p&gt;
&lt;p&gt;What is the probability Alice can spend a bill twice without revealing her identity?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href="http://globalcryptonews.com/before-bitcoin-the-rise-and-fall-of-digicash/"&gt;Before Bitcoin: The Rise and Fall of DigiCash&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;By all accounts Chaum was a charismatic leader with an interesting management style, but he refused to compromise his artistic vision in any area against the best advice of his employees. He was suspicious of everyone and 'paranoid' with a habit of suddenly changing his mind without warning. At one time, Microsoft had offered DigiCash $180 million to allow them to preinstall Ecash software on Windows computers and the deal was on the verge of completion, but Chaum suddenly decided that his product was worth more and the deal collapsed. If the deal had gone through, cryptocurrency would now be as ubiquitous as Internet Explorer.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary></entry><entry><title>Class 4: Verifiably Random?</title><link href="http://bitcoin-class.org/class-4-verifiably-random.html" rel="alternate"></link><updated>2015-01-26T00:00:00-05:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-01-26:class-4-verifiably-random.html</id><summary type="html">&lt;p&gt;&lt;div class="phighlight"&gt;
   &lt;a href="http://bitcoin-class.org/classes/class4/class4.pdf"&gt;PDF version for printing&lt;/a&gt;
   &lt;/div&gt;&lt;/p&gt;
&lt;h2&gt;Schedule&lt;/h2&gt;
&lt;p&gt;&lt;div class="todo"&gt;
&lt;a href="http://bitcoin-class.org/pages/project1.html"&gt;Project 1&lt;/a&gt; is due &lt;strong&gt;Friday, 30 January&lt;/strong&gt; (11:59pm).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Scheduled office hours:&lt;/strong&gt;&lt;br /&gt;
Dave: after class Mondays, Thursdays 4-5pm (both in Rice 507)&lt;br /&gt;
Nick: Mondays 5-7pm (in Rice 442), Fridays (noon-2pm in Hackcville, #9 Elliewood Ave)
   &lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;center&gt; 
&lt;iframe src="//www.slideshare.net/slideshow/embed_code/43918186" width="476" height="400" frameborder="0" marginwidth="0" marginheight="0" scrolling="no"&gt;&lt;/iframe&gt;&lt;br&gt;
&lt;div class="caption"&gt;Note: due to a bug in
slideshare's updated player, ink markings no longer appear in the
viewer.  &lt;br&gt;If you download the slides, they are present though.
Hopefully, the player will be fixed someday. &lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;h2&gt;Signing with Elliptic Curves&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Elliptic curve discrete logarithm problem:&lt;/strong&gt; given points &lt;span class="math"&gt;&lt;em&gt;P&lt;/em&gt;&lt;/span&gt; and &lt;span class="math"&gt;&lt;em&gt;Q&lt;/em&gt;&lt;/span&gt;
  on an elliptic curve, it is hard to find an integer &lt;span class="math"&gt;&lt;em&gt;k&lt;/em&gt;&lt;/span&gt; such that &lt;span class="math"&gt;&lt;em&gt;Q&lt;/em&gt; = &lt;em&gt;kP&lt;/em&gt;&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt; curve, &lt;em&gt;G&lt;/em&gt; (a point on curve), (large) &lt;em&gt;n&lt;/em&gt; such that &lt;span class="math"&gt;&lt;em&gt;nG&lt;/em&gt; = 0&lt;/span&gt;. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Key pair:&lt;/strong&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;em&gt;Private key&lt;/em&gt;: &lt;span class="math"&gt;&lt;em&gt;d&lt;/em&gt;&lt;/span&gt; = pick a random integer in &lt;span class="math"&gt;[1, &lt;em&gt;n&lt;/em&gt;-1]&lt;/span&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;em&gt;Public key&lt;/em&gt;: point on the curve, &lt;span class="math"&gt;&lt;em&gt;Q&lt;/em&gt; = &lt;em&gt;dG&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Signing:&lt;/strong&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;pick random integer &lt;span class="math"&gt;&lt;em&gt;k&lt;/em&gt;&lt;/span&gt; in &lt;span class="math"&gt;[1, &lt;em&gt;n&lt;/em&gt;-1]&lt;/span&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;compute curve point: &lt;span class="math"&gt;(&lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;) = &lt;em&gt;kG&lt;/em&gt;&lt;/span&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;signature = &lt;span class="math"&gt;(&lt;em&gt;x&lt;/em&gt; mod &lt;em&gt;n&lt;/em&gt;, &lt;em&gt;k&lt;/em&gt;&lt;sup&gt;-1&lt;/sup&gt;(&lt;em&gt;z&lt;/em&gt; + &lt;em&gt;rd&lt;/em&gt;) mod &lt;em&gt;n&lt;/em&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;What are the reasons for prefering ECC for signatures in bitcoin over RSA-based signature algorithms?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;For an interesting history of improvements in factoring, see Carl
Pomerance, &lt;a href="http://www.ams.org/notices/199612/pomerance.pdf"&gt;&lt;em&gt;A Tale of Two
Sieves&lt;/em&gt;&lt;/a&gt;, Notices of
the AMS, December 1996:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;John Pollard in 1988 circulated a letter to several people outlining an idea of his
for factoring certain big numbers via algebraic number fields. His
original idea was not for any large composite, but for certain "pretty"
composites that had the property that they were close to powers and had
certain other nice properties as well. He illustrated the idea with a
factorization of the number&lt;/em&gt; &lt;span class="math"&gt;2&lt;sup&gt;2&lt;sup&gt;7&lt;/sup&gt;&lt;/sup&gt; + 1&lt;/span&gt;&lt;em&gt;, the seventh Fermat number.
I must admit that at first I was not too keen on Pollard's method, since it seemed to be applicable
to only a few numbers. ... 
But what of general numbers? In the summer of 1989 I was to give a talk at the meeting of the
Canadian Number Theory Association in Vancouver. It was to be a survey talk on factoring,
and I figured it would be a good idea to mention Pollard's new method. On the plane on the way
to the meeting I did a complexity analysis of the method as to how it would work for general
numbers, assuming myriad technical difficulties did not exist and that it was possible to run
it for general numbers. I was astounded. The complexity for this algorithm-that-did-not-yet exist
was of the shape&lt;/em&gt; &lt;span class="math"&gt;exp(&lt;em&gt;c&lt;/em&gt;(log &lt;em&gt;n&lt;/em&gt;)&lt;sup&gt;1/3&lt;/sup&gt; (log log &lt;em&gt;n&lt;/em&gt;)&lt;sup&gt;2/3&lt;/sup&gt;). &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Erich Wenger and Paul Wolfger, &lt;a href="http://eprint.iacr.org/2014/368.pdf"&gt;&lt;em&gt;Solving the Discrete Logarithm of a
113-bit Koblitz Curve with an FPGA
Cluster&lt;/em&gt;&lt;/a&gt;. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;It is possible to repeatedly fold a standard letter-sized sheet of
paper at the midway point about six to seven times. In 2012, some MIT
students were able to fold an 1.2 kilometer long toilet paper 13
times. And every time the paper was folded, the number of layers on
top of each other doubled. Therefore, the MIT students ended up with
213 = 8192 layers of paper on top of each other.  And poor Eve’s job
was to manually count all layers one by one.  Similar principles apply
in cryptography, although bigger numbers are involved.  In Elliptic
Curve Cryptography (ECC), where&lt;/em&gt; &lt;span class="math"&gt;log&lt;sub&gt;2&lt;/sub&gt;
&lt;em&gt;n&lt;/em&gt;&lt;/span&gt;&lt;em&gt;-bit private keys are used, Eve does not have to iterate
through all possible&lt;/em&gt; &lt;span class="math"&gt;&lt;em&gt;n&lt;/em&gt;&lt;/span&gt; &lt;em&gt;keys. Instead, Eve
would use the more efficient parallelizable Pollard’s rho algorithm
that finishes in approximately&lt;/em&gt; &lt;span class="math"&gt;sqrt(&lt;em&gt;n&lt;/em&gt;)&lt;/span&gt;
&lt;em&gt;steps. The omnipresent question is how big &lt;/em&gt;&lt;span class="math"&gt;&lt;em&gt;n&lt;/em&gt;&lt;/span&gt; &lt;em&gt;has to be such that even
the most powerful adversaries are not able to reconstruct a private
key. Especially in embedded, cost-sensitive applications, it is
important to use keys that are only as large as necessary.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Bitcoin's Curve&lt;/h2&gt;
&lt;p&gt;Standards for Efficient Cryptography: &lt;a href="http://www.secg.org/sec2-v2.pdf"&gt;&lt;em&gt;SEC 2: Recommended Elliptic
Curve Domain Parameters&lt;/em&gt;&lt;/a&gt; (Certicom
Research, 27 January 2010)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Verifiably random parameters offer some additional conservative features. These parameters are
chosen from a seed using SHA-1 as specified in ANSI X9.62 [X9.62]. This process ensures that
the parameters cannot be predetermined. The parameters are therefore extremely unlikely to
be susceptible to future special-purpose attacks, and no trapdoors can have been placed in the
parameters during their generation. When elliptic curve domain parameters are chosen verifiably
at random, the seed S used to generate the parameters may optionally be stored along with the
parameters so that users can verify the parameters were chosen verifiably at random.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;What does it mean for parameters to be "verifiably random"?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h1&gt;Randomness&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Kolmogorov Complexity:&lt;/strong&gt; &lt;span class="math"&gt;&lt;em&gt;K&lt;/em&gt;(&lt;em&gt;s&lt;/em&gt;)&lt;/span&gt; = the length of the shortest description of &lt;span class="math"&gt;&lt;em&gt;s&lt;/em&gt;&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Kolmogorov's Definition of Random:&lt;/strong&gt; A sequence &lt;span
  class="math"&gt;&lt;em&gt;s&lt;/em&gt;&lt;/span&gt; is random, if &lt;span class="math"&gt;&lt;em&gt;K&lt;/em&gt;(&lt;em&gt;s&lt;/em&gt;) =
  |&lt;em&gt;s&lt;/em&gt;| + &lt;em&gt;C&lt;/em&gt;&lt;/span&gt; &lt;/p&gt;
&lt;p&gt;What is the Kolmogorov Complexity of the string &lt;code&gt;0001000010000011111111100111...&lt;/code&gt;?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;
&lt;/div&gt;

&lt;p&gt;What is the Kolmogorov Complexity of the string: 1MRigEo5423vycLnUdSnA4C6Ts691fUiYu 18UikW89q9VgGDftQW3Gmuhe4sQDCFP5kD 19ZQwQmfAsgy47ErehfkW3SeSzNGFfH9iN 1AZCH1insc6JrT2Z9SiNvgtTugXg8sF8yd 15qYggRJvmyZfpchxvNqr6h3pNjw6bGBV9 1C943NwPPffUFY7VDzi3kt7KikXwc2vdkN 1JBhLLCgNYhR8f6AZcRS3mjfEAmMzPvwyf 1JvDrBSYm6o4ZTQUhwUE4FhPFxd2wuXWUR 1KcBM1RNhcp1oENycoD4AezA5Se4SrsZnA 16JZWC433XRxjWwR7X65uxRVFdLTmoPr4t 149LB8VYaT1BdMLyQUL92Kj6KrJfNwcp64 16zDGuzbwkHjW8dNYMw9stDjRbTzVSLZU1 1HfMaZn53ZDWKgmhWxk1UPZMjQ6QmpW6m 14gZWnuwKpRLTCUFCAgTZMciRaEdrkmEpr 1BZ2ateDPugmqLzYsXVy9EK5BguvXa2Bnj 1rCdRyMVcZHJaHA2LKUvRqYBcHqvAfQkc 1Ak8VwX6x4FPbA6aXTC3BQGQHnnhfaJuB8 129sBvF6Jternwdn5XcoA37LinQRcmAD5U1H2in 1HxEzSKHssPtog2krjFPiPfrKSiw4... ?&lt;/p&gt;
&lt;div class="gap"&gt;

&lt;/div&gt;

&lt;p&gt;Daniel J. Bernstein, Tung Chou, Chitchanok Chuengsatiansup, Andreas
H&amp;uuml;lsing, Tanja Lange, Ruben Niederhagen, and Christine van Vredendaal.
&lt;a href="https://eprint.iacr.org/2014/571.pdf"&gt;&lt;em&gt;How to Manipulate Curve Standards: A White Paper for the Black  Hat&lt;/em&gt;&lt;/a&gt;, 2014.&lt;/p&gt;
&lt;p&gt;How likely is it that the parameters for the secp256k1 curve used by bitcoin have a trapdoor?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;How should ECC parameters be generated for an important curve in a standard?
&lt;div class="gap"&gt;  &lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;
&lt;h1&gt;&lt;/h1&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href="http://www.root-dnssec.org/wp-content/uploads/2010/02/draft-icann-dnssec-ceremonies-00.txt"&gt;&lt;em&gt;Root Zone DNSSEC KSK Ceremonies
Guide&lt;/em&gt;&lt;/a&gt;.
If you have a few hours to spare, you can watch a key signing for the
DNSSEC (Domain Name System): &lt;a href="https://www.iana.org/dnssec/ceremonies/20"&gt;DNSSEC KSK Ceremony
20&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Dual-EC PRNG&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://csrc.nist.gov/publications/nistpubs/800-90A/SP800-90A.pdf"&gt;NIST Special Publication 800-90A Recommendation for Random Number
Generation Using Deterministic Random Bit
Generators&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;&lt;em&gt;P&lt;/em&gt;&lt;/span&gt; and &lt;span class="math"&gt;&lt;em&gt;Q&lt;/em&gt;&lt;/span&gt; are points on the curve, specified by the standard (but not
explained how &lt;span class="math"&gt;&lt;em&gt;Q&lt;/em&gt;&lt;/span&gt; is choosen).  &lt;span class="math"&gt;&lt;em&gt;P&lt;/em&gt;&lt;/span&gt; is a generator, so there exists some
&lt;span class="math"&gt;&lt;em&gt;e&lt;/em&gt;&lt;/span&gt; such that &lt;span class="math"&gt;&lt;em&gt;Q&lt;/em&gt;&lt;sup&gt;&lt;em&gt;e&lt;/em&gt;&lt;/sup&gt; = &lt;em&gt;P&lt;/em&gt;&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;&lt;em&gt;s&lt;/em&gt;&lt;sub&gt;0&lt;/sub&gt; = &lt;/span&gt; initialize with seed randomness&lt;br /&gt;
&lt;span class="math"&gt;&lt;em&gt;s&lt;/em&gt;&lt;sub&gt;&lt;em&gt;i&lt;/em&gt;+1&lt;/sub&gt; = &amp;phiv;(&lt;em&gt;s&lt;/em&gt;&lt;sub&gt;&lt;em&gt;i&lt;/em&gt;&lt;/sub&gt; &amp;times; &lt;em&gt;P&lt;/em&gt;)&lt;/span&gt;&lt;br /&gt;
&lt;span class="math"&gt;&lt;em&gt;r&lt;/em&gt;&lt;sub&gt;&lt;em&gt;i&lt;/em&gt;&lt;/sub&gt; = &amp;phiv;(&lt;em&gt;s&lt;/em&gt;&lt;sub&gt;&lt;em&gt;i&lt;/em&gt;&lt;/sub&gt; &amp;times; &lt;em&gt;Q&lt;/em&gt;)&lt;/span&gt;&lt;br /&gt;
&lt;span class="math"&gt;&lt;em&gt;o&lt;/em&gt;&lt;sub&gt;&lt;em&gt;i&lt;/em&gt;&lt;/sub&gt; =&lt;/span&gt; the low-order 16 bits of the &lt;span class="math"&gt;&lt;em&gt;x&lt;/em&gt;&lt;/span&gt;-coordinate of &lt;span class="math"&gt;&lt;em&gt;r&lt;/em&gt;&lt;sub&gt;&lt;em&gt;i&lt;/em&gt;&lt;/sub&gt;&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Given &lt;span class="math"&gt;&lt;em&gt;o&lt;/em&gt;&lt;sub&gt;i&lt;/sub&gt;&lt;/span&gt;, how much work is it to find all the possible &lt;span class="math"&gt;&lt;em&gt;r&lt;/em&gt;&lt;sub&gt;i&lt;/sub&gt; = (&lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;)&lt;/span&gt; values?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Given &lt;span class="math"&gt;&lt;em&gt;e&lt;/em&gt;&lt;/span&gt;, what is &lt;span class="math"&gt;&amp;phiv;(&lt;em&gt;e&lt;/em&gt; &amp;times; &lt;em&gt;A&lt;/em&gt;)&lt;/span&gt; where &lt;span class="math"&gt;&lt;em&gt;A&lt;/em&gt;&lt;/span&gt; is a possible &lt;span class="math"&gt;&lt;em&gt;r&lt;/em&gt;&lt;sub&gt;&lt;em&gt;i&lt;/em&gt;&lt;/sub&gt;&lt;/span&gt; value?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Dan Shumow, Niels Ferguson.  &lt;a href="http://rump2007.cr.yp.to/15-shumow.pdf"&gt;&lt;em&gt;On the Possibility of a Back Door in the
NIST SP800-90 Dual Ec Prng&lt;/em&gt;&lt;/a&gt;.
CRYPTO 2007 Rump Session.&lt;/p&gt;
&lt;p&gt;Michael Wertheimer (NSA), &lt;a href="http://www.ams.org/notices/201502/rnoti-p165.pdf"&gt;&lt;em&gt;Encryption and the NSA Role in International
Standards&lt;/em&gt;&lt;/a&gt;, Notices
of the American Mathematical Society, February 2015.&lt;/p&gt;
&lt;p&gt;Wertheimer's letter is an attempt to respond to &lt;a href="http://www.ams.org/notices/201406/rnoti-p623.pdf"&gt;&lt;em&gt;Mathematicians Discuss the
Snowden Revelations&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;The recent revelations about the NSA’s spying
programs are both dismaying and encouraging.
What is encouraging is that they might lead not
just to a reform of the intelligence agencies but
also to a more serious look at what the ongoing
and inevitable erosion of privacy is doing to our
society. What is dismaying is less the intrusive data
collection itself and more what it reveals about the
decision-making processes inside the government.&lt;/em&gt; (Andrew Odlyzko)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;How satisfying is the NSA's response?  Are you more dismayed or encouraged?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;</summary></entry><entry><title>Office Hours</title><link href="http://bitcoin-class.org/office-hours.html" rel="alternate"></link><updated>2015-01-24T00:00:00-05:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-01-24:office-hours.html</id><summary type="html">&lt;p&gt;Here's the office hours schedule, starting this week:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;David Evans&lt;/strong&gt;:&lt;br /&gt;
Mondays right after class.&lt;br /&gt;
Thursdays, 4-5pm in Rice 507.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Nick Skelsey&lt;/strong&gt;:&lt;br /&gt;
Monday nights from 5-7pm in Rice 442 (Dave's lab).&lt;br /&gt;
Fridays from 12-2pm at &lt;a href="http://hackcville.com"&gt;Hackcville&lt;/a&gt; (#9 Elliewood Ave).&lt;/p&gt;
&lt;p&gt;Note that you can see these, as well as other events in the class in the
&lt;a href="https://www.google.com/calendar/embed?src=rmjagdrnmu3a9h2q5199lg4t28%40group.calendar.google.com&amp;amp;ctz=America/New_York"&gt;course
calendar&lt;/a&gt;
(which you should be able to embed in your own calendar).  When we need
to canel or reschedule office hours, it will be updated on the course
calendar.  &lt;/p&gt;</summary></entry><entry><title>Communication in Cryptocurrency Cafe</title><link href="http://bitcoin-class.org/communication-in-cryptocurrency-cafe.html" rel="alternate"></link><updated>2015-01-23T00:00:00-05:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-01-23:communication-in-cryptocurrency-cafe.html</id><summary type="html">&lt;p&gt;Here's some information on how communication will be done for this course.&lt;/p&gt;
&lt;p&gt;I prefer to avoid using email for group communication, so won't be email
spamming the entire class except when it really seems necessary.
Instead, nearly all (electronic) communication will be done through the
course website.&lt;/p&gt;
&lt;p&gt;You can subscribe to the site using an RSS reader, or receive an email
notification everytime the site is updated by using a service like
&lt;a href="https://blogtrottr.com/"&gt;https://blogtrottr.com/&lt;/a&gt; and subscribing to
&lt;code&gt;bitcoin-class.org&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Many of the pages on the course site will include a disqus discussion
forum.  If you don't already have an account with disqus, you can create
one the first time you post a comment (or sign-on to disqus using a
Google, Facebook, or Twitter account, if you don't mind you disqus
activities being visible to another provider).  You can also post
anonymously and should use this when you feel it is necessary, but
otherwise, please post using a name that will be recognizable to me and
your classmates.&lt;/p&gt;
&lt;p&gt;I don't want to force pseudo-discussion by making it a course
requirement to make a certain number of contributions to the on-line
discussions, but do encourage everyone to use the fora to contribute to
both your own learning and building the course community, and to provide
value to others in the class.&lt;/p&gt;
&lt;p&gt;In addition to the page-specific disqus comments, you can use the
&lt;a href="http://bitcoin-class.org/pages/forum.html"&gt;general forum&lt;/a&gt; for discussions that don't
fit into particular topics.  Feel free to use that forum to post links
and thoughts about any related information you find, as well as general
comments broadly relevant to the course.&lt;/p&gt;
&lt;p&gt;You can control settings in disqus to determine when you receive email
notifications (including subscribing to notifications for any comments
on the course site if you want, or getting a daily or weekly digest).&lt;/p&gt;
&lt;p&gt;If you have a non-confidential question about a course assignment or
content, please use the web site forums to ask it instead of emailing me
directly.  This way, I (or others) can respond in a way that will be
visible to everyone else who might have the same question.  Feel free to
use email to contact me directly for questions that are private or not
relevant to the rest of the class.&lt;/p&gt;</summary></entry><entry><title>Key Chase</title><link href="http://bitcoin-class.org/key-chase.html" rel="alternate"></link><updated>2015-01-22T00:00:00-05:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-01-22:key-chase.html</id><summary type="html">&lt;p&gt;As mentioned in class today, each of you should have received a small
deposit in your wallet.  You will need this for Project 1, but should
also use it as a starting point for attempting to learn as much as you
can about how we transfered funds (and possibly solve the puzzle leading
to something interesting).  You can try tracing the transaction both
forward and backward, trying to learn things like: where did the initial
coin come from and when did I buy it, how long did it take for all the
coin to be distributed, how much did it cost in transaction fees, etc.&lt;/p&gt;
&lt;p&gt;Note that each of you had a different bitcoin address, so you all have
different starting points for examining the transactions.&lt;/p&gt;
&lt;p&gt;Post interesting things you find about this in the discussion below.
(Note: the discussion won't appear on the main index page.  Click on the
title link to enter the article page that will include the discussion.)&lt;/p&gt;</summary></entry><entry><title>Class 3: Elliptic Curves</title><link href="http://bitcoin-class.org/class-3-elliptic-curves.html" rel="alternate"></link><updated>2015-01-21T00:00:00-05:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-01-21:class-3-elliptic-curves.html</id><summary type="html">&lt;p&gt;&lt;div class="phighlight"&gt;
   &lt;a href="http://bitcoin-class.org/classes/class3/class3.pdf"&gt;PDF version for printing&lt;/a&gt;
   &lt;/div&gt;&lt;/p&gt;
&lt;h2&gt;Schedule&lt;/h2&gt;
&lt;p&gt;&lt;div class="todo"&gt;
&lt;a href="http://bitcoin-class.org/pages/project1.html"&gt;Project 1&lt;/a&gt; is due &lt;strong&gt;Friday, 30 January&lt;/strong&gt;. &lt;/p&gt;
&lt;p&gt;Before the next class (Monday, Jan 26): &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Read:&lt;/strong&gt; Satoshi Nakamoto, &lt;a href="https://bitcoin.org/bitcoin.pdf"&gt;&lt;em&gt;Bitcoin: A Peer-to-Peer Electronic Cash
System&lt;/em&gt;&lt;/a&gt;, 2008.  The is the original
bitcoin paper, which is quite readable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Read:&lt;/strong&gt; &lt;a href="https://github.com/aantonop/bitcoinbook/blob/develop/ch05.asciidoc"&gt;&lt;em&gt;Chapter 5:
    Transactions&lt;/em&gt;&lt;/a&gt;
    from Andreas Antonopoulos' book.
   &lt;/div&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;center&gt; 
&lt;iframe src="//www.slideshare.net/slideshow/embed_code/43761680" width="476" height="400" frameborder="0" marginwidth="0" marginheight="0" scrolling="no"&gt;&lt;/iframe&gt;&lt;br&gt;
&lt;div class="caption"&gt;Note: due to a bug in
slideshare's updated player, ink markings no longer appear in the
viewer.  &lt;br&gt;If you download the slides, they are present though.
Hopefully, the player will be fixed someday. &lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;h3&gt;Asymmetric Cryptosystems Recap&lt;/h3&gt;
&lt;p&gt;For asymmetric cryptography, we need a one-way function with a trapdoor:
a function that can be easily inverted given a secret key, but is hard
to invert without knowledge of that key.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Signatures:&lt;/strong&gt; Signer encrypts a message with her own private key.
  Verifier checks the message using the signer's public key.&lt;/p&gt;
&lt;h2&gt;Elliptic Curve Cryptography&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Elliptic curve:&lt;/strong&gt; points satisfying an equation like &lt;span
class="math"&gt;&lt;em&gt;y&lt;/em&gt;&lt;sup&gt;2&lt;/sup&gt; = &lt;em&gt;x&lt;/em&gt;&lt;sup&gt;3&lt;/sup&gt; + 7&lt;/span&gt; (this is the curve
used in bitcoin).&lt;/p&gt;
&lt;p&gt;For real numbers, this is &lt;a href="http://www.wolframalpha.com/input/?i=y%5E2+%3D+x%5E3+%2B+7"&gt;easy to solve&lt;/a&gt;:
&lt;span class="math"&gt;&lt;em&gt;y&lt;/em&gt; = sqrt(&lt;em&gt;x&lt;/em&gt;&lt;sup&gt;3&lt;/sup&gt; + 7)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;In a finite field, it is complex enough to form the basis of cryptographic operations.&lt;/p&gt;
&lt;h2&gt;Crash Course in Group Theory&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Group:&lt;/strong&gt; A group is a set, &lt;span class="math"&gt;&lt;em&gt;G&lt;/em&gt;&lt;/span&gt;, on which the operation &lt;span class="math"&gt;&amp;oplus;&lt;/span&gt; is defined with the following properties:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Closure&lt;/em&gt;: for all &lt;span class="math"&gt;&lt;em&gt;a&lt;/em&gt;, &lt;em&gt;b&lt;/em&gt; &amp;isin; &lt;em&gt;G&lt;/em&gt;&lt;/span&gt;, &lt;span class="math"&gt;&lt;em&gt;a&lt;/em&gt; &amp;oplus; &lt;em&gt;b&lt;/em&gt; &amp;isin; &lt;em&gt;G&lt;/em&gt;&lt;/span&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Associative&lt;/em&gt;: for all &lt;span class="math"&gt;&lt;em&gt;a&lt;/em&gt;, &lt;em&gt;b&lt;/em&gt;, &lt;em&gt;c&lt;/em&gt; &amp;isin; &lt;em&gt;G&lt;/em&gt;&lt;/span&gt;, &lt;span class="math"&gt;(&lt;em&gt;a&lt;/em&gt; &amp;oplus; &lt;em&gt;b&lt;/em&gt;) &amp;oplus; &lt;em&gt;c&lt;/em&gt; = &lt;em&gt;a&lt;/em&gt; &amp;oplus; (&lt;em&gt;b&lt;/em&gt; &amp;oplus; &lt;em&gt;c&lt;/em&gt;)&lt;/span&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Identity&lt;/em&gt;: there is some element, &lt;span class="math"&gt;&lt;b&gt;0&lt;/b&gt; &amp;isin; &lt;em&gt;G&lt;/em&gt;&lt;/span&gt;, such that for all &lt;span class="math"&gt;a &amp;isin; &lt;em&gt;G&lt;/em&gt;&lt;/span&gt;, &lt;span class="math"&gt;&lt;em&gt;a&lt;/em&gt; &amp;oplus; &lt;b&gt;0&lt;/b&gt; = &lt;b&gt;0&lt;/b&gt; &amp;oplus; &lt;em&gt;a&lt;/em&gt; = &lt;em&gt;a&lt;/em&gt;&lt;span&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Inverse&lt;/em&gt;: for all &lt;span class="math"&gt;&lt;em&gt;a&lt;/em&gt; &amp;isin; &lt;em&gt;G&lt;/em&gt;&lt;/span&gt;, there exists an inverse, &lt;span class="math"&gt;-&lt;em&gt;a&lt;/em&gt; &amp;isin; &lt;em&gt;G&lt;/em&gt;&lt;/span&gt;, such that &lt;span class="math"&gt;&lt;em&gt;a&lt;/em&gt; &amp;oplus; (-&lt;em&gt;a&lt;/em&gt;) = &lt;b&gt;0&lt;/b&gt;&lt;/span&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Abelian Group:&lt;/strong&gt; An abelian (or commutative) group has this additional property:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Commutative&lt;/em&gt;: for all &lt;span class="math"&gt;&lt;em&gt;a&lt;/em&gt;, &lt;em&gt;b&lt;/em&gt; &amp;isin; &lt;em&gt;G&lt;/em&gt;&lt;/span&gt;, &lt;span class="math"&gt;&lt;em&gt;a&lt;/em&gt; &amp;oplus; &lt;em&gt;b&lt;/em&gt; = &lt;em&gt;b&lt;/em&gt; &amp;oplus; &lt;em&gt;a&lt;/em&gt;&lt;/span&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Are the integers and addition an abelian group?
&lt;div class="gap"&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;Are the whole numbers and addition an abelian group?
&lt;div class="gap"&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Finite Field:&lt;/strong&gt; A finite field is a set &lt;span class="math"&gt;&lt;em&gt;F&lt;/em&gt;&lt;/span&gt; of &lt;span class="math"&gt;&lt;em&gt;N&lt;/em&gt; &amp;ge; 2&lt;/span&gt; elements on which the operators &lt;span class="math"&gt;&amp;oplus;&lt;/span&gt; and &lt;span class="math"&gt;&amp;times;&lt;/span&gt; are defined with these properties:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class="math"&gt;&lt;em&gt;F&lt;/em&gt;&lt;/span&gt; is an &lt;em&gt;abelian group&lt;/em&gt; with identity &lt;span class="math"&gt;&lt;b&gt;0&lt;/b&gt;&lt;/span&gt; under the &lt;span class="math"&gt;&amp;oplus;&lt;/span&gt; operation.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The set &lt;span class="math"&gt;&lt;em&gt;F&lt;/em&gt; - { 0 }&lt;/span&gt; is an &lt;em&gt;abelian group&lt;/em&gt; with identity &lt;span class="math"&gt;&lt;b&gt;1&lt;/b&gt;&lt;/span&gt; under the &lt;span class="math"&gt;&amp;times;&lt;/span&gt; operation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Distributive: For all &lt;span class="math"&gt;&lt;em&gt;a&lt;/em&gt;, &lt;em&gt;b&lt;/em&gt;, &lt;em&gt;c&lt;/em&gt; &amp;isin; &lt;em&gt;F&lt;/em&gt;&lt;/span&gt;, &lt;span class="math"&gt;(&lt;em&gt;a&lt;/em&gt; &amp;oplus; &lt;em&gt;b&lt;/em&gt;) &amp;times; &lt;em&gt;c&lt;/em&gt; = (&lt;em&gt;a&lt;/em&gt; &amp;times; &lt;em&gt;c&lt;/em&gt;) &amp;oplus; (&lt;em&gt;b&lt;/em&gt; &amp;times; &lt;em&gt;c&lt;/em&gt;)&lt;/span&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;(Note that this requires for all &lt;span class="math"&gt;&lt;em&gt;a&lt;/em&gt;&lt;/span&gt;, &lt;span class="math"&gt;&lt;em&gt;a&lt;/em&gt; &amp;times; &lt;b&gt;0&lt;/b&gt; = &lt;b&gt;0&lt;/b&gt;&lt;/span&gt;.)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Prime Field Theorem:&lt;/strong&gt; For every prime number &lt;span
  class="math"&gt;&lt;em&gt;p&lt;/em&gt;&lt;/span&gt;, the set &lt;span class="math"&gt;{ 0, 1, &amp;hellip;, &lt;em&gt;p&lt;/em&gt;
  - 1 }&lt;/span&gt; forms a finite field with the operations addition and
  multiplication modulo &lt;span class="math"&gt;p&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Demonstrate that &lt;span class="math"&gt;&lt;em&gt;F&lt;/em&gt;&lt;sub&gt;3&lt;/sub&gt;&lt;/span&gt; is a finite field.
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;See &lt;a href="http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-451-principles-of-digital-communication-ii-spring-2005/lecture-notes/chap7.pdf"&gt;&lt;em&gt;Introduction to Finite
Fields&lt;/em&gt;&lt;/a&gt;
(notes from David Forney's &lt;a href="http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-451-principles-of-digital-communication-ii-spring-2005/index.htm"&gt;MIT 6.451
course&lt;/a&gt;)
for a proof that all prime fields, &lt;span
class="math"&gt;F&lt;sub&gt;p&lt;/sub&gt;&lt;/span&gt; are finite fields, and more thorough
introduction to finite fields.&lt;/p&gt;
&lt;h2&gt;Operations on Elliptic Curves&lt;/h2&gt;
&lt;p&gt;"Addition" on an elliptic curve is done by finding the a point on the
line between the two inputs points, and reflecting that point over the
x-axis.&lt;/p&gt;
&lt;p&gt;Here's what this looks like for real numbers (but don't be mislead
&amp;mdash; elliptic curves over finite fields do not look anything like
these simple curves):&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
   &lt;img src="http://media.coindesk.com/2014/10/point-addition.png"&gt;&lt;br&gt;
Image source: Eric Rykwalder, &lt;a href="http://www.coindesk.com/math-behind-bitcoin/"&gt;&lt;em&gt;The Math Behind Bitcoin&lt;/em&gt;&lt;/a&gt;.
   &lt;/center&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;&lt;em&gt;P&lt;/em&gt; + &lt;em&gt;Q&lt;/em&gt; = &lt;em&gt;R&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Doing addition on elliptic curves over finite fields is more complex,
and there has been a lot of research into how to do these operations
efficiently.  See the
&lt;a href="https://github.com/btcsuite/btcec/blob/master/btcec.go#L431"&gt;btcec.Add&lt;/a&gt;
code for how it is done in the library.&lt;/p&gt;
&lt;p&gt;Doubling (e.g., &lt;span class="math"&gt;&lt;em&gt;P&lt;/em&gt; + &lt;em&gt;P&lt;/em&gt; = &lt;em&gt;R&lt;/em&gt;&lt;/span&gt;) is the same idea,
except instead of finding the intersection of the line formed by the two
addends (which doesn't exist for the single point), finds the
intersection between the tangent of the curve.&lt;/p&gt;
&lt;p&gt;"Multiplication" is just repeated addition: &lt;span class="math"&gt;&lt;em&gt;kP&lt;/em&gt; = &lt;em&gt;P&lt;/em&gt; +
&lt;em&gt;P&lt;/em&gt; + ... + &lt;em&gt;P&lt;/em&gt;&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Is there a more efficient way to compute &lt;span class="math"&gt;9_P_&lt;/span&gt; than using 8 additions?&lt;br /&gt;
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;</summary></entry><entry><title>Class 2: Cryptography</title><link href="http://bitcoin-class.org/class-2-cryptography.html" rel="alternate"></link><updated>2015-01-14T00:00:00-05:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-01-14:class-2-cryptography.html</id><summary type="html">&lt;p&gt;&lt;div class="phighlight"&gt;
   &lt;a href="http://bitcoin-class.org/classes/class2/class2.pdf"&gt;PDF version for printing&lt;/a&gt;
   &lt;/div&gt;&lt;/p&gt;
&lt;h2&gt;Schedule&lt;/h2&gt;
&lt;p&gt;&lt;div class="todo"&gt;
Before the next class (Wednesday, Jan 21):&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Read:&lt;/strong&gt; 
&lt;a href="https://github.com/aantonop/bitcoinbook/blob/develop/ch03.asciidoc"&gt;&lt;em&gt;Chapter 3: The Bitcoin Client&lt;/em&gt;&lt;/a&gt;
and
&lt;a href="https://github.com/aantonop/bitcoinbook/blob/develop/ch04.asciidoc"&gt;&lt;em&gt;Chapter 4: Keys, Addresses, Wallets&lt;/em&gt;&lt;/a&gt;
from Andreas M. Antonopoulos, &lt;a href="https://github.com/aantonop/bitcoinbook"&gt;&lt;em&gt;Mastering Bitcoin: Unlocking Digital
Cryptocurrencies&lt;/em&gt;&lt;/a&gt; book (also
available &lt;a href="http://www.amazon.com/Mastering-Bitcoin-Unlocking-Digital-Crypto-Currencies/dp/1449374042"&gt;in
print&lt;/a&gt;).  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pay attention to your email.  &lt;strike&gt;You should receive an email by Sunday,
and it will include some other things to do before Wednesday's class.&lt;/strike&gt; [Change in plans: I haven't sent out the email yet.  I expect to do this Tuesday, and there will not be anything new due on Wednesday. Sorry for the delay!]
   &lt;/div&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;center&gt; &lt;iframe
src="//www.slideshare.net/slideshow/embed_code/43552674" width="476"
height="400" frameborder="0" marginwidth="0" marginheight="0"
scrolling="no"&gt;&lt;/iframe&gt;&lt;br&gt; 
&lt;div class="caption"&gt; Note: due to a bug in
slideshare's updated player, ink markings no longer appear in the
viewer.  &lt;br&gt;If you download the slides, they are present though.
Hopefully, the player will be fixed someday.  &lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;/center&gt;&lt;/p&gt;
&lt;!--
how is it possible to own something digital?

- copyright!

England

1662 - Licensing of the Press Act

guild of printers, "Stationer's Company" (formed in 1403, royal charter in 1557)
granted monopoly on printing [cf. Chinese granting monopoly on salt production]
exclusive right to print - responsible for censoring

ended in 1694 - no restrictions        


Act of Queen Anne
--&gt;

&lt;h2&gt;Cryptography&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;kryptos&lt;/em&gt; is a Greek root meaning hidden ("secret")&lt;/p&gt;
&lt;p&gt;&lt;em&gt;crypto&lt;/em&gt; + &lt;em&gt;graphy&lt;/em&gt; = "secret writing"&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Decryption&lt;/em&gt; is what the intended receiver does.&lt;br /&gt;
&lt;em&gt;Cryptanalysis&lt;/em&gt; is what an attacker does.  &lt;/p&gt;
&lt;p&gt;How are cryptography and security related?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h3&gt;Simple Message Cryptosystem&lt;/h3&gt;
&lt;p&gt;Two functions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Encrypt:&lt;/strong&gt; &lt;span class="math"&gt;&lt;em&gt;E&lt;/em&gt;(&lt;em&gt;m&lt;/em&gt;: byte[]) &amp;rarr; byte[]&lt;/span&gt;.  The input is called the
    &lt;strong&gt;plaintext&lt;/strong&gt;; the output is called the &lt;strong&gt;ciphertext&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Decrypt:&lt;/strong&gt; &lt;span class="math"&gt;&lt;em&gt;D&lt;/em&gt;(&lt;em&gt;c&lt;/em&gt;: byte[]) &amp;rarr; byte[]&lt;/span&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Required properties:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Correctness:&lt;/strong&gt; for all possible messages, &lt;span class="math"&gt;&lt;em&gt;m&lt;/em&gt;, &lt;em&gt;D&lt;/em&gt;(&lt;em&gt;E&lt;/em&gt;(&lt;em&gt;m&lt;/em&gt;)) = &lt;em&gt;m&lt;/em&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Security:&lt;/strong&gt; given the output of &lt;span class="math"&gt;&lt;em&gt;E&lt;/em&gt;(&lt;em&gt;m&lt;/em&gt;)&lt;/span&gt;, it is "hard" to learn anything interesting about &lt;span class="math"&gt;&lt;em&gt;m&lt;/em&gt;&lt;/span&gt;.  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="http://web.mit.edu/newsoffice/2013/goldwasser-and-micali-win-turing-award-0313.html"&gt;&lt;em&gt;Goldwasser and Micali win Turing Award: Team honored for
‘revolutionizing the science of
cryptography'&lt;/em&gt;&lt;/a&gt;,
MIT News, 13 March 2013. &lt;/p&gt;
&lt;p&gt;Their paper that introduced semantic security notions is:
&lt;a href="http://groups.csail.mit.edu/cis/pubs/shafi/1982-stoc.pdf"&gt;&lt;em&gt;Probabilistic Encryption and How to Play Mental Poker Keeping Secret
All Partial
Information&lt;/em&gt;&lt;/a&gt;,
ACM Symposium on Theory of Computing, 1982.  (We will not get into
formal security definitions or proofs in this class, but you should take
&lt;a href="http://www.cs.virginia.edu/~mohammad/"&gt;Mohammad Mahmoody&lt;/a&gt;'s class to
learn them.)&lt;/p&gt;
&lt;h3&gt;Keyed Symmetric Cryptosystem&lt;/h3&gt;
&lt;p&gt;Claude Shannon, &lt;a href="http://netlab.cs.ucla.edu/wiki/files/shannon1949.pdf"&gt;&lt;em&gt;Communication Theory of Secrecy Systems&lt;/em&gt;&lt;/a&gt;, 1949 (work done during World War II, but declassified later).&lt;/p&gt;
&lt;p&gt;Two functions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Encrypt:&lt;/strong&gt; &lt;span class="math"&gt;&lt;em&gt;E&lt;/em&gt;(&lt;em&gt;&lt;font color="red"&gt;k&lt;/font&gt;&lt;/em&gt;: byte[], &lt;em&gt;m&lt;/em&gt;: byte[]) &amp;rarr; byte[]&lt;/span&gt;. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Decrypt:&lt;/strong&gt; &lt;span class="math"&gt;&lt;em&gt;D&lt;/em&gt;(&lt;em&gt;&lt;font color="red"&gt;k&lt;/font&gt;&lt;/em&gt;, &lt;em&gt;c&lt;/em&gt;: byte[]) &amp;rarr; byte[]&lt;/span&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Required properties:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Correctness:&lt;/strong&gt; for all possible messages, &lt;span class="math"&gt;&lt;em&gt;m&lt;/em&gt;&lt;/span&gt;, and keys, &lt;span class="math"&gt;&lt;em&gt;k&lt;/em&gt;&lt;/span&gt;, &lt;span class="math"&gt;&lt;em&gt;D&lt;/em&gt;(&lt;em&gt;&lt;font color="red"&gt;k&lt;/font&gt;&lt;/em&gt;, &lt;em&gt;E&lt;/em&gt;(&lt;em&gt;&lt;font color="red"&gt;k&lt;/font&gt;&lt;/em&gt;, &lt;em&gt;m&lt;/em&gt;)) = &lt;em&gt;m&lt;/em&gt;&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Security:&lt;/strong&gt; given &lt;span class="math"&gt;&lt;em&gt;E&lt;/em&gt;&lt;/span&gt;, &lt;span class="math"&gt;&lt;em&gt;D&lt;/em&gt;&lt;/span&gt;, and the output of &lt;span class="math"&gt;&lt;em&gt;E&lt;/em&gt;(&lt;font color="red"&gt;&lt;em&gt;k&lt;/em&gt;&lt;/font&gt;, &lt;em&gt;m&lt;/em&gt;)&lt;/span&gt; it is "hard" to learn anything interesting about &lt;span class="math"&gt;&lt;em&gt;m&lt;/em&gt;&lt;/span&gt; (without knowing &lt;span class="math"&gt;&lt;font color="red"&gt;&lt;em&gt;k&lt;/em&gt;&lt;/font&gt;&lt;/span&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Are these properties enough to be secure against an active attacker?
&lt;div class="gap"&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h3&gt;Jefferson's Wheel Cipher&lt;/h3&gt;
&lt;p&gt;There are, of course, better ways to break a message encrypted using
Jefferson's Wheel cipher than just trying all possible keys as in a
brute force attack.  Here's how Geoff Stoker solved it: &lt;a href="http://www.cs.virginia.edu/~evans/cs588-fall2001/challenges/wheel-solved.html"&gt;&lt;em&gt;Jefferson
Wheel Challenge
solved!&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Keyspace:&lt;/strong&gt; the set of all possible keys.  Assume (hopefully for
  user!) that key is drawn randomly from this set.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Brute Force Attack:&lt;/strong&gt; try for all possible keys, &lt;span
  class="math"&gt;&lt;em&gt;k&lt;sub&gt;i&lt;/sub&gt;&lt;/em&gt;&lt;/span&gt;, computing &lt;span
  class="math"&gt;&lt;em&gt;D&lt;/em&gt;(&lt;em&gt;k&lt;/em&gt;&lt;sub&gt;i&lt;/sub&gt;)&lt;/span&gt; and see if it looks like a
  reasonable plaintext.  &lt;/p&gt;
&lt;p&gt;In order for a brute force attack to succeed, what properties are
necessary about (1) the keyspace and (2) the message space?&lt;/p&gt;
&lt;div class="gap"&gt;

&lt;/div&gt;

&lt;h3&gt;Asymmetric Cryptosystems&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Asymmetric cryptosystems&lt;/strong&gt; use &lt;em&gt;different functions&lt;/em&gt; for encrypting
  and decrypting, with the property that revealing the encryption
  function does not reveal the decryption function.  With Kerckhoff's
  Principle, this means there are different keys for encryption and
  decryption.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Generate:&lt;/strong&gt; produce key pair, &lt;span class="math"&gt;(&lt;em&gt;&lt;font color="green"&gt;KU&lt;sub&gt;X&lt;/sub&gt;&lt;/font&gt;&lt;/em&gt;, &lt;em&gt;&lt;font color="red"&gt;KR&lt;sub&gt;X&lt;/sub&gt;&lt;/font&gt;&lt;/em&gt;)&lt;/span&gt;, and publish the public key, &lt;span class="math"&gt;&lt;em&gt;&lt;font color="green"&gt;KU&lt;sub&gt;X&lt;/sub&gt;&lt;/font&gt;&lt;/em&gt;&lt;/span&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Encrypt:&lt;/strong&gt; &lt;span class="math"&gt;&lt;em&gt;E&lt;/em&gt;(&lt;em&gt;&lt;font color="green"&gt;KU&lt;sub&gt;X&lt;/sub&gt;&lt;/font&gt;&lt;/em&gt;: byte[], &lt;em&gt;m&lt;/em&gt;: byte[]) &amp;rarr; byte[]&lt;/span&gt;. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Decrypt:&lt;/strong&gt; &lt;span class="math"&gt;&lt;em&gt;D&lt;/em&gt;(&lt;em&gt;&lt;font color="red"&gt;KR&lt;sub&gt;X&lt;/sub&gt;&lt;/font&gt;&lt;/em&gt;, &lt;em&gt;c&lt;/em&gt;: byte[]) &amp;rarr; byte[]&lt;/span&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Messages:&lt;/strong&gt; Sender encrypts a message with the recipient's public key.
  Recipient decrypts the message using her private key.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Signatures:&lt;/strong&gt; Signer encrypts a message with her own private key.
  Verifier checks the message using the signer's public key.&lt;/p&gt;
&lt;p&gt;How can we use asymmetric cryptosystems to &lt;em&gt;prove&lt;/em&gt; ownership?
&lt;div class="gap"&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;How can we use asymmetric cryptosystems to &lt;em&gt;transfer&lt;/em&gt; ownership?
&lt;div class="gap"&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;Assuming we have a strong asymmetric cryptosystem, what hard problems are left
to solve to make a cryptocurrency?&lt;/p&gt;
&lt;div class="gap"&gt;
&lt;/div&gt;

&lt;h3&gt;Martin Luther King at the University&lt;/h3&gt;
&lt;p&gt;There's no class on Monday to honor Martin Luther King day.  Students
are encouraged to use the class time to read Paul Gaston's &lt;a href="http://www.virginia.edu/woodson/pubs/aa.htm"&gt;&lt;em&gt;Honor to
the Class of 1969&lt;/em&gt;&lt;/a&gt; and to
learn about &lt;a href="https://web.archive.org/web/20100615104829/http://cti.itc.virginia.edu/~hius316/desegregation/deseghome50s.html"&gt;&lt;em&gt;Desegregation at the University of Virginia and its
Surrounding
Communities&lt;/em&gt;&lt;/a&gt;
(including &lt;a href="https://web.archive.org/web/20070503051645/http://cti.itc.virginia.edu/~hius316/desegregation/pace1.html"&gt;President Darden's
letter&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Why is &lt;a href="http://www.nytimes.com/1997/08/26/us/e-f-shannon-jr-79-dies-forceful-chief-of-u-of-virginia.html"&gt;Edgar
Shannon&lt;/a&gt;
the only past-president of UVa with nothing significant at the
University named after him?  Why does the University still have
courtyards and schools named after Colgate Darden and none for &lt;a href="http://www.virginia.edu/woodson/projects/kenan/swanson/swanson.html"&gt;Gregory
Swanson&lt;/a&gt;
or &lt;a href="http://artsandsciences.virginia.edu/meredithwoo/blog/the-desegregated-heart/"&gt;Sarah Patton
Boyle&lt;/a&gt;?&lt;/p&gt;
&lt;div class="gap"&gt;
&lt;/div&gt;

&lt;p&gt;How do the actions of our current administration (especially in response
to recent events) compare to those of the 1960s?  &lt;/p&gt;
&lt;div class="gap"&gt;
&lt;/div&gt;

&lt;p&gt;Will there be justification for an &lt;em&gt;Honor to the Class of
2015/2016/2017/2018&lt;/em&gt; essay?
&lt;div class="gap"&gt;
&lt;/div&gt;&lt;/p&gt;</summary></entry><entry><title>Class 1: Why are these buildings burning down?</title><link href="http://bitcoin-class.org/class-1-why-are-these-buildings-burning-down.html" rel="alternate"></link><updated>2015-01-12T00:00:00-05:00</updated><author><name>David Evans</name></author><id>tag:bitcoin-class.org,2015-01-12:class-1-why-are-these-buildings-burning-down.html</id><summary type="html">&lt;p&gt;&lt;div class="phighlight"&gt;
   &lt;a href="http://bitcoin-class.org/classes/class1/class1.pdf"&gt;PDF version for printing&lt;/a&gt;
   &lt;/div&gt;&lt;/p&gt;
&lt;h2&gt;Schedule&lt;/h2&gt;
&lt;p&gt;&lt;div class="todo"&gt;
Before 11:59pm tomorrow (Tuesday, 13 January):&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Read:&lt;/strong&gt; &lt;a href="http://bitcoin-class.org/pages/syllabus.html"&gt;Course Syllabus&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Read:&lt;/strong&gt; &lt;a href="http://bitcoin-class.org/readings/magic_of_mining.pdf"&gt;&lt;em&gt;The Magic of
Mining&lt;/em&gt;&lt;/a&gt;, The Economist, 10
January 2015.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Read:&lt;/strong&gt; 
&lt;a href="https://github.com/aantonop/bitcoinbook/blob/develop/ch01.asciidoc"&gt;&lt;em&gt;Chapter 1: Introduction&lt;/em&gt;&lt;/a&gt;
and
&lt;a href="https://github.com/aantonop/bitcoinbook/blob/develop/ch02.asciidoc"&gt;&lt;em&gt;Chapter 2: How Bitcoin Works&lt;/em&gt;&lt;/a&gt;
from Andreas M. Antonopoulos, &lt;a href="https://github.com/aantonop/bitcoinbook"&gt;&lt;em&gt;Mastering Bitcoin: Unlocking Digital
Cryptocurrencies&lt;/em&gt;&lt;/a&gt; book (also
available &lt;a href="http://www.amazon.com/Mastering-Bitcoin-Unlocking-Digital-Crypto-Currencies/dp/1449374042"&gt;in
print&lt;/a&gt;).  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Setup&lt;/strong&gt; a bitcoin wallet (if you don't already have one,
&lt;a href="https://multibit.org/"&gt;MultiBit&lt;/a&gt; is a good choice for this).  After
creating a wallet, you should find the Recieving Address, to use in PS0.
Note that it is not necessary now, or at any time during this class, for
you to actually buy bitcoins with your own money.  If you are inclined
to do this, be careful, and don't use any funds you cannot afford to
lose!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Submit&lt;/strong&gt; &lt;a href="http://bitcoin-class.org/pages/ps0.html"&gt;Problem Set 0&lt;/a&gt; before
&lt;strong&gt;11:59pm tomorrow&lt;/strong&gt; (Tuesday, 13 January).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;

&lt;p&gt;&lt;center&gt;
&lt;iframe src="//www.slideshare.net/slideshow/embed_code/43441659"
width="476" height="400" frameborder="0" marginwidth="0"
marginheight="0" scrolling="no"&gt;&lt;/iframe&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;h2&gt;Notes&lt;/h2&gt;
&lt;p&gt;What is currency?&lt;/p&gt;
&lt;p&gt;&lt;div class="gap"&gt;&lt;/div&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Every commodity admits two uses: (1) its proper use, (2) its use as an article of exchange.&lt;/em&gt;&lt;br /&gt;
Aristotle's &lt;a href="https://play.google.com/books/reader?id=1J7N4eAKuhwC&amp;amp;printsec=frontcover&amp;amp;output=reader&amp;amp;hl=en&amp;amp;pg=GBS.PR13"&gt;&lt;em&gt;Politics&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;What properties should a currency have?&lt;/p&gt;
&lt;div class="gap"&gt;&lt;/div&gt;

&lt;p&gt;What is a &lt;em&gt;fiat currency&lt;/em&gt;?&lt;/p&gt;
&lt;div class="gap"&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;All these pieces of paper are, issued with as much solemnity and authority as if they were of pure gold or silver... and indeed everybody takes them readily, for wheresoever a person may go throughout the Great Kaan's dominions he shall find these pieces of paper current, and shall be able to transact all sales and purchases of goods by means of them just as well as if they were coins of pure gold.&lt;/em&gt;&lt;br /&gt;
Macro Polo (on Yuan Dynasty paper money, 13th century)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Was salt a fiat currency as used by the Romans?
&lt;div class="gap"&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;Was salt a fiat currency as used by the Han Dynasty?&lt;/p&gt;
&lt;div class="gap"&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="http://sinosphere.blogs.nytimes.com/2014/11/21/chinas-millenniums-old-salt-monopoly-no-match-for-economic-reform/"&gt;&lt;em&gt;China’s Millenniums-Old Salt Monopoly No Match for Economic Reform&lt;/em&gt;&lt;/a&gt;, New York Times, 21 November 2014.&lt;/p&gt;
&lt;p&gt;What does it mean to &lt;em&gt;own&lt;/em&gt; something digital?
&lt;div class="gap"&gt;&lt;/div&gt;&lt;/p&gt;
&lt;h2&gt;Questions&lt;/h2&gt;
&lt;p&gt;Why will bitcoin mining facilities continue to frequently burn down?&lt;/p&gt;
&lt;div class="gap"&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="http://bravenewcoin.com/news/bitcoin-hashrate-jumps-then-drops-how/"&gt;&lt;em&gt;How $3.6 Million Worth Of Bitcoin Mining Equipment Went Up In Smoke&lt;/em&gt;&lt;/a&gt;, Brave New Coin, 6 November 2014.&lt;/p&gt;
&lt;p&gt;Why are there &lt;a href="https://angel.co/cryptocurrency-2"&gt;over 600 cryptocurrency startups&lt;/a&gt;?&lt;/p&gt;
&lt;div class="gap"&gt;&lt;/div&gt;</summary></entry></feed>