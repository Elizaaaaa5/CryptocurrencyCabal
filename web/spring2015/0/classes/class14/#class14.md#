Title: Class 14: Selfish Mining
Date: 2015-03-02 

## Schedule

   <div class="todo"> 

- [Project 2 Part
  2](|filename|../../pages/projects/project2/project2.md) is due next
  **Thursday, 5 March.** Submission is by email, send a PDF with your
  answers to questions 5-9.

- Keep thinking about ideas for your project.  The first deliverable for
  the project will be a preliminary proposal due on March 19.

   </div>

<center> 
<iframe src="//www.slideshare.net/slideshow/embed_code/45339406" width="670" height="380" frameborder="2" marginwidth="0" marginheight="0" scrolling="no"></iframe>
<div class="caption">Note: due to a bug in
slideshare's updated player, ink markings no longer appear in the
viewer.  <br>If you [download the slides](|filename|./class14-inked.pptx), they are present though.
Hopefully, the player will be fixed someday. </div>
</center>

## Mining the Last Bitcoin

[Computing the block value:](https://github.com/bitcoin/bitcoin/blob/59310f1c02673c3ee068cd82f8654bed9b757889/src/main.cpp#L1229)
```C
CAmount GetBlockValue(int nHeight, const CAmount& nFees)
{
    CAmount nSubsidy = 50 * COIN;
    int halvings = nHeight / Params().SubsidyHalvingInterval();

    // Force block reward to zero when right shift is undefined.
    if (halvings >= 64)
        return nFees;

    // Subsidy is cut in half every 210,000 blocks which will occur approximately every 4 years.
    nSubsidy >>= halvings;

    return nSubsidy + nFees;
}
```

Interestingly, the [first commit version of this code](https://github.com/bitcoin/bitcoin/blob/4405b78d6059e536c36974088a8ed4d9f0f29898/main.cpp#L675)
in github (29 August 2009) is missing the `halvings >= 64` line we talked about in class: 
```C
int64 CBlock::GetBlockValue(int64 nFees) const
{
    int64 nSubsidy = 50 * COIN;

    // Subsidy is cut in half every 4 years
    nSubsidy >>= (nBestHeight / 210000);

    return nSubsidy + nFees;
}
```

Will a node running the early version of this code (assuming the global `nBestHeight` is equal to `nHeight`)
ever compute a
different block value than a node running the current version of the
code?
<div class="gap">

</div>

Python code for estimating block time: [subsidy.py](|filename|./subsidy.py)

```
> expect_block(6929999)
2132-05-19 00:50:38.200000
```

Why is it likely that the expected final bitcoin generation block is
found in 2132 instead of 2140 (as estimated by 10 minute expected block
generation rate)?

<div class="gap">

</div>



## Selfish Mining

What are the risks and benefits of witholding a found block?
<div class="gap">

</div>



Based on the [submarine cable map](http://www.submarinecablemap.com/),
where should you put your bitcoin mining operation?
<div class="gap">

</div>

Suppose you (and no other bitcoin nodes) had access to an under-Artic
fiberoptic cable, providing faster than currently possible routes
between Japan and Anchorage.  Would this provide a valuable advantage in
bitcoin?  Would you prefer to have a fast microwave link between Japan
and Finland?

<div class="gap">

</div>


This is the paper about selfish mining: Ittay Eyal and Emin G&uuml;n
Sirer, [_Majority is not Enough: Bitcoin Mining is
Vulnerable_](http://arxiv.org/pdf/1311.0243v5.pdf) (Nov 2013).  There
has been a lot of debate about this paper and the claim that rational
miners will behave selfishly:

- [Game Theory and Bitcoin](https://freedom-to-tinker.com/blog/felten/game-theory-and-bitcoin/) (Ed Felten)
- [Response to Feedback on Selfish Mining](http://hackingdistributed.com/2013/11/14/response-to-feedback-on-selfish-mining/#id10) (Eyal and Sirer's response to Felten's post and other arguments; read Felten's responses in the comments)
- [Some Frequently Asked Questions on Selfish Mining](http://hackingdistributed.com/2013/11/05/faq-selfish-mining/) (includes Simpson's clip)
