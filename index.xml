<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cryptocurrency Cabal</title>
    <link>http://bitcoin-class.org/</link>
    <description>Recent content on Cryptocurrency Cabal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 20 Sep 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://bitcoin-class.org/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>PS2: The Blockchain</title>
      <link>http://bitcoin-class.org/ps/ps2/</link>
      <pubDate>Sun, 20 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://bitcoin-class.org/ps/ps2/</guid>
      <description>

&lt;h1 id=&#34;problem-set-2-br-the-blockchain:e879021a243163cdf3d1d9f61ef73807&#34;&gt;Problem Set 2:&lt;br&gt; The Blockchain&lt;/h1&gt;

&lt;p&gt;&lt;div class=&#34;due&#34;&gt;
Due: Friday, 9 October at 8:29pm
   &lt;/div&gt;&lt;/p&gt;

&lt;h2 id=&#34;purpose:e879021a243163cdf3d1d9f61ef73807&#34;&gt;Purpose&lt;/h2&gt;

&lt;p&gt;The goal of this assignment is for everyone in the class to understand
how bitcoin mining and the blockchain work, and evaluate risks to the blockchain.&lt;/p&gt;

&lt;h3 id=&#34;collaboration-policy:e879021a243163cdf3d1d9f61ef73807&#34;&gt;Collaboration Policy&lt;/h3&gt;

&lt;p&gt;For this assignment, everyone should submit their own assignment and
should writeup their own answers to the questions.  You may, and are
encouraged to, discuss all of the problems with anyone else you want
(both on-line using the course web site or any other means you choose,
and in person).&lt;/p&gt;

&lt;h3 id=&#34;submission:e879021a243163cdf3d1d9f61ef73807&#34;&gt;Submission&lt;/h3&gt;

&lt;p&gt;Submit your answers as a single PDF file using &lt;a href=&#34;https://www.dropbox.com/request/oar0AQeg4SJRNtdHbcSS&#34;&gt;this
link&lt;/a&gt;.  The name
of your file should be &lt;code&gt;&amp;lt;your email ID&amp;gt;-ps2.pdf&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Your submission should include clearly marked answers for all the
problems (highlighted in yellow).  None of the questions require
submitting a program, although you may find it helpful to write programs
to develop your answers.  If the code you write is less than a page, it
is best to just include it in the PDF writeup.  If it is longer, you may
submit separate code files (and mention them in the PDF submission).&lt;/p&gt;

&lt;h1 id=&#34;blockchain-consensus:e879021a243163cdf3d1d9f61ef73807&#34;&gt;Blockchain Consensus&lt;/h1&gt;

&lt;p&gt;These questions concern the original bitcoin paper:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Satoshi Nakamoto, &lt;a href=&#34;https://bitcoin.org/bitcoin.pdf&#34;&gt;&lt;em&gt;Bitcoin: A Peer-to-Peer Electronic Cash
System&lt;/em&gt;&lt;/a&gt;, 2008.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;div class=&#34;problem&#34;&gt;
&lt;strong&gt;Problem 1.&lt;/strong&gt; In Section 6, Satoshi writes:
&lt;em&gt;&amp;ldquo;The incentive may help encourage nodes to stay honest. If a greedy
attacker is able to assemble more CPU power than all the honest nodes,
he would have to choose between using it to defraud people by stealing
back his payments, or using it to generate new coins. He ought to find
it more profitable to play by the rules, such rules that favour him with
more new coins than everyone else combined, than to undermine the system
and the validity of his own wealth.&amp;rdquo;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;What are the assumptions necessary to support Satoshi&amp;rsquo;s claim that it is
more profitable for a greedy attacker with a majority of the mining
power &amp;ldquo;to play by the rules&amp;rdquo;? (other than the assumption that the greedy
attacker is a &amp;ldquo;he&amp;rdquo;)&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;problem&#34;&gt; &lt;strong&gt;Problem 2.&lt;/strong&gt;
    At the end of Section 11, Satoshi presents a table for &lt;span class=&#34;math&#34;&gt;&lt;em&gt;p&lt;/em&gt;&lt;/span&gt; &amp;lt; 0.001,
    where it is listed &amp;ldquo;q=0.45 z=340&amp;rdquo;. What does this mean in plain
    English, expressed in a short sentence?
    &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;problem&#34;&gt;&lt;strong&gt;Problem 3.&lt;/strong&gt; For that same table, what would
the &lt;span class=&#34;math&#34;&gt;&lt;em&gt;z&lt;/em&gt;&lt;/span&gt; values be for &lt;span class=&#34;math&#34;&gt;&lt;em&gt;p&lt;/em&gt;&lt;/span&gt; &amp;lt; 0.05 (instead of &lt;em&gt;p&lt;/em&gt; &amp;lt; 0.001)?
   &lt;/div&gt;&lt;/p&gt;

&lt;h1 id=&#34;merkle-trees-and-storage:e879021a243163cdf3d1d9f61ef73807&#34;&gt;Merkle Trees and Storage&lt;/h1&gt;

&lt;p&gt;Bitcoin uses Merkle Trees to record transactions in a way that enables a
single hash to be used to record a set of transactions, and a small
(logarithmic in the number of transactions) number of hashes to be
sufficient to verify a transaction.  In this question, you&amp;rsquo;ll explore
another use of Merkle Trees to provide verifiable cloud storage.&lt;/p&gt;

&lt;p&gt;Imagine you are storing a database using a cloud storage provider, since
you do not have local storage. Assume that you have just enough local
storage to store a small number of cryptographic hashes or keys. You
fear, however, that your storage provider may be skimping, and may not
actually be storing all of your data.&lt;/p&gt;

&lt;p&gt;So, you want to verify each record as you receive it, to make sure the
data is the same as what you wrote.  In order to do so, you are willing
to write extra cryptographic information with each write, but need to
limit the amount of local storage.&lt;/p&gt;

&lt;p&gt;Assume we are storing &lt;span class=&#34;math&#34;&gt;&lt;em&gt;n&lt;/em&gt;&lt;/span&gt; records, and we can
query the server for the &lt;span class=&#34;math&#34;&gt;&lt;em&gt;i&lt;/em&gt;&lt;/span&gt;-th record for any &lt;span class=&#34;math&#34;&gt;&lt;em&gt;i&lt;/em&gt;&lt;/span&gt; from 0 to &lt;span class=&#34;math&#34;&gt;&lt;em&gt;n&lt;/em&gt; - 1&lt;/span&gt;. The
data content of the &lt;span class=&#34;math&#34;&gt;&lt;em&gt;i&lt;/em&gt;&lt;/span&gt;-th record will be denoted as &lt;span
class=&#34;math&#34;&gt;data[&lt;em&gt;i&lt;/em&gt;]&lt;/span&gt;.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;problem&#34;&gt; &lt;strong&gt;Problem 4.&lt;/strong&gt; One naive approach would be to
just sign each record data with a private key, and verify the signature
on reading it.&lt;/p&gt;

&lt;p&gt;(a) There is a problem with this scheme unless the bytes of &lt;span class=&#34;math&#34;&gt;data[&lt;em&gt;i&lt;/em&gt;]&lt;/span&gt; indicate that it is in fact from &lt;span class=&#34;math&#34;&gt;&lt;em&gt;i&lt;/em&gt;&lt;/span&gt;-th index. What is this problem?&lt;/p&gt;

&lt;p&gt;(b) Suppose we perform a write at position &lt;span class=&#34;math&#34;&gt;&lt;em&gt;i&lt;/em&gt;&lt;/span&gt;, both data and signature. Later on, when we read it back, if the signature matches the data, can we be sure that it is indeed the data item we wrote?
  Explain.
&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;problem&#34;&gt;&lt;strong&gt;Problem 5.&lt;/strong&gt; Another approach would be hashing
  the concatenation of all records in the database. This hash is a small
  item that can be stored locally.&lt;/p&gt;

&lt;p&gt;(a) What is the write/read/verify procedure for this system?&lt;/p&gt;

&lt;p&gt;(b) How does the cost of reading and writing to the database scale with &lt;span class=&#34;math&#34;&gt;&lt;em&gt;n&lt;/em&gt;&lt;/span&gt; (the number of records)?
  &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;problem&#34;&gt;&lt;strong&gt;Problem 6.&lt;/strong&gt; Instead of using the concatenating all the records linear, they were organized into a Merkle tree.&lt;/p&gt;

&lt;p&gt;(a) What is the write/read/verify procedure for this system?&lt;/p&gt;

&lt;p&gt;(b) How does the cost of reading and writing to the database scale with &lt;span class=&#34;math&#34;&gt;&lt;em&gt;n&lt;/em&gt;&lt;/span&gt; (the number of records)?
    &lt;/div&gt;&lt;/p&gt;

&lt;h1 id=&#34;blockchain:e879021a243163cdf3d1d9f61ef73807&#34;&gt;Blockchain&lt;/h1&gt;

&lt;p&gt;These questions are related to this paper (and what was covered in &lt;a href=&#34;http://bitcoin-class.org/classes/class10&#34;&gt;Class 10&lt;/a&gt; and &lt;a href=&#34;http://bitcoin-class.org/classes/class11&#34;&gt;Class 11&lt;/a&gt;):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ittay Eyal and Emin G&amp;uuml;n Sirer, &lt;a href=&#34;http://arxiv.org/pdf/1311.0243v5.pdf&#34;&gt;&lt;em&gt;Majority is not Enough: Bitcoin
Mining is Vulnerable&lt;/em&gt;&lt;/a&gt;, November
2013.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://blockchain.info/orphaned-blocks&#34;&gt;Orphaned Blocks&lt;/a&gt; are blocks
that are submitted to the bitcoin network, and that are valid, but do
not become part of the longest (consensus) blockchain.&lt;/p&gt;

&lt;p&gt;One way to detect selfish mining is to be on the lookout for &amp;ldquo;orphaned&amp;rdquo;
blocks, or blocks that were mined but never became part of the final
blockchain.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s say you set up a node to monitor orphaned blocks, and you are in a
favorable position in the network that allows you to observe all
orphaned blocks.  Assume that the hashing difficulty stays constant and
the expected block rate is constant at 10 minutes per block.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;problem&#34;&gt; &lt;strong&gt;Problem 7.&lt;/strong&gt;&lt;br /&gt;
  (a) If a mining pool has 15% (&lt;span class=&#34;math&#34;&gt;&amp;alpha;&lt;/span&gt; = 0.15) of the
  total network hashing power, how many blocks is it expected to find in
  a day?&lt;/p&gt;

&lt;p&gt;(b) Obtain a general formula for expected number of blocks a mining pool with &lt;span class=&#34;math&#34;&gt;&amp;alpha;&lt;/span&gt; fraction of the total hashing power should find in &lt;span class=&#34;math&#34;&gt;&lt;em&gt;t&lt;/em&gt;&lt;/span&gt; minutes.
  &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;For the next questions, you may assume a very simplified network model
where you can view the network having two &amp;ldquo;supernodes&amp;rdquo;: one represents a
particular mining pool, and the other represents all other nodes in the
network.  The latency between the two supernodes is &lt;span class=&#34;math&#34;&gt;&lt;em&gt;L&lt;/em&gt;&lt;/span&gt; seconds.&lt;/p&gt;

&lt;p&gt;With this simple (but very unrealistic) model, we assume that when one
supernode announces a block, all of the rest of the network learns of
the new block &lt;span class=&#34;math&#34;&gt;&lt;em&gt;L&lt;/em&gt;&lt;/span&gt; seconds later (but no one
learns of it before that).&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;problem&#34;&gt; &lt;strong&gt;Problem 8.&lt;/strong&gt; Assuming all of the miners are
  honest, what is the expected number of orphaned blocks per day for an honest
  mining pool with hashing power &lt;span class=&#34;math&#34;&gt;&amp;alpha;&lt;/span&gt; and latency &lt;span class=&#34;math&#34;&gt;&lt;em&gt;L&lt;/em&gt;&lt;/span&gt; (as simplified
  above).
  &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;problem&#34;&gt; &lt;strong&gt;Problem 9.&lt;/strong&gt; How does this change if the
  mining pool is mining selfishly?  (For this question, assume that the
  selfish mining pool learns of a block announced by the rest of the
  network as soon as it is announced, so will immediately announce any
  withheld blocks at that time.  That is, you may still assume the
  simplified latency &lt;span class=&#34;math&#34;&gt;&lt;em&gt;L&lt;/em&gt;&lt;/span&gt; model, but that the selfish mining pool has a
  spy in the other supernode with a low-latency direct connection to the
  mining pool.)
  &lt;/div&gt;&lt;/p&gt;

&lt;h1 id=&#34;pool-hopping:e879021a243163cdf3d1d9f61ef73807&#34;&gt;Pool Hopping&lt;/h1&gt;

&lt;p&gt;Answer &lt;em&gt;either&lt;/em&gt; question 10A or 10B (your choice).&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;problem&#34;&gt; &lt;strong&gt;Problem 10A.&lt;/strong&gt; In class, we saw how pool-hopping
can be used to game a &amp;ldquo;proportional&amp;rdquo; reward scheme. Design a simple
reward scheme that eliminates pool-hopping incentive. In particular,
derive the expected reward for your scheme and show that it does not
depend on time since last block (or any variable controlled by the
miner).  &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;problem&#34;&gt; &lt;strong&gt;Problem 10B.&lt;/strong&gt; In upcoming classes, we will
   have visits from a law professor (who also works for the State
   Department on international cyberlaw and promulgating the open
   Internet) and an FBI agent who works on criminals using bitcoin for
   ransom.  Come up with at least one good question that you would like
   one of them to answer.
   &lt;/div&gt;&lt;/p&gt;

&lt;h1 id=&#34;bonus-opportunities:e879021a243163cdf3d1d9f61ef73807&#34;&gt;Bonus Opportunities&lt;/h1&gt;

&lt;p&gt;The following questions are suggestions for further work, but it is not
expected that everyone will solve them.  (Note that some of these could
be starting ideas for larger projects, although a good answer to any of
them would be most impressive.)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Challenge 1.&lt;/strong&gt; The network model in questions 8 and 9 is very
  unrealistic.  Answer these questions for a more realistic model of the
  bitcoin network, and compare your results with the actual rates of
  orphaned blocks.  To better detect misbehaving miners, you would want
  to also look into the contents of the dual blocks (note that the one
  that was orphaned is not necessarily the one from the selfish miner).
  There is an API for obtaining orphaned blocks provided by
  &lt;a href=&#34;https://api.biteasy.com/blockchain/v1/blocks?type=ORPHANED&#34;&gt;https://api.biteasy.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Challenge 2.&lt;/strong&gt; The analysis in the paper and in class assumed that if
   the selfish miner is ahead by 2 blocks, it will always win by
   releasing the blocks when it observes a new block on the blockchain.
   It could still lose if the rest of the network finds a second block
   before the selfish miner&amp;rsquo;s blocks have propagated over the network.
   How does this possibility impact the analysis?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Challenge 3.&lt;/strong&gt; The site that was demonstrated in Class 11 uses a very
  simple model to estimate the profitability of a particular bitcoin
  miner.  Produce a better model, and use it to evaluated the expected
  profit (or loss) for mining hardware such as &lt;a href=&#34;https://bitmaintech.com/product.htm&#34;&gt;Antminer
  S7&lt;/a&gt;.  A better model would need
  to capture expected increases in the difficulty, cost of capital, and
  other costs of mining besides electricity.&lt;/p&gt;

&lt;h3 id=&#34;submission-1:e879021a243163cdf3d1d9f61ef73807&#34;&gt;Submission&lt;/h3&gt;

&lt;p&gt;Follow the submission instructions at the beginning of this page by
8:29pm on Friday, 9 October.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PS1: Bitcoin Transactions</title>
      <link>http://bitcoin-class.org/ps/ps1/</link>
      <pubDate>Tue, 01 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://bitcoin-class.org/ps/ps1/</guid>
      <description>

&lt;h1 id=&#34;problem-set-1-bitcoin-transactions:939ea9b9cc2ea0226c5f2d7200883cc7&#34;&gt;Problem Set 1: Bitcoin Transactions&lt;/h1&gt;

&lt;p&gt;&lt;div class=&#34;due&#34;&gt;
Due: Tuesday, 15 September at 8:29pm
   &lt;/div&gt;&lt;/p&gt;

&lt;h2 id=&#34;purpose:939ea9b9cc2ea0226c5f2d7200883cc7&#34;&gt;Purpose&lt;/h2&gt;

&lt;p&gt;The goal of this assignment is for everyone in the class to understand
how keys, addresses, and transactions work in bitcoin.  In addition,
this assignment should help everyone get up-to-speed with the software
tools (including the Go programming language) we will use in later
assignments.&lt;/p&gt;

&lt;h3 id=&#34;collaboration-policy:939ea9b9cc2ea0226c5f2d7200883cc7&#34;&gt;Collaboration Policy&lt;/h3&gt;

&lt;p&gt;For this assignment, everyone should submit their own assignment and
should writeup their own answers to the questions as well as execute all
the required transactions with your own keys.&lt;/p&gt;

&lt;p&gt;You may, and are encouraged to, discuss all of the problems with anyone
else you want (both on-line using the course web site or any other means
you choose, and in person), and it is okay to share code with others so
long as you understand everything in all of the code you use.&lt;/p&gt;

&lt;h3 id=&#34;submission:939ea9b9cc2ea0226c5f2d7200883cc7&#34;&gt;Submission&lt;/h3&gt;

&lt;p&gt;Submit your answers as a single PDF file using &lt;a href=&#34;https://www.dropbox.com/request/KV26Qd6UrcB9j6nBLVw8&#34;&gt;this
link&lt;/a&gt;.  The name
of your file should be &lt;code&gt;&amp;lt;your email ID&amp;gt;-ps1.pdf&lt;/code&gt;.  (In addition to the
PDF file you submit, you may submit a separate &lt;code&gt;spend.go&lt;/code&gt; file with your
code for question 11, or incorporate that code into the PDF submission.)&lt;/p&gt;

&lt;p&gt;Your submission should include clearly marked answers for all the
problems (highlighted in yellow).&lt;/p&gt;

&lt;h1 id=&#34;blockchain-sleuthing:939ea9b9cc2ea0226c5f2d7200883cc7&#34;&gt;Blockchain Sleuthing&lt;/h1&gt;

&lt;p&gt;You should have received some bitcoin at the address you submitted in
the registration form.  (If you did not receive any bitcoin, contact the
course staff right away!)&lt;/p&gt;

&lt;p&gt;From that transaction, you have an address that was used to send you the
bitcoin.  For these questions, your goal is to figure out what you can
about the way bitcoin was distributed to the class.  For these
questions, manual sleuthing should be sufficient (although ambitious
students may find ways to automate this).&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;problem&#34;&gt; &lt;strong&gt;Problem 1.&lt;/strong&gt; Answer the following questions about the transaction
  where you received the bitcoin.  If you received more than one
  transfer, include all the transaction IDs).&lt;/p&gt;

&lt;p&gt;a. What is the transaction ID?&lt;/p&gt;

&lt;p&gt;b. What was the transaction fee for the transaction?  (Give your answer
in BTC, as well as current approximate US dollar value.)&lt;/p&gt;

&lt;p&gt;c. What was the total value of all the transactions in the block
containing your transfer?  (Note:
&lt;a href=&#34;https://blockchain.info&#34;&gt;https://blockchain.info&lt;/a&gt; provides this info
conveniently, although you could compute it yourself)&lt;/p&gt;

&lt;p&gt;d. How long did it take from when the transaction was received until it
had 3 confirmations?  (Include an explanation of how you estimated this
in your answer.)
    &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Bitcoin advocates often taut its &amp;ldquo;anonymity&amp;rdquo;, but bitcoin transactions
are actually publicly visible.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;problem&#34;&gt; &lt;strong&gt;Problem 2.&lt;/strong&gt; See how much can you figure out about the way bitcoin was
transferred to students in the class, starting from your transactions.&lt;/p&gt;

&lt;p&gt;a. Identify the bitcoin addresses of what are likely to be other
students in the class (you could potentially find all of them, but it is
enough to find 3).&lt;/p&gt;

&lt;p&gt;b. Trace back the source of the bitcoin as far as you can.  Bonus points
if you can figure out from which exchange the bitcoin was purchased and
when.&lt;/p&gt;

&lt;p&gt;c. (Bonus) Can you learn anything about where the send of the bitcoin is
located geographically?  (In this case, you have external information to
know I&amp;rsquo;m in Charlottesville, but what could you learn about the sender&amp;rsquo;s
probable location just from the information in the blockchain?)&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Hints:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Start by looking at the transaction that sent bitcoin to your
receiving address.  You can search for this by searching for your
recieving address at
&lt;a href=&#34;https://blockexplorer.com&#34;&gt;https://blockexplorer.com&lt;/a&gt;,
&lt;a href=&#34;https://insight.bitpay.com/&#34;&gt;https://insight.bitpay.com/&lt;/a&gt;,
&lt;a href=&#34;https://blockchain.info&#34;&gt;https://blockchain.info&lt;/a&gt;, or many other
sites that provide information about the bitcoin blockchain.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;You can go forward, by following what happened with the &amp;ldquo;change&amp;rdquo; from
that transaction.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;You can go backward, by following transactions to the sending address.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;div class=&#34;problem&#34;&gt;&lt;strong&gt;Problem 3.&lt;/strong&gt; Suppose a malicious developer wanted to distribute a
  bitcoin wallet implementation that would steal as much bitcoin as
  possible from its users with a little chance as possible of getting
  caught.  (a) Explain things a malicious developed might do to create
  an evil wallet.  (b) How confident are you your money is safe in the
  wallet you are using, and what would you do to increase your
  confidence if you were going to store all of your income in it?
   &lt;/div&gt;&lt;/p&gt;

&lt;h1 id=&#34;getting-going:939ea9b9cc2ea0226c5f2d7200883cc7&#34;&gt;Getting GOing&lt;/h1&gt;

&lt;p&gt;You are free to use any programming language and open source bitcoin
libraries and openly-licensed code you want for this assignment, but
must follow the license requirements of any code you use and credit this
code in your submission.&lt;/p&gt;

&lt;p&gt;The directions we provide use the &lt;a href=&#34;https://github.com/btcsuite&#34;&gt;BTC
Suite&lt;/a&gt; library for bitcoin, implemented in
the &lt;a href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Most of you do not have any experience using Go, but it is not a
difficult language to learn coming from experience with Java (which all
of you have), and although its not &lt;a href=&#34;http://rust-class.org&#34;&gt;my favorite programming
language&lt;/a&gt; it is a language that nearly everyone
finds enjoyable to use and it is becoming widely used in industry
(especially at Google, where it was developed).  The main reason we are
using it for this, though, is because the &lt;a href=&#34;https://github.com/btcsuite&#34;&gt;BTC
library&lt;/a&gt; is the best bitcoin library we are
aware of, and it is written in Go.&lt;/p&gt;

&lt;p&gt;If you are comfortable learning a new programming language by diving
right into moderately complex programs and figuring out things as you
go, you should be able to jump right into this assignment.  If you
prefer a more structured introduction to Go, there are many tutorials
available, including the &lt;a href=&#34;https://tour.golang.org/welcome/1&#34;&gt;Tour of
Go&lt;/a&gt;.  The &lt;a href=&#34;https://gobyexample.com/&#34;&gt;Go by
Example&lt;/a&gt; site is very helpful.  For more
documentation, visit &lt;a href=&#34;https://golang.org/doc/&#34;&gt;https://golang.org/doc/&lt;/a&gt;.&lt;/p&gt;

&lt;!--
# Going Gets Good

After you have installed go, you can set up the BTC library by doing:

```shell
&gt; go get github.com/btcsuite/btcec
```
--&gt;

&lt;h1 id=&#34;obtain-the-starting-code:939ea9b9cc2ea0226c5f2d7200883cc7&#34;&gt;Obtain the Starting Code&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Install Go.&lt;/strong&gt;
Start by &lt;a href=&#34;https://golang.org/doc/install&#34;&gt;downloading and installing
Go&lt;/a&gt;.  The latest version is go1.5, which
is the version you should use.&lt;/p&gt;

&lt;p&gt;Make sure to create a directory to contain your workspace and set the
GOPATH environment variable to point to that location (these commands
are for the Mac OS X shell and the bash shell on Linux):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ mkdir go_workspace
$ export GOPATH=$Home/go_workspace
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Install BTCD.&lt;/strong&gt; &lt;a href=&#34;https://github.com/btcsuite/btcd&#34;&gt;Follow the directions to install
  btcd&lt;/a&gt; from btcsuite.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Setting up git.&lt;/strong&gt; Before continuing with this assignment, you should
&lt;a href=&#34;http://bitcoin-class.org/tools/github/&#34;&gt;set up git and your github account&lt;/a&gt;
and follow the directions there to set up your private repository
containing the starting code for ps1.  (It may seem like overkill to use
git for this assignment since you will not need to write much code or
work with teammates on this one.  But, it is good to get experience
using git and will become necessary to work effectively with teammates
for later projects.)&lt;/p&gt;

&lt;p&gt;Once you have finished setting up your &lt;code&gt;ps1&lt;/code&gt; repository, it should
contain the files:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/CryptocurrencyCabal/ps1/blob/master/keypair.go&#34;&gt;keypair.go&lt;/a&gt;:
code for generating a bitcoin key pair (including its public address).&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/CryptocurrencyCabal/ps1/blob/master/spend.go&#34;&gt;spend.go&lt;/a&gt;: code for generating a bitcoin transaction.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;elliptic-curve-cryptography:939ea9b9cc2ea0226c5f2d7200883cc7&#34;&gt;Elliptic Curve Cryptography&lt;/h1&gt;

&lt;p&gt;The btcsuite library includes,
&lt;a href=&#34;https://github.com/btcsuite/btcd/tree/master/btcec&#34;&gt;btcec&lt;/a&gt;, an
implementation of the ECDSA digital signatures algorithm using the
&lt;a href=&#34;https://en.bitcoin.it/wiki/Secp256k1&#34;&gt;secp256k1&lt;/a&gt; elliptic curve used by
bitcoin.&lt;/p&gt;

&lt;p&gt;Examine the
&lt;a href=&#34;https://github.com/btcsuite/btcd/blob/master/btcec/btcec.go&#34;&gt;btcec.go&lt;/a&gt;
code.  For example, you should be able to find the &lt;span
class=&#34;math&#34;&gt;&lt;em&gt;y&lt;/em&gt;&lt;sup&gt;2&lt;/sup&gt; = &lt;em&gt;x&lt;/em&gt;&lt;sup&gt;3&lt;/sup&gt; + 7&lt;/span&gt; curve in this
code.&lt;/p&gt;

&lt;p&gt;Elliptic curves for cryptography needs really big numbers.  The modulus for the &lt;code&gt;secp256k1&lt;/code&gt; curve is found on &lt;a href=&#34;https://github.com/btcsuite/btcd/blob/BTCD_0_11_1_BETA/btcec/btcec.go#L909&#34;&gt;line 929&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; secp256k1.P = fromHex(&amp;quot;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This should be the value &lt;span class=&#34;math&#34;&gt;2&lt;sup&gt;256&lt;/sup&gt; - 2&lt;sup&gt;32&lt;/sup&gt; - 2&lt;sup&gt;9&lt;/sup&gt; - 2&lt;sup&gt;8&lt;/sup&gt; - 2&lt;sup&gt;7&lt;/sup&gt; - 2&lt;sup&gt;6&lt;/sup&gt; - 2&lt;sup&gt;4&lt;/sup&gt; - 1.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;problem&#34;&gt;&lt;strong&gt;Problem 4.&lt;/strong&gt; Verify that the modulus used as &lt;code&gt;secp256k1.P&lt;/code&gt; in
  &lt;code&gt;btcec.go&lt;/code&gt; is correct.  You can do this either using
  &lt;a href=&#34;https://golang.org/pkg/math/big/&#34;&gt;math/big&lt;/a&gt;, Go&amp;rsquo;s bit integer library
  to do computations on such large numbers, or by computing it by hand.
  (For your answer, just show how you verified the modulus.  Including a
  snippet of code is fine.)&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;h2 id=&#34;generating-a-key-pair:939ea9b9cc2ea0226c5f2d7200883cc7&#34;&gt;Generating a Key Pair&lt;/h2&gt;

&lt;p&gt;We have provided code in &lt;code&gt;keypair.go&lt;/code&gt; that generates a bitcoin key pair.
You can try running this by running &lt;code&gt;go run keypair.go&lt;/code&gt; (or you can
compile it with &lt;code&gt;go build keypair.go&lt;/code&gt; and then run the resulting
executable &lt;code&gt;keypair&lt;/code&gt;).  It will print out the generated private key and
corresponding public bitcoin address.  (Try running it a few times to
see that it produces a different key pair each time.)&lt;/p&gt;

&lt;p&gt;Keys for ECDSC are generated by choosing a random private key, &lt;span
class=&#34;math&#34;&gt;&lt;em&gt;k&lt;/em&gt;&lt;/span&gt;, and finding the corresponding public key by
&amp;ldquo;multiplying&amp;rdquo; it by &lt;span class=&#34;math&#34;&gt;&lt;em&gt;G&lt;/em&gt;&lt;/span&gt;, the generator point.
(Multiplication here is not standard multiplication, but multiplication
on the elliptic curve, as discussed in &lt;a href=&#34;http://bitcoin-class.org/classes/class3/&#34;&gt;Class 3&lt;/a&gt;.)  The point &lt;span
class=&#34;math&#34;&gt;&lt;em&gt;G&lt;/em&gt;&lt;/span&gt; is defined by &lt;a href=&#34;https://github.com/btcsuite/btcd/blob/BTCD_0_11_1_BETA/btcec/btcec.go#L912&#34;&gt;lines
912-3&lt;/a&gt;):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;secp256k1.Gx = fromHex(&amp;quot;79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798&amp;quot;)
secp256k1.Gy = fromHex(&amp;quot;483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB10D4B8&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The resulting point is the public key.  It is easy to derive the public
key from the private key, but believed to be hard to learn anything
useful about the private key from the public key.  The belief that it
is hard to reverse the elliptic curve multiplication is based on the
assumption that it is hard to compute discrete logarithms, which is not
proven, but underlies much of modern cryptography.&lt;/p&gt;

&lt;p&gt;The code for generating a new keypair is in &lt;a href=&#34;https://github.com/CryptocurrencyCabal/ps1/blob/master/keypair.go#L20&#34;&gt;keypair.go&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func generateKeyPair() (*btcec.PublicKey, *btcec.PrivateKey) {
   priv, err := btcec.NewPrivateKey(btcec.S256())
   if err != nil {
       // There was an error. Log it and bail out
       log.Fatal(err)
   }
   return priv.PubKey(), priv
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The important work is done by the
&lt;a href=&#34;https://github.com/btcsuite/btcd/blob/BTCD_0_11_1_BETA/btcec/privkey.go#L38&#34;&gt;NewPrivateKey&lt;/a&gt;
function.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;problem&#34;&gt;&lt;strong&gt;Problem 5.&lt;/strong&gt; What are &lt;em&gt;all&lt;/em&gt; the things you need to trust if you are
going to send money to the key generated by running &lt;code&gt;keypair.go&lt;/code&gt;?  You
should assume that you are an ultra-paranoid multi-billionaire who
intends to transfer her entire fortune to the generated address.&lt;br /&gt;
    &lt;/div&gt;&lt;/p&gt;

&lt;h2 id=&#34;generating-a-vanity-address:939ea9b9cc2ea0226c5f2d7200883cc7&#34;&gt;Generating a Vanity Address&lt;/h2&gt;

&lt;p&gt;Anyone can have a bitcoin address like
&lt;code&gt;1H7tu2qUAyyr5aX1WA17eyvbetAGyqxfKZ&lt;/code&gt; or
&lt;code&gt;1L3iGYBD5wbiki2SYUT5wmupy4TTgmEBg3&lt;/code&gt;, but suppose you want a bitcoin
address that includes the name of your cat or your birthday.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;problem&#34;&gt;&lt;strong&gt;Problem 6.&lt;/strong&gt; Define a function, &lt;code&gt;func
generateVanityAddress(pattern string) (*btcec.PublicKey,
*btcec.PrivateKey)&lt;/code&gt; where &lt;code&gt;pattern&lt;/code&gt; is a regular expression.  It should
return a valid key pair where the corresponding public address &lt;a href=&#34;http://golang.org/pkg/regexp/#MatchString&#34;&gt;matches
the pattern&lt;/a&gt;.&lt;br /&gt;
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;You should be able to use your function to generate an address that
includes the digits of pi in sequence:
&lt;code&gt;generateVanityAddress(&amp;quot;3.*1.*4.*1.*5.*9.*&amp;quot;)&lt;/code&gt; or contains &lt;code&gt;dave&lt;/code&gt; without
any adjacent letters (&lt;code&gt;generateVanityAddress(&amp;quot;[0-9]dave[0-9]&amp;quot;)&lt;/code&gt;) in its
public bitcoin address.  In deciding how vain you want to be for the
next exercise, think about how the running time scales with the number
of strings that match the target pattern.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;problem&#34;&gt; &lt;strong&gt;Problem 7.&lt;/strong&gt; Use your &lt;code&gt;generateVanityAddress&lt;/code&gt;
function to create your own vanity address.  Its up to you to decide
what to put in your vanity address, but it should be clear that your
address is not a typical random one.  If you are extra vain, create a
address where your name appears at the beginning (after the initial
&lt;code&gt;1&lt;/code&gt;).  (Note that uppercase &amp;lsquo;O&amp;rsquo; and &amp;lsquo;I&amp;rsquo; and lowercase &amp;lsquo;l&amp;rsquo; are not used
in any address, so if your name includes these letters you will have to
be creative.)&lt;br /&gt;
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;problem&#34;&gt;&lt;strong&gt;Problem 8.&lt;/strong&gt;   Is your vanity address more or less secure than the first address you generated?
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;There are on-line services that produce vanity addresses, like
   &lt;a href=&#34;http://bitcoinvanitygen.com/&#34;&gt;http://bitcoinvanitygen.com/&lt;/a&gt;.  You
   should contemplate briefly whether using such a site is &lt;a href=&#34;http://www.reddit.com/r/Bitcoin/comments/21foj9/funds_currently_being_stolen_from_vanity/&#34;&gt;more vain or
   stupid&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;bitcoin-transactions:939ea9b9cc2ea0226c5f2d7200883cc7&#34;&gt;Bitcoin Transactions&lt;/h1&gt;

&lt;p&gt;Having an address is not much fun without any funds!&lt;/p&gt;

&lt;p&gt;You should have received some money to the address you submitted in
&lt;a href=&#34;../../ps/ps0/ps0.md&#34;&gt;PS0&lt;/a&gt;.  For these questions, you will need to have
actual money to transfer, so be careful to make small transfers for
these questions in case something goes wrong.  (In the event that you do
lose all of your bitcoin, you can get a new transfer to an adress of
your choosing by explaining to me what you have learned about software
development and or best practices.  It is not necessary to buy your own
bitcoin, even if you lose all of the original transfer.)&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;problem&#34;&gt;&lt;b&gt;Problem 9.&lt;/b&gt; Make a &lt;strong&gt;small&lt;/strong&gt; (e.g., 1 mBTC) transfer from
your wallet address to your vanity address.  You can do this using
your MultiBit wallet.  Find the transaction in the blockchain (you can do this by
searching for your vanity address at
&lt;a href=&#34;https://insight.bitpay.com/&#34;&gt;insight.bitpay.com&lt;/a&gt; or
&lt;a href=&#34;https://blockchain.info/&#34;&gt;blockchain.info&lt;/a&gt;). You will need the
transaction ID for the next exercise.  (For your answer, just provide the transaction ID.)
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Once you have located the transaction that sends bitcoin to your vanity
address you should notice several things.&lt;/p&gt;

&lt;p&gt;Your wallet most likely send bitcoins to your address &lt;em&gt;and&lt;/em&gt; back to a
new address.  We call this second address the &amp;lsquo;change&amp;rsquo; address. Notice
that each output has an ordered position. This index (known as the &lt;code&gt;vout&lt;/code&gt;)
along with the transaction ID lets us uniquely identify transaction
outputs. This is important if you want to use those outputs in a new
transaction.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;problem&#34;&gt;&lt;strong&gt;Problem 10.&lt;/strong&gt; Transfer some bitcoin from your vanity address to someone
else in the class (you can use one of the addresses you identified in
Problem 2). To do this you can run &lt;code&gt;spend.go&lt;/code&gt; in ps1. You can provide
the parameters needed for the transaction at the command line (it is not
necessary to modify the code).
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;If done correctly the script should look this when executed:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt; go run spend.go \
      -privkey &amp;quot;f3942c1e1...87&amp;quot; \
      -toaddress &amp;quot;19WmbY4nDcjAEv6wb5rcd5E6MutVMXBZzy&amp;quot; \
      -txid &amp;quot;9070329c2850d9b1dadeaa8683039b273beb58a27812172e31e397cf19fd5ca0&amp;quot; \
      -vout 0
Here is your raw bitcoin transaction:
0100000001a05cfd19cf97e3312e171278a258eb3b279b038386aadedab1d950289c327090000000006a47304402201d2fd4818cf4f4faa8\
4bbd407e5477c2a3722b137339460ff99c7255ad63bcc802201d991cad02e62d24fb4db2527a456159e069567116a325ee09186061395839\
e901210324594ad7124d0812e060200b66cc5199142e9adc42b0cd0c40f457eac4005d5dffffffff01f78a0100000000001976a9145d624b\
a9f2c55817af8b819ed4aaae55a36e256288ac00000000
The sending api responded with:
{&amp;quot;txid&amp;quot;:&amp;quot;e5f4cb8e3736cab91ff4eb889bc8af659f1d8d398b3f934c8d63871b495d9065&amp;quot;}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I&amp;rsquo;ve left out most of my private key, since posting your private key on
the web is not a very smart thing to do!&lt;/p&gt;

&lt;p&gt;Notice that when the command above is run with these parameters it only
works
&lt;a href=&#34;https://blockchain.info/tx/e5f4cb8e3736cab91ff4eb889bc8af659f1d8d398b3f934c8d63871b495d9065&#34;&gt;once&lt;/a&gt;.
If you try to run it again you should get an API error since the input
transaction has already been spent.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;problem&#34;&gt;&lt;strong&gt;Problem 11.&lt;/strong&gt; The provided &lt;code&gt;spend.go&lt;/code&gt; code
   sends the full amount of the input transaction (less the network fee)
   to the destination address.  Modify the program to add an &lt;code&gt;-amount
   &amp;lt;value&amp;gt;&lt;/code&gt; flag that takes the amount to transfer in satoshi.  If the amount
   available in the specified transaction output (less the network fee) exceeds the
   amount to send, your program should print an error message.
   Otherwise, it should send the requested amount to the toaddress, and
   send the change back to your address.
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Try using your modified spending code to send a small amount to another
address, and do another transaction to check that the change you receive
back is still spendable.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;problem&#34;&gt; &lt;b&gt;Problem 12.&lt;/b&gt; (Bonus) Try to double spend the same
bitcoin.  Figure out as much as you can about what happens when the
double spend transactions are attempted.  See if you can get a
transaction to appear on the &lt;a href=&#34;https://blockchain.info/double-spends&#34;&gt;list of double
spends&lt;/a&gt;.  See how close you can get to obtaining two verified
transactions spending the same coin (e.g., can you achieve two
transactions with at least one confirmation each?)&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Please don&amp;rsquo;t try to actually rip anyone off; only attempt double
spending with your own addresses (or those of willing classmates).  You
are not expected to actually be able to double-spend successfully (if
this were easy, bitcoin would not work well as a currency!), but should
be able to learn something by attemting to do this.&lt;/p&gt;

&lt;h3 id=&#34;submission-1:939ea9b9cc2ea0226c5f2d7200883cc7&#34;&gt;Submission&lt;/h3&gt;

&lt;p&gt;Follow the submission instructions at the beginning of this page by
8:29pm on Tuesday, 15 September.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Getting Started with Github</title>
      <link>http://bitcoin-class.org/tools/github/</link>
      <pubDate>Tue, 20 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://bitcoin-class.org/tools/github/</guid>
      <description>

&lt;h1 id=&#34;getting-started-with-github:93ed8abeb42c248f3c551d1cb44159d4&#34;&gt;Getting Started with Github&lt;/h1&gt;

&lt;p&gt;For this course you will need to use &lt;a href=&#34;http://github.com&#34;&gt;github&lt;/a&gt; to
manage your code and submit your assignments.  &lt;a href=&#34;http://gitscm.com/&#34;&gt;Git&lt;/a&gt;
is a widely used version control system originally developed by Linus
Torvalds for use in managing development of the Linux operating system
kernel.  Github is company that provides free web-hosting for git
repositories.&lt;/p&gt;

&lt;p&gt;Follow the instructions below to get started using git and set up the
repository you will use for this class (we&amp;rsquo;ll talk more about git in
class, but this should be enough to get started):&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Register for a student github account: &lt;a href=&#34;https://github.com/edu&#34;&gt;https://github.com/edu&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Note: you need to do this even if you already have a public github
  account, unless you have a paid account to support non-public
  repositories.  With the student account, you will be able to have
  non-public repositories for free.&lt;/p&gt;

&lt;p&gt;You will need to verify your email address (which must be a .edu
  address), and then go back to the
  &lt;a href=&#34;https://github.com/edu&#34;&gt;https://github.com/edu&lt;/a&gt; page to fill in a
  form to request a student account.  You should then receive a
  &amp;ldquo;Powerup get!&amp;rdquo; message from github, and be able to create private
  repositories with your account.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Set up git on the machine you will use for course assignments. Follow the instructions here:
  &lt;a href=&#34;https://help.github.com/articles/set-up-git&#34;&gt;https://help.github.com/articles/set-up-git&lt;/a&gt;.
  Follow the instructions to download and install a git client for your OS
  (&lt;a href=&#34;http://mac.github.com/&#34;&gt;Mac&lt;/a&gt;,
  &lt;a href=&#34;http://windows.github.com/&#34;&gt;Windows&lt;/a&gt;).&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;using-git-for-ccc:93ed8abeb42c248f3c551d1cb44159d4&#34;&gt;Using git for CCC&lt;/h1&gt;

&lt;p&gt;For some of the assignments in this course, we will provide starting
code in a git repository and you will need to use separate private
repository for each assignment.  (After the assignment is due, you can
make this repository public, both to share it as you wish, and to free
up another private repository since the number of private repositories
you get with your free education account is limited.)&lt;/p&gt;

&lt;p&gt;Typically, you need to fetch the code skeleton from the respective
public repository of the course every time before you start working.&lt;/p&gt;

&lt;p&gt;The general process of working on projects is to (we&amp;rsquo;ll go through each
step in detail below):&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Create a private repository on github.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Clone&lt;/strong&gt; the repository, so you have a local working copy.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Get the code skeleton from the course repo, merge it into your
working copy, and push to the main repository.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Edit code and text files in your local copy.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;push&lt;/strong&gt; the local changes to the main repository.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As you do the assignment, you should commit and push your changes regularly.&lt;/p&gt;

&lt;h2 id=&#34;setting-up-the-repository:93ed8abeb42c248f3c551d1cb44159d4&#34;&gt;Setting up the Repository&lt;/h2&gt;

&lt;p&gt;Let&amp;rsquo;s take &lt;a href=&#34;http://bitcoin-class.org/ps/ps1/&#34;&gt;PS1&lt;/a&gt; as an example. Here&amp;rsquo;s what you should do.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;1. Create a new repository named &lt;code&gt;ps1&lt;/code&gt;.&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Visit &lt;a href=&#34;https://github.com/repositories/new&#34;&gt;https://github.com/repositories/new&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Select &amp;ldquo;Private&amp;rdquo; for the type of repository.  (If you got a student discount correctly, this should be available for free.  If it asks you for
      a credit card, go back to step 1 of &lt;a href=&#34;|filename|github.md&#34;&gt;setting up github&lt;/a&gt;.)&lt;/li&gt;
&lt;li&gt;Keep the &amp;ldquo;Initialize this repository with a README&amp;rdquo; unchecked, since you will fetch it later from a public repository.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;2. Clone the empty private repository to your working
environment.&lt;/b&gt; Instead of &lt;em&gt;mygithubname&lt;/em&gt; below, use your github
username.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:::text
git clone https://github.com/mygithubname/ps1.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you haven&amp;rsquo;t set up SSH keys for github, you&amp;rsquo;ll need to enter your
github username and password.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;3. Fetch the code skeleton from the course repository to your private
repository.&lt;/b&gt; Enter the working directory of your empty repository and
add a remote repository named &lt;code&gt;starting&lt;/code&gt;, merge the code, and push it to
your private repository by executing:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:::text
git remote add starting git@github.com:CryptoCurrencyCabal/ps1.git
git pull starting master
git push --tags origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;working-with-files:93ed8abeb42c248f3c551d1cb44159d4&#34;&gt;Working with Files&lt;/h2&gt;

&lt;p&gt;Now you can write your own code in editor and save it to files. You can see what files have changed by running:
&lt;code&gt;git status&lt;/code&gt;.  You should see something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:::text
# On branch master
# Untracked files:
#   (use &amp;quot;git add &amp;lt;file&amp;gt;...&amp;quot; to include in what will be committed)
#
#   break_daves_key.go
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In this example, nothing has been added to commit but untracked files
are present.&lt;/p&gt;

&lt;p&gt;To add the files to the main repository:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:::text
git add break_daves_key.go
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You should try running &lt;code&gt;git status&lt;/code&gt; again to see the files that will be
committed.  Note that add stages the file in its current state!  If you
modify the file after the add, the version of the file when you did the
add is the version that will be committed.&lt;/p&gt;

&lt;p&gt;Then,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:::text
git commit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;commits the staged files to the main repository.  This will launch and
editor for you to enter a commit message.  You can use &lt;code&gt;-m&lt;/code&gt; to provide a
message at the command line instead:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:::text
git commit -m &#39;I am no longer afraid of commitment!&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Your actual commit messages you use should be &lt;strong&gt;clear&lt;/strong&gt; and &lt;strong&gt;useful&lt;/strong&gt;.
It is tempting to use &lt;a href=&#34;http://whatthecommit.com/&#34;&gt;lazy commit message&lt;/a&gt;,
but you will regret this as your projects get more complex and code
breaks in mysterious ways.&lt;/p&gt;

&lt;p&gt;If you want to skip the two-stage commit, you can do:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:::text
git commit -a
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;to automatically add all new and changed files to the commit.&lt;/p&gt;

&lt;p&gt;At this point, the changes are stored in your local repository, but not
yet in the main repository.  Once you have changes you want to push to
the main repository:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:::text
git push
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After this, all the changes are now pushed to the main repository at
github.  Visit your repository in github to see the result.&lt;/p&gt;

&lt;p&gt;This seems like a lot of steps, but by providing a full local repository
and making the steps of staging and pushing to the remote repository
explicit, git provides developers with a lot of control over
repositories that becomes very useful when several (or many) developers
are working on the same project and trying to combine each others
changes (or recover from mistakes).&lt;/p&gt;

&lt;p&gt;There are many resources for learning more about git.  The free book,
&lt;a href=&#34;http://git-scm.com/book/en/&#34;&gt;Pro Git&lt;/a&gt; by Scott Chacon is recommended.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Registration</title>
      <link>http://bitcoin-class.org/registration/</link>
      <pubDate>Wed, 26 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>http://bitcoin-class.org/registration/</guid>
      <description>

&lt;h1 id=&#34;course-registration:38a8983f478dea556d71617301415c7f&#34;&gt;Course Registration&lt;/h1&gt;

&lt;p&gt;&lt;div class=&#34;due&#34;&gt;
Due: 8:29pm on Saturday, 29 August
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;To register for the course, you need to &lt;strong&gt;setup a bitcoin wallet&lt;/strong&gt; (so
don&amp;rsquo;t wait until the last minute to do this).&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://multibit.org/&#34;&gt;MultiBit HD&lt;/a&gt; is a good choice for this.  See
&lt;a href=&#34;https://bitcoin.org/en/choose-your-wallet&#34;&gt;https://bitcoin.org/en/choose-your-wallet&lt;/a&gt;
for information on bitcoin wallets.  Be aware that you probably do not
have time to download the full blockchain before this assignment is due,
so need to use a &lt;em&gt;lightweight wallet&lt;/em&gt; (we will learn what this means
later in the class).&lt;/p&gt;

&lt;p&gt;After creating a wallet, you should find the &lt;em&gt;Recieving Address&lt;/em&gt; which
you will need for one of the questions.  If you used MultiBit HD, you
will see this by clicking &amp;ldquo;Request&amp;rdquo; (to request payment), and copy the
&amp;ldquo;Recipient Address&amp;rdquo;.  It should be a string like,
&lt;code&gt;19WmbY4nDcjAEv6wb5rcd5E6MutVMXBZzy&lt;/code&gt;.  Note that your wallet may create
several recipient addresses, so you won&amp;rsquo;t see the same address each time
you do this.&lt;/p&gt;

&lt;p&gt;It is not necessary now, or at any time during this class, for you to
actually buy bitcoins with your own money.  If you are inclined to do
this, be careful, and don&amp;rsquo;t use any funds you cannot afford to lose!&lt;/p&gt;

&lt;p&gt;Submit the form below (also avaible as &lt;a href=&#34;https://docs.google.com/forms/d/1taP-16YrkyfNMjZxDkz5dF3BTaFd5wrDdIcZPq7OYmE/viewform?usp=send_form&#34;&gt;direct link&lt;/a&gt;):&lt;/p&gt;

&lt;iframe src=&#34;https://docs.google.com/forms/d/1taP-16YrkyfNMjZxDkz5dF3BTaFd5wrDdIcZPq7OYmE/viewform?embedded=true&#34; width=&#34;760&#34; height=&#34;800&#34; frameborder=&#34;0&#34; marginheight=&#34;0&#34; marginwidth=&#34;0&#34;&gt;Loading...&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Syllabus</title>
      <link>http://bitcoin-class.org/syllabus/</link>
      <pubDate>Sat, 22 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>http://bitcoin-class.org/syllabus/</guid>
      <description>

&lt;h1 id=&#34;syllabus:051025d606153e159a2b11ffecb897d5&#34;&gt;Syllabus&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Meetings:&lt;/strong&gt; Mondays and Wednesdays, 2:00-3:15pm in Olsson 120.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Teachers:&lt;/strong&gt; &lt;a href=&#34;http://www.cs.virginia.edu/evans&#34;&gt;David Evans&lt;/a&gt; and &lt;a href=&#34;http://www.cs.virginia.edu/~sza4uq/&#34;&gt;Samee
  Zahur&lt;/a&gt;&lt;br /&gt;
&lt;strong&gt;Assistant:&lt;/strong&gt; &lt;a href=&#34;https://www.linkedin.com/pub/ori-shimony/b7/913/665&#34;&gt;Ori Shimony&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Office Hours:&lt;/strong&gt; Mondays 5-6:30pm (Ori, Rice 442); Wednesdays 3:15-4:30pm (Samee, Rice 442); Thursdays 2:30-3:30pm (Dave, Rice 507).  Office hours will be updated on the &lt;a href=&#34;https://www.google.com/calendar/embed?src=rmjagdrnmu3a9h2q5199lg4t28%40group.calendar.google.com&amp;amp;ctz=America/New_York&#34;&gt;course calendar&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Site:&lt;/strong&gt; &lt;a href=&#34;http://bitcoin-class.org&#34;&gt;http://bitcoin-class.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;hanging&#34;&gt; &lt;strong&gt;Readings:&lt;/strong&gt; We will not follow a textbook
closely, but will have several readings from two books (both of which
are freely available):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Andreas M. Antonopoulos,
&lt;a href=&#34;https://github.com/aantonop/bitcoinbook&#34;&gt;&lt;em&gt;Mastering Bitcoin: Unlocking Digital
Cryptocurrencies&lt;/em&gt;&lt;/a&gt;.  (You can
use the free version of the book available at
&lt;a href=&#34;https://github.com/aantonop/bitcoinbook&#34;&gt;https://github.com/aantonop/bitcoinbook&lt;/a&gt;,
but would probably benefit from buying the &lt;a href=&#34;http://www.amazon.com/Mastering-Bitcoin-Unlocking-Digital-Crypto-Currencies/dp/1449374042&#34;&gt;printed
version&lt;/a&gt;).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Arvind Narayanan, Joseph Bonneau, Edward Felten, Andrew Miller, Steven
Goldfeder. &lt;a href=&#34;https://piazza.com/princeton/spring2015/btctech/resources&#34;&gt;&lt;em&gt;Bitcoin and Cryptocurrency
Technologies&lt;/em&gt;&lt;/a&gt;.
This is a new book under development by a team at Princeton University.
(There are also lecture videos and slides that correspond to the book.)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In addition to those books, we will have several readings from both
general audience publications, technical documents, and research papers.&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;h2 id=&#34;overview:051025d606153e159a2b11ffecb897d5&#34;&gt;Overview&lt;/h2&gt;

&lt;p&gt;For the past 10,000 years, humans have been seeking better ways to store
and transfer value.  &lt;em&gt;Cryptocurrencies&lt;/em&gt; (most notably bitcoin), provide
a way to do this using bits alone without any centralized authority.  In
this course, we will learn about the cryptographic foundations for
cryptocurrencies; networking, software, hardware, and security issues
relevant to designing and implementing a cryptocurrency, and consider
the economic, legal, and political issues raised by cryptocurrencies.&lt;/p&gt;

&lt;h2 id=&#34;expected-background:051025d606153e159a2b11ffecb897d5&#34;&gt;Expected Background&lt;/h2&gt;

&lt;p&gt;Students entering this course are expected to be comfortable reading,
designing, and writing complex programs that involve thousands of lines
of code distributed over many modules.  You should be fairly comfortable
with math, at least enough to analyze probabilities.&lt;/p&gt;

&lt;p&gt;You should be comfortable learning how to use a new programming language
features and APIs by reading their documentation (or source code when no
documentation is available), and not be surprised when you are expected
to learn a new language on your own or to seek documentation beyond what
was provided in class.&lt;/p&gt;

&lt;p&gt;Students are &lt;strong&gt;not expected&lt;/strong&gt; to have significant previous experience with
cryptography (although such background will certainly be helpful).&lt;/p&gt;

&lt;p&gt;Some specific things we expect of students entering this course:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;You should have some experience programming in at least one
programming language, and not be afraid of needing to learn new
languages.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;You have written at least one program with over 1000 lines of code.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;You should understand basic probability and be able to figure out
things like the probability that 100 tosses of a fair coin do not
result in any tails.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;You should understand at least as much about complexity and
computability as is covered in &lt;a href=&#34;http://dori-mic.org&#34;&gt;&lt;em&gt;Dori-Mic and the Universal
Machine&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;You should find computing exciting and delighting, and believe you can
use computing to make the world a better place.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you do not satisfy any of these expectations, that doesn&amp;rsquo;t mean you
cannot take the class, but you need to let one of the course teachers
know about it at the beginning of the semester.&lt;/p&gt;

&lt;h2 id=&#34;honor-pledge:051025d606153e159a2b11ffecb897d5&#34;&gt;Honor Pledge&lt;/h2&gt;

&lt;p&gt;This course focuses on how to establish trust among distrusting people
using mathematics, computing, and networking.  As a student at
Mr. Jefferson&amp;rsquo;s University, you are intrinsically trusted.&lt;/p&gt;

&lt;p&gt;We take advantage of this trust to provide a better learning environment
for everyone.  In particular, students in this class are expected to
follow these rules:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;b&gt;I will not lie, cheat or steal.&lt;/b&gt; If I am unsure whether something
would be considered lying, cheating or stealing, I will ask before doing
it.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;b&gt;I will carefully read and follow the collaboration policy on each
assignment.&lt;/b&gt; I will not abuse resources, including any submissions or
solutions for assignments from last semester&amp;rsquo;s version of this course,
that would be clearly detrimental to my own learning.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In addition to the honor rules, students in this class are also expected
to follow these behaviors:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;b&gt;I will do what I can to help my fellow classmates learn.&lt;/b&gt; &lt;em&gt;Except
when specifically instructed not to&lt;/em&gt;, this means when other students ask
me for help, I will attempt to provide it. I will look at their answers
and discuss what I think is good or bad about their answers. I will help
others improve their work, but will not give them my answers directly. I
will try to teach them what they need to know to discover solutions
themselves.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;b&gt;I will ask for help.&lt;/b&gt; I will make a reasonable effort to do things
on my own first (or with my partners for group assignment), but will ask
my classmates or the course staff for help before getting overly
frustrated.  There are many ways to ask for help including the course
website and office hours.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;b&gt;I grant the course staff permission to reproduce and distribute
excerpts from my submissions for teaching purposes.&lt;/b&gt; If may opt-out
of this by adding a comment to your code, but without an explicit
opt-out comment we assume you agree to it.  Excerpts will be used
anonymously when illustrating a misunderstanding or common problem, and
with credit when showing an interesting or exemplary answer.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;b&gt;I will not invest money I cannot afford to lose in
cryptocurrencies.&lt;/b&gt; The main topic of this course is cryptocurrencies,
and students will be encouraged to gain experience using bitcoin to
conduct real transactions (but will not be expected to spend any
personal money on bitcoin).  Please be aware that bitcoin is very
volatile, and that you could lose all the money in your bitcoin wallet
if you make a programming error or lose your key. It would be foolish
and reckless to convert any money you would be upset about losing into a
cryptocurrency.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;b&gt;I will provide useful feedback.&lt;/b&gt; I realize that this is a new and
experimental course, and it is important that I let the course staff
know what they need to improve the course. I will not wait until the
end of the course to make the course staff aware of any problems. I
will provide feedback either anonymously or by contacting the course
staff directly. &lt;b&gt;I will fill out all requested surveys honestly and
thoroughly&lt;/b&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;assignments:051025d606153e159a2b11ffecb897d5&#34;&gt;Assignments&lt;/h2&gt;

&lt;p&gt;The course will have one midterm, four problem sets, one final project,
and a (discretionary) final exam.  In addition, there will be several
check-ups (short tests in class, with opportunities to revise and
improve answers after discussion) and short assignments that may involve
reading assignments and posting answers and questions on the course
website.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Exams.&lt;/strong&gt; The midterm is Monday, 19 October.  The final exam is
scheduled for Friday, 11 December (2-5pm).  This time will be used to
schedule short oral exams for students who have not already demonstrated
strong understanding of the course topics.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problem Sets.&lt;/strong&gt; The problem sets will involve writing programs and
solving problems to understand transactions in bitcoin (Problem Set 1),
bitcoin nodes and mining (Problem Set 2), blockchain analysis (Problem
Set 3), and alternate cryptocurrencies (Problem Set 4).  For most of
these assignments, you will be encouraged to work with one or two other
people in a small team.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Final Project.&lt;/strong&gt; For the final project, you are free to work on
anything relevant to cryptocurrencies.  Some suggestions for project
ideas will be posted on the course website.  Students who have ambitious
ideas for a project may be able to arrange with the course staff to
expand the project to substitute for other assignments (such as Problem
Set 4).&lt;/p&gt;

&lt;h2 id=&#34;schedule:051025d606153e159a2b11ffecb897d5&#34;&gt;Schedule&lt;/h2&gt;

&lt;p&gt;A tenative and (continually) updated schedule is available as a &lt;a href=&#34;https://www.google.com/calendar/embed?src=rmjagdrnmu3a9h2q5199lg4t28%40group.calendar.google.com&amp;amp;ctz=America/New_York&#34;&gt;Google
calendar&lt;/a&gt;.
(You can view this calendar on the course site, or incorporate in as
iCal calendar into your own calendar using &lt;a href=&#34;https://www.google.com/calendar/ical/rmjagdrnmu3a9h2q5199lg4t28%40group.calendar.google.com/public/basic.ics&#34;&gt;this
link&lt;/a&gt;.
Except when noted otherwise, assignments are due at &lt;b&gt;8:29pm&lt;/b&gt; on the
due date.&lt;/p&gt;

&lt;p&gt;The main expected due dates: &lt;font color=&#34;red&#34;&gt;(updated 20 September 2015, see &lt;a href=&#34;https://web.archive.org/web/20150921010439/http://bitcoin-class.org/syllabus/&#34;&gt;archived version&lt;/a&gt; for original)&lt;/font&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Saturday, 29 August: &lt;strong&gt;Registration&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Monday, 7 September: &lt;strong&gt;Checkup 1&lt;/strong&gt; (in class)&lt;/li&gt;
&lt;li&gt;Tuesday, 15 September: &lt;strong&gt;Problem Set 1: Bitcoin Transactions&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Wednesday, 23 September: &lt;strong&gt;Checkup 2&lt;/strong&gt; (in class)&lt;/li&gt;
&lt;li&gt;Friday, 9 October: &lt;strong&gt;Problem Set 2: Blockchain&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Monday, 19 October: &lt;strong&gt;Midterm Exam&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Tuesday, 27 October: &lt;strong&gt;Problem Set 3: Blockchain Analysis&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Tuesday, 17 November: &lt;strong&gt;Problem Set 4: Alternate Cryptocurrencies&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Sunday, 22 November: &lt;strong&gt;Project Proposal&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Monday, 7 December: Last class&lt;/li&gt;
&lt;li&gt;Friday, 11 December: &lt;strong&gt;Final Exam&lt;/strong&gt; (discretionary)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Dates shown here are subject to change based on how the semester
progresses, but with ample warning.&lt;/p&gt;

&lt;h2 id=&#34;grading:051025d606153e159a2b11ffecb897d5&#34;&gt;Grading&lt;/h2&gt;

&lt;p&gt;We prefer to spend our time focused as much as possible on &lt;em&gt;teaching&lt;/em&gt;,
and as little as possible on &lt;em&gt;grading&lt;/em&gt;.  The assignments in this class
are designed to maximize &lt;em&gt;learning&lt;/em&gt;, rather than primarily for
&lt;em&gt;assessment&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;That said, we understand that students do need to be assigned grades at
the end of the semester, and sometimes grades can be a powerful and
effective motivator as well as a useful way to measure progress and
understanding.&lt;/p&gt;

&lt;p&gt;Grades will be determined based on your performance on all the class
assignments and class contributions (including postings on the course
site).  Some assignments may be graded by randomly looking at selected
answers, rather than reading everything submitted.&lt;/p&gt;

&lt;p&gt;There is no set weighting among these things, and in general, if there
is some combination of the above that demonstrates that you have gotten
what we hope out of the class then you will receive an A grade.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Class 13: Law and Policy</title>
      <link>http://bitcoin-class.org/classes/class13/</link>
      <pubDate>Mon, 12 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>http://bitcoin-class.org/classes/class13/</guid>
      <description>

&lt;h2 id=&#34;schedule:af2ff3ef0db44829d3ff131eac0d7ec7&#34;&gt;Schedule&lt;/h2&gt;

&lt;p&gt;&lt;div class=&#34;todo&#34;&gt; &lt;strong&gt;Monday-Wednesday, October &lt;sup&gt;19&lt;/sup&gt;&amp;frasl;&lt;sub&gt;21&lt;/sub&gt;&lt;/strong&gt;: Midterm Exam.
Part of the midterm will be handed out in class on Monday, Oct 19. The
midterm will be in class on Wednesday, October 21.&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Today&amp;rsquo;s class was a visit from Tom Dukes on law and policy related to cryptocurrencies.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.law.virginia.edu/lawweb/faculty.nsf/FHPbI/1378405&#34;&gt;Tom Duke&amp;rsquo;s Bio&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Congressional Research Service report he mentioned: &lt;a href=&#34;https://www.fas.org/sgp/crs/misc/R43339.pdf&#34;&gt;&lt;em&gt;Bitcoin:
Questions, Answers, and Analysis of Legal
Issues&lt;/em&gt;&lt;/a&gt;, 14 August
2015. This provides a good summary of US laws and regulations that apply
to bitcoin, and why Congress is interested in it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Midterm Schedule Update</title>
      <link>http://bitcoin-class.org/announcements/updates/</link>
      <pubDate>Mon, 12 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>http://bitcoin-class.org/announcements/updates/</guid>
      <description>&lt;p&gt;The midterm was originally scheduled for Monday, October 19, but due to
the two guest lectures this week it will be rescheduled to be on
Wednesday, October 21.&lt;/p&gt;

&lt;p&gt;In class on Monday, October 19, you will receive a handout that sets up
and includes a few of the questions on the midterm (which you&amp;rsquo;ll be
expected to work on before Wednesday, Oct 21, and will be able to bring
in written answers to that you will submit as part of the midterm).  The
rest of the midterm will be in class on Wednesday, October 21.&lt;/p&gt;

&lt;p&gt;If you have a problem with the schedule change and prefer to do the
midterm on Monday, October 19, this is an option.  You should contact
Dave or Samee to arrange this by Oct 14 at the latest.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Class 12: Script</title>
      <link>http://bitcoin-class.org/classes/class12/</link>
      <pubDate>Wed, 07 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>http://bitcoin-class.org/classes/class12/</guid>
      <description>

&lt;h2 id=&#34;schedule:bc216d98f3ca2300699af2d41b8a2a45&#34;&gt;Schedule&lt;/h2&gt;

&lt;p&gt;&lt;div class=&#34;todo&#34;&gt;
&lt;strong&gt;Read&lt;/strong&gt;: &lt;a href=&#34;http://bitcoin-class.org/docs/princeton-book/chapter_3.pdf&#34;&gt;&lt;em&gt;Chapter 3: Mechanics of Bitcoin&lt;/em&gt;&lt;/a&gt;, from
Arvind Narayanan, Joseph Bonneau, Edward Felten, Andrew Miller, Steven
Goldfeder. &lt;a href=&#34;https://piazza.com/princeton/spring2015/btctech/resources&#34;&gt;&lt;em&gt;Bitcoin and Cryptocurrency
Technologies&lt;/em&gt;&lt;/a&gt;.
Sections 3.2 and 3.3 are about bitcoin scripts, and should be read
carefully.  (You should read the whole chapter, but those sections are
most relevant to today&amp;rsquo;s class.)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Friday, October 9&lt;/strong&gt;: Problem Set 2 (8:29pm).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Monday, October 19&lt;/strong&gt;: Midterm Exam&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/key/aQYiH6zGCIgxbO&#34; width=&#34;625&#34; height=&#34;400&#34; frameborder=&#34;2&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34;&gt; &lt;/iframe&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;caption&#34;&gt;
Sorry, ink markings were lost from today.  &lt;a href=&#34;http://bitcoin-class.org/classes/class12-post.pptx&#34;&gt;Download the slides&lt;/a&gt;
   &lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;h1 id=&#34;hash-collisions:bc216d98f3ca2300699af2d41b8a2a45&#34;&gt;Hash Collisions!&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Computing a bitcoin address:&lt;/strong&gt; (&lt;a href=&#34;https://en.bitcoin.it/wiki/Technical_background_of_version_1_Bitcoin_addresses&#34;&gt;bitcoinwiki&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Private Key: pick a random number, &lt;em&gt;k&lt;/em&gt;.&lt;br /&gt;
Public Key: compute (&lt;em&gt;Ux&lt;/em&gt;, &lt;em&gt;Uy&lt;/em&gt;) = &lt;em&gt;Gk&lt;/em&gt;
&lt;div class=&#34;indented&#34;&gt;(elliptic curve multiplication, &lt;em&gt;G&lt;/em&gt; is specified generator point)&lt;/div&gt;
&lt;em&gt;Ux&lt;/em&gt; and &lt;em&gt;Uy&lt;/em&gt; are 32 bytes each.&lt;/p&gt;

&lt;p&gt;The bitcoin address is (|| is bitstring concatenation):&lt;br /&gt;
    &lt;div class=&#34;indented&#34;&gt;
    raw = &lt;code&gt;1&lt;/code&gt; || RIPEMD160(SHA256(&lt;em&gt;Ux&lt;/em&gt; || &lt;em&gt;Uy&lt;/em&gt;))&lt;br /&gt;
         &lt;div class=&#34;indented&#34;&gt;&lt;em&gt;RIPEMD output is 160 bits (20 bytes) + one byte for &lt;code&gt;1&lt;/code&gt;&lt;/em&gt;&lt;/div&gt;
    checksum = first 4 bytes of SHA256(SHA256(raw))  &lt;div class=&#34;indented&#34;&gt;&lt;em&gt;Compute a checksum using SHA256 double hash&lt;/em&gt;&lt;/div&gt;
    address = Base58Check(raw || checksum)  &lt;div class=&#34;indented&#34;&gt;&lt;em&gt;convert to printable, unambiguous characters&lt;/em&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;How important is pre-image resistance for the security of bitcoin addresses?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;How important is collision resistance for the security of bitcoin addresses?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;How important is pre-image resistance for the integrity of bitcoin&amp;rsquo;s proof-of-work?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;How important is collision resistance for the integrity of bitcoin&amp;rsquo;s proof-of-work?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Xiaoyun Wang and Hongbo Yu, &lt;a href=&#34;http://www.bitcoin-class.org/docs/hashcollisions.pdf&#34;&gt;&lt;em&gt;How to Break MD5 and Other Hash Functions&lt;/em&gt;&lt;/a&gt;, EuroCrypt 2005.&lt;/p&gt;

&lt;h1 id=&#34;bitcoin-script:bc216d98f3ca2300699af2d41b8a2a45&#34;&gt;Bitcoin Script&lt;/h1&gt;

&lt;p&gt;Transaction outputs in bitcoin are protected by &lt;em&gt;locking scripts&lt;/em&gt;, and
must be unlocked by &lt;em&gt;unlocking scripts&lt;/em&gt;.  The scripts are written in a
simple (compared to, say, the Java Virtual Machine language, but quite
complex and poorly specified for what one might expect would be needed
for bitcoin transactions) stack-based language.  A transaction output is
not unlocked unless an unlocking script is provided such that the result
of executing the unlocking script, followed by executing the locking
script, is a stack with value True on top (and no invalid transaction
results during the execution).&lt;/p&gt;

&lt;p&gt;Some script instructions:&lt;/p&gt;

&lt;p&gt;&lt;table cellpadding=5&gt;
   &lt;tr&gt;
   &lt;td align=&#34;center&#34;&gt;&lt;b&gt;Opcode&lt;/b&gt;&lt;/td&gt;&lt;td align=&#34;center&#34;&gt;&lt;b&gt;Input&lt;/b&gt;&lt;/td&gt;&lt;td align=&#34;center&#34;&gt;&lt;b&gt;Output&lt;/b&gt;&lt;/td&gt;&lt;td align=&#34;center&#34;&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
   &lt;tr&gt;&lt;td&gt;&lt;code&gt;OP_1&lt;/code&gt;&lt;/td&gt;&lt;td&gt; - &lt;/td&gt;&lt;td&gt; &lt;strong&gt;1&lt;/strong&gt; &lt;/td&gt;&lt;td&gt; Pushes a &lt;strong&gt;1&lt;/strong&gt; (True) on the stack &lt;/td&gt;&lt;/tr&gt;
   &lt;tr&gt;&lt;td&gt;&lt;code&gt;OP_DUP&lt;/code&gt;&lt;/td&gt;&lt;td&gt; &lt;em&gt;a&lt;/em&gt; &lt;/td&gt;&lt;td&gt; &lt;em&gt;a&lt;/em&gt; &lt;em&gt;a&lt;/em&gt; &lt;/td&gt;&lt;td&gt; Duplicates the top element of the stack &lt;/td&gt;&lt;/tr&gt;
   &lt;tr&gt;&lt;td&gt;&lt;code&gt;OP_ADD&lt;/code&gt;&lt;/td&gt;&lt;td&gt; &lt;em&gt;a&lt;/em&gt; &lt;em&gt;b&lt;/em&gt; &lt;/td&gt;&lt;td&gt; (&lt;em&gt;a&lt;/em&gt;+&lt;em&gt;b&lt;/em&gt;) &lt;/td&gt;&lt;td&gt; Pushes the sum of the top two elements. &lt;/td&gt;&lt;/tr&gt;
   &lt;tr&gt;&lt;td&gt;&lt;code&gt;OP_EQUAL&lt;/code&gt;&lt;/td&gt;&lt;td&gt; &lt;em&gt;a&lt;/em&gt; &lt;em&gt;b&lt;/em&gt; &lt;/td&gt;&lt;td&gt; &lt;strong&gt;0&lt;/strong&gt; or &lt;strong&gt;1&lt;/strong&gt; &lt;/td&gt;&lt;td&gt; Pushes &lt;strong&gt;1&lt;/strong&gt; if the top two elements are exactly equal, otherwise &lt;strong&gt;0&lt;/strong&gt;. &lt;/td&gt;&lt;/tr&gt;
   &lt;tr&gt;&lt;td&gt;&lt;code&gt;OP_VERIFY&lt;/code&gt; &lt;/td&gt;&lt;td&gt; &lt;em&gt;a&lt;/em&gt; &lt;/td&gt;&lt;td&gt; - &lt;/td&gt;&lt;td&gt; If &lt;em&gt;a&lt;/em&gt; is not &lt;strong&gt;True&lt;/strong&gt; (&lt;strong&gt;1&lt;/strong&gt;), terminates as Invalid. &lt;/td&gt;&lt;/tr&gt;
   &lt;tr&gt;&lt;td&gt;&lt;code&gt;OP_RETURN&lt;/code&gt;&lt;/td&gt;&lt;td&gt; - &lt;/td&gt;&lt;td&gt; - &lt;/td&gt;&lt;td&gt; Terminates as Invalid. &lt;/td&gt;&lt;/tr&gt;
   &lt;tr&gt;&lt;td&gt;&lt;code&gt;OP_EQUALVERIFY&lt;/code&gt; &lt;/td&gt;&lt;td&gt; &lt;em&gt;a&lt;/em&gt; &lt;em&gt;b&lt;/em&gt; &lt;/td&gt;&lt;td&gt; - &lt;/td&gt;&lt;td&gt; If &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; are not equal, terminates as Invalid. &lt;/td&gt;&lt;/tr&gt;
   &lt;tr&gt;&lt;td&gt;&lt;code&gt;OP_HASH160&lt;/code&gt; &lt;/td&gt;&lt;td&gt; &lt;em&gt;a&lt;/em&gt; &lt;/td&gt;&lt;td&gt; H(&lt;em&gt;a&lt;/em&gt;) &lt;/td&gt;&lt;td&gt; Pushes bitcoin address, RIPEMD160(SHA256(&lt;em&gt;a&lt;/em&gt;)). &lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/p&gt;

&lt;p&gt;Is the bitcoin scripting language Turing-complete?
&lt;div class=&#34;gap&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;If you are not clear on what Turing-complete means (and why real
machines are not ideal), see &lt;a href=&#34;http://www.dori-mic.org&#34;&gt;&lt;em&gt;Dori-Mic and the Universal
Machine!&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PS2 / Projects</title>
      <link>http://bitcoin-class.org/announcements/ps2/</link>
      <pubDate>Thu, 01 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>http://bitcoin-class.org/announcements/ps2/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://bitcoin-class.org/ps/ps2/&#34;&gt;Problem Set 2&lt;/a&gt; is now posted, and is due
Friday, 9 October (8:29pm).  Sorry it took so long to post this!&lt;/p&gt;

&lt;p&gt;The other thing I hope everyone thinks about over &amp;ldquo;reading break&amp;rdquo;, is
ideas for a course project.  You can see projects from the course last
Spring here:
&lt;a href=&#34;http://bitcoin-class.org/0/cryptocurrency-projects.html&#34;&gt;http://bitcoin-class.org/0/cryptocurrency-projects.html&lt;/a&gt;.
Your project can be anything related to cryptocurrencies or the tools we
learn about in this class, and can be done individually or with a team
(the size of the project should scale approximately with the square root
of the team size).  If you have an idea for an ambitious project that
you want to start early, it may be possible to arrange for it to substitute for some other course assignments.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Class 11: More Mining</title>
      <link>http://bitcoin-class.org/classes/class11/</link>
      <pubDate>Wed, 30 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://bitcoin-class.org/classes/class11/</guid>
      <description>

&lt;h2 id=&#34;schedule:af81afa25b288e26509ba0728268a3b7&#34;&gt;Schedule&lt;/h2&gt;

&lt;p&gt;&lt;div class=&#34;todo&#34;&gt;
&lt;strong&gt;Wednesday, September 30&lt;/strong&gt;: Checkup 2 revisions (if desired), due at the beginning of class or end of office hours today.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Friday, October 9&lt;/strong&gt;: Problem Set 2 (moved from original deadline of
  October 2).  Problem Set 2 will be posted by tomorrow.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Monday, October 19&lt;/strong&gt;: Midterm Exam&lt;/p&gt;

&lt;p&gt;No classes Monday, October 5!
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/key/31bDBGxrcPo6b9&#34; width=&#34;625&#34; height=&#34;400&#34; frameborder=&#34;2&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34;&gt; &lt;/iframe&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;caption&#34;&gt;
Note: ink markings may not appear in the
embedded viewer.  To see them, &lt;a href=&#34;http://bitcoin-class.org/classes/class11.pptx&#34;&gt;download the slides&lt;/a&gt;.
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;/center&gt;&lt;/p&gt;

&lt;h1 id=&#34;notes:af81afa25b288e26509ba0728268a3b7&#34;&gt;Notes&lt;/h1&gt;

&lt;p&gt;If we have 20% of the network hashing power, calculate the proportion of blocks we will win if we mine selfishly. Do we come out ahead or behind?&lt;/p&gt;

&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;

&lt;p&gt;Why does our formular for E not work for alpha greater than a half?&lt;/p&gt;

&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;

&lt;p&gt;Compute the constant on slide 29, &amp;ldquo;Expected share reward&amp;rdquo;. You may have to look up the Taylor&amp;rsquo;s expansion series for natural logarithm.&lt;/p&gt;

&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;

&lt;!--page--&gt;

&lt;p&gt;Does mining in a pool increase your reward or decrease it? Explain.&lt;/p&gt;

&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;

&lt;p&gt;If a pool is paying out proportionally, and you are profiting by pool hopping in and out of it, is somebody else making a loss? Who and how?&lt;/p&gt;

&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Checkup 2 Revisions</title>
      <link>http://bitcoin-class.org/announcements/checkup2revisions/</link>
      <pubDate>Mon, 28 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://bitcoin-class.org/announcements/checkup2revisions/</guid>
      <description>&lt;p&gt;If you didn&amp;rsquo;t get a &amp;ldquo;gold star&amp;rdquo; on &lt;a href=&#34;./checkup2.pdf&#34;&gt;Checkup 2&lt;/a&gt;, you can
improve your score by answering one or more of the questions below.  You
can submit your revisions in class Wednesday, or at the end of office
hours Wednesday.  To submit revisions, attach your answers to these
questions to your original submission.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;R1. Hashing&lt;/strong&gt; (Answer this question if you want to improve your score on questions 1-4)&lt;/p&gt;

&lt;p&gt;There are several different places in bitcoin where cryptographic hashes are used:&lt;/p&gt;

&lt;p&gt;A. Producing the public bitcoin address by hashing the public key.&lt;/p&gt;

&lt;p&gt;B. Producing a transaction digest for use as the input in signing a transaction.&lt;/p&gt;

&lt;p&gt;C. Producing the Merkle tree root for authenticating the transactions in
a block (using hashes all the way up the tree).&lt;/p&gt;

&lt;p&gt;D. Producing the hash of the previous block to use in the block header.&lt;/p&gt;

&lt;p&gt;E. Producing the double hash of the block (with nonces) to find a block
that satisfies the difficult needed in mining.&lt;/p&gt;

&lt;p&gt;Suppose &lt;em&gt;H&lt;/em&gt; is a hash function that provides strong pre-image
resistance, but does not provide collision resistance. That is, an
adversary knows way to efficiently find pairs of values, &lt;em&gt;m&lt;/em&gt;&lt;sub&gt;1&lt;/sub&gt;
and &lt;em&gt;m&lt;/em&gt;&lt;sub&gt;2&lt;/sub&gt; such that &lt;em&gt;m&lt;/em&gt;&lt;sub&gt;1&lt;/sub&gt; is not equal to
&lt;em&gt;m&lt;/em&gt;&lt;sub&gt;2&lt;/sub&gt; and &lt;em&gt;H&lt;/em&gt;(&lt;em&gt;m&lt;/em&gt;&lt;sub&gt;1&lt;/sub&gt;) = &lt;em&gt;H&lt;/em&gt;(&lt;em&gt;m&lt;/em&gt;&lt;sub&gt;2&lt;/sub&gt;).&lt;/p&gt;

&lt;p&gt;Explain clearly &lt;em&gt;one place&lt;/em&gt; where cryptographic hashing is used in
bitcoin that the adversary could gain an advantage by knowing how to
find collisions in &lt;em&gt;H&lt;/em&gt;.  (Be careful to not overstate the advantage,
though.)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;R2. Blockchain&lt;/strong&gt; (Answer this question if you want to improve your score on questions 5-7)&lt;/p&gt;

&lt;p&gt;Ishtosa suggests strengthening bitcoin by adding the hash of the
previous previous block to the block header.  So, the block header for
block 534 would now include the both the hash of the block 533, and
the hash of block 532.  Would this be a good idea?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Class 10: Subverting Bitcoin</title>
      <link>http://bitcoin-class.org/classes/class10/</link>
      <pubDate>Mon, 28 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://bitcoin-class.org/classes/class10/</guid>
      <description>

&lt;h2 id=&#34;schedule:cefb84ebc6e45e7105a37c4f4d413033&#34;&gt;Schedule&lt;/h2&gt;

&lt;p&gt;&lt;div class=&#34;todo&#34;&gt;
&lt;strong&gt;Wednesday, September 30&lt;/strong&gt;: Checkup 2 revisions (if desired), due at the beginning of class.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Friday, October 9&lt;/strong&gt;: Problem Set 2 (moved from original deadline of October 2).  Problem Set 2 will be posted later.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Monday, October 19&lt;/strong&gt;: Midterm Exam
   &lt;/div&gt;&lt;/p&gt;

&lt;h1 id=&#34;checkup-2:cefb84ebc6e45e7105a37c4f4d413033&#34;&gt;Checkup 2&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://bitcoin-class.org/checkup2.pdf&#34;&gt;Checkup 2 (PDF)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/key/tLGdRxu6IVVzni&#34; width=&#34;625&#34; height=&#34;400&#34; frameborder=&#34;2&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34;&gt; &lt;/iframe&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;caption&#34;&gt;
Note: ink markings may not appear in the
embedded viewer.  To see them, &lt;a href=&#34;http://bitcoin-class.org/classes/class10.pptx&#34;&gt;download the slides&lt;/a&gt;.
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;/center&gt;&lt;/p&gt;

&lt;h1 id=&#34;notes:cefb84ebc6e45e7105a37c4f4d413033&#34;&gt;Notes&lt;/h1&gt;

&lt;p&gt;Why would a hypothetical cryptocurrency without miners not work? What is the
essential service rendered by a miner?&lt;/p&gt;

&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;

&lt;p&gt;How does Bitcoin handle forks? What criteria does it use to decide the branch
to converge on?&lt;/p&gt;

&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;

&lt;!--page--&gt;

&lt;p&gt;What is a Nash Equilibrium in a game? What is the equilibrium strategy in
a game of rock-paper-scissors?&lt;/p&gt;

&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;

&lt;p&gt;What would happen to the bitcoin currency if everyone started mining selfishly?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Darkode</title>
      <link>http://bitcoin-class.org/news/radiolab/</link>
      <pubDate>Wed, 23 Sep 2015 21:00:00 +0000</pubDate>
      
      <guid>http://bitcoin-class.org/news/radiolab/</guid>
      <description>&lt;p&gt;The &lt;a href=&#34;http://www.radiolab.org/story/darkode/&#34;&gt;latest episode of Radiolab&lt;/a&gt;
starts with a story about bitcoin being used in a ransom scam
(CryptoLocker).  Its a sad story, without a lot of technical insights,
but does give a sense of what the bitcoin experience is like for many
people today.  A good thing to think about for a potential project is
how to solve the problem &amp;mdash;- making it so bitcoin can&amp;rsquo;t be used to
collect ransom untracably, without losing the desirable aspects of
anonymity and decentralization.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>21 Inc. Releases First Product, a ‘Bitcoin Computer’</title>
      <link>http://bitcoin-class.org/news/u21/</link>
      <pubDate>Wed, 23 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://bitcoin-class.org/news/u21/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://blogs.wsj.com/moneybeat/2015/09/21/21-inc-releases-first-product-a-bitcoin-computer/&#34;&gt;&lt;em&gt;21 Inc. Releases First Product, a &amp;lsquo;Bitcoin Computer&amp;rsquo;&lt;/em&gt;&lt;/a&gt;, Wall Street Journal, 21 September 2015.&lt;/p&gt;

&lt;p&gt;21 Inc. has been very well funded, but pretty opaque about what they are
actually doing.  They have designed some custom mining hardware, but
hard to see how it makes sense as a USB device for individuals.  I could
see the value in a secure USB device that works as a bitcoin wallet and
can be smoothly integrated with a web client, but hard to see the case
for including a miner in it.&lt;/p&gt;

&lt;p&gt;You can buy it from
&lt;a href=&#34;www.amazon.com/21-INC-21BC1-Bitcoin-Computer/dp/B014RD021C/&#34;&gt;amazon.com&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Class 09: Economics of Mining</title>
      <link>http://bitcoin-class.org/classes/class9/</link>
      <pubDate>Wed, 23 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://bitcoin-class.org/classes/class9/</guid>
      <description>

&lt;h2 id=&#34;schedule:b1685b9d514e4fd02cc72721228d457c&#34;&gt;Schedule&lt;/h2&gt;

&lt;p&gt;&lt;div class=&#34;todo&#34;&gt;
&lt;strong&gt;Wednesday, September 23&lt;/strong&gt;: Checkup 2 (was originally scheduled for Monday, September 21).  See previous class notes for details on what is covered.&lt;br /&gt;
&lt;strong&gt;Friday, October 9&lt;/strong&gt;: Problem Set 2 (moved from original deadline of October 2).  Problem Set 2 will be posted later.
&lt;strong&gt;Monday, October 19&lt;/strong&gt;: Midterm Exam
   &lt;/div&gt;&lt;/p&gt;

&lt;h1 id=&#34;checkup-2:b1685b9d514e4fd02cc72721228d457c&#34;&gt;Checkup 2&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://bitcoin-class.org/checkup2.pdf&#34;&gt;Checkup 2 (PDF)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As was suggested in class today, there won&amp;rsquo;t be an immediate opportunity
to submit revisions for this (like there was for Checkup 1), but there
will be some opportunity to improve your checkup result given in
Monday&amp;rsquo;s class.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/key/sTwMIV59OWvurX&#34;
width=&#34;625&#34; height=&#34;400&#34; frameborder=&#34;2&#34; marginwidth=&#34;0&#34;
marginheight=&#34;0&#34; scrolling=&#34;no&#34;&gt;&lt;/iframe&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;caption&#34;&gt;
Note: ink markings may not appear in the
embedded viewer.  To see them, &lt;a href=&#34;http://bitcoin-class.org/classes/class9-post.pptx&#34;&gt;download the slides&lt;/a&gt;.
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;/center&gt;&lt;/p&gt;

&lt;h1 id=&#34;energy:b1685b9d514e4fd02cc72721228d457c&#34;&gt;Energy&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://en.bitcoin.it/wiki/Mining_hardware_comparison&#34;&gt;Mining Hardware&lt;/a&gt;
- current ASIC miners achive &amp;gt;5 Billion hashes per seconds and over 1500
Million hashes per Joule (the energy required to lift an apple one
meter).&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://bitcointalk.org/index.php?topic=1152746.0&#34;&gt;Antminer S5+&lt;/a&gt;
(here&amp;rsquo;s the specs on the mining hardware we looked at in class)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.thecoinsman.com/2014/08/bitcoin/inside-chinese-bitcoin-mine/&#34;&gt;&lt;em&gt;Inside a Chinese Bitcoin Mine&lt;/em&gt;&lt;/a&gt;, The Coinsman, 11 August 2014.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The first thing you notice as you approach the warehouse is the noise. It begins as soon as you step out of the car, at which point it sounds like massive swarm of angry bees droning away somewhere off in the distance. It becomes louder and louder the closer you get to the building, and as you step through the doors it becomes a deafening and steady roar&amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Our nearest nuclear plant, the &lt;a href=&#34;https://www.dom.com/corporate/what-we-do/electricity/generation/nuclear/north-anna-power-station&#34;&gt;North Anna Power
Station&lt;/a&gt;
(Lake Anna) generates 1892 MW, &amp;ldquo;enough to power 450,000 homes&amp;rdquo; or about
9x the amount needed to power the current bitcoin network (only counting
the miners themselves; additional power needed for cooling, etc.)&lt;/p&gt;

&lt;p&gt;Is it financially lucrative to mine bitcoin in your residencev?&lt;/p&gt;

&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;

&lt;p&gt;(&lt;strong&gt;Caveat:&lt;/strong&gt; despite the very rough estimate from class today, we are
not recommending anyone invest in bitcoin mining!)&lt;/p&gt;

&lt;p&gt;How does the energy use of bitcoin compare to what is used by the
current financial infrastructure for comparable service?  (This is a
very difficult question to answer, would be a good project idea, not
something to answer in the blank below!)&lt;/p&gt;

&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
