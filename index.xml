<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cryptocurrency Cabal</title>
    <link>http://bitcoin-class.org/</link>
    <description>Recent content on Cryptocurrency Cabal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 31 Aug 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://bitcoin-class.org/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>PS1: Bitcoin Transactions</title>
      <link>http://bitcoin-class.org/ps/ps1/</link>
      <pubDate>Mon, 31 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>http://bitcoin-class.org/ps/ps1/</guid>
      <description>

&lt;h1 id=&#34;problem-set-1-bitcoin-transactions:939ea9b9cc2ea0226c5f2d7200883cc7&#34;&gt;Problem Set 1: Bitcoin Transactions&lt;/h1&gt;

&lt;p&gt;&lt;div class=&#34;due&#34;&gt;
Due: Tuesday, 15 September at 8:29pm
   &lt;/div&gt;&lt;/p&gt;

&lt;h2 id=&#34;purpose:939ea9b9cc2ea0226c5f2d7200883cc7&#34;&gt;Purpose&lt;/h2&gt;

&lt;p&gt;The goal of this assignment is for everyone in the class to understand
how keys, addresses, and transactions work in bitcoin.  In addition,
this assignment should help everyone get up-to-speed with the software
tools (including the Go programming language) we will use in later
assignments.&lt;/p&gt;

&lt;h3 id=&#34;collaboration-policy:939ea9b9cc2ea0226c5f2d7200883cc7&#34;&gt;Collaboration Policy&lt;/h3&gt;

&lt;p&gt;For this assignment, everyone should submit their own assignment and
should writeup their own answers to the questions as well as execute all
the required transactions with your own keys.&lt;/p&gt;

&lt;p&gt;You may, and are encouraged to, discuss all of the problems with anyone
else you want (both on-line using the course web site or any other means
you choose, and in person), and it is okay to share code with others so
long as you understand everything in all of the code you use.&lt;/p&gt;

&lt;h3 id=&#34;submission:939ea9b9cc2ea0226c5f2d7200883cc7&#34;&gt;Submission&lt;/h3&gt;

&lt;p&gt;Submit your answers as a single PDF file using &lt;a href=&#34;https://www.dropbox.com/request/KV26Qd6UrcB9j6nBLVw8&#34;&gt;this
link&lt;/a&gt;.  The name
of your file should be &lt;code&gt;&amp;lt;your email ID&amp;gt;-ps1.pdf&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Your submission should include clearly marked answers for all the
problems (highlighted in yellow).&lt;/p&gt;

&lt;h1 id=&#34;blockchain-sleuthing:939ea9b9cc2ea0226c5f2d7200883cc7&#34;&gt;Blockchain Sleuthing&lt;/h1&gt;

&lt;p&gt;You should have received some bitcoin at the address you submitted in
the registration form.  (If you did not receive any bitcoin, contact the
course staff right away!)&lt;/p&gt;

&lt;p&gt;From that transaction, you have an address that was used to send you the
bitcoin.  For these questions, your goal is to figure out what you can
about the way bitcoin was distributed to the class.  For these
questions, manual sleuthing should be sufficient (although ambitious
students may find ways to automate this).&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;problem&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problem 1.&lt;/strong&gt; Answer the following questions about the transaction
  where you received the bitcoin.  If you received more than one
  transfer, include all the transaction IDs).&lt;/p&gt;

&lt;p&gt;a. What is the transaction ID?&lt;/p&gt;

&lt;p&gt;b. What was the transaction fee for the transaction?  (Give your answer
in BTC, as well as current approximate US dollar value.)&lt;/p&gt;

&lt;p&gt;c. What was the total value of all the transactions in the block
containing your transfer?  (Note:
&lt;a href=&#34;https://blockchain.info&#34;&gt;https://blockchain.info&lt;/a&gt; provides this info
conveniently, although you could compute it yourself)&lt;/p&gt;

&lt;p&gt;d. How long did it take from when the transaction was received until it
had 3 confirmations?  (Include an explanation of how you estimated this
in your answer.)
    &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Bitcoin advocates often taut its &amp;ldquo;anonymity&amp;rdquo;, but bitcoin transactions
are actually publicly visible.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;problem&#34;&gt;
&lt;strong&gt;Problem 2.&lt;/strong&gt; See how much can you figure out about the way bitcoin was
transferred to students in the class, starting from your transactions.&lt;/p&gt;

&lt;p&gt;a. Identify the bitcoin addresses of what are likely to be other
students in the class (you could potentially find 27, but it is enough
to find 3).&lt;/p&gt;

&lt;p&gt;b. Trace back the source of the bitcoin as far as you can.  Bonus points
if you can figure out from which exchange the bitcoin was purchased and
when.&lt;/p&gt;

&lt;p&gt;c. (Bonus) Can you learn anything about where the send of the bitcoin is
located geographically?  (In this case, you have external information to
know I&amp;rsquo;m in Charlottesville, but what could you learn about the sender&amp;rsquo;s
probable location just from the information in the blockchain?)&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Hints:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Start by looking at the transaction that sent bitcoin to your
receiving address.  You can search for this by searching for your
recieving address at
&lt;a href=&#34;https://blockexplorer.com&#34;&gt;https://blockexplorer.com&lt;/a&gt;,
&lt;a href=&#34;https://insight.bitpay.com/&#34;&gt;https://insight.bitpay.com/&lt;/a&gt;,
&lt;a href=&#34;https://blockchain.info&#34;&gt;https://blockchain.info&lt;/a&gt;, or many other
sites that provide information about the bitcoin blockchain.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;You can go forward, by following what happened with the &amp;ldquo;change&amp;rdquo; from
that transaction.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;You can go backward, by following transactions to the sending address.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;div class=&#34;problem&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problem 3.&lt;/strong&gt; Suppose a malicious developer wanted to distribute a
  bitcoin wallet implementation that would steal as much bitcoin as
  possible from its users with a little chance as possible of getting
  caught.  (a) Explain things a malicious developed might do to create
  an evil wallet.  (b) How confident are you your money is safe in the
  wallet you are using, and what would you do to increase your
  confidence if you were going to store all of your income in it?&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;h1 id=&#34;getting-going:939ea9b9cc2ea0226c5f2d7200883cc7&#34;&gt;Getting GOing&lt;/h1&gt;

&lt;p&gt;You are free to use any programming language and open source bitcoin
libraries and openly-licensed code you want for this assignment, but
must follow the license requirements of any code you use and credit this
code in your submission.&lt;/p&gt;

&lt;p&gt;The directions we provide use the &lt;a href=&#34;https://github.com/btcsuite&#34;&gt;BTC
Suite&lt;/a&gt; library for bitcoin, implemented in
the &lt;a href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Most of you do not have any experience using Go, but it is not a
difficult language to learn coming from experience with Java (which all
of you have), and although its not &lt;a href=&#34;http://rust-class.org&#34;&gt;my favorite programming
language&lt;/a&gt; it is a language that nearly everyone
finds enjoyable to use and it is becoming widely used in industry
(especially at Google, where it was developed).  The main reason we are
using it for this, though, is because the &lt;a href=&#34;https://github.com/btcsuite&#34;&gt;BTC
library&lt;/a&gt; is the best bitcoin library we are
aware of, and it is written in Go.&lt;/p&gt;

&lt;p&gt;If you are comfortable learning a new programming language by diving
right into moderately complex programs and figuring out things as you
go, you should be able to jump right into this assignment.  If you
prefer a more structured introduction to Go, there are many tutorials
available, including the &lt;a href=&#34;https://tour.golang.org/welcome/1&#34;&gt;Tour of
Go&lt;/a&gt;.  The &lt;a href=&#34;https://gobyexample.com/&#34;&gt;Go by
Example&lt;/a&gt; site is very helpful.  For more
documentation, visit &lt;a href=&#34;https://golang.org/doc/&#34;&gt;https://golang.org/doc/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Start by &lt;a href=&#34;https://golang.org/doc/install&#34;&gt;downloading and installing
Go&lt;/a&gt;.  The latest version is go1.5, which
is the version you should use.  After that,
&lt;a href=&#34;https://github.com/btcsuite/btcd&#34;&gt;follow the directions to install btcd&lt;/a&gt; from btcsuite.&lt;/p&gt;

&lt;!--
# Going Gets Good

After you have installed go, you can set up the BTC library by doing:

```shell
&gt; go get github.com/btcsuite/btcec
```
--&gt;

&lt;h1 id=&#34;obtain-the-starting-code:939ea9b9cc2ea0226c5f2d7200883cc7&#34;&gt;Obtain the Starting Code&lt;/h1&gt;

&lt;p&gt;Before continuing with this assignment, you should &lt;a href=&#34;http://bitcoin-class.org/tools/github/&#34;&gt;set up git and your
github account&lt;/a&gt; and follow the
directions there to set up your private repository containing the
starting code for ps1.  (It may seem like overkill to use git for this
assignment since you will not need to write much code or work with
teammates on this one.  But, it is good to get experience using git and
will become necessary to work effectively with teammates for later
projects.)&lt;/p&gt;

&lt;p&gt;Once you have finished setting up your &lt;code&gt;ps1&lt;/code&gt; repository, it should
contain the files:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/CryptocurrencyCabal/ps1/blob/master/keypair.go&#34;&gt;keypair.go&lt;/a&gt;:
code for generating a bitcoin key pair (including its public address).&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/CryptocurrencyCabal/ps1/blob/master/spend.go&#34;&gt;spend.go&lt;/a&gt;: code for generating a bitcoin transaction.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;elliptic-curve-cryptography:939ea9b9cc2ea0226c5f2d7200883cc7&#34;&gt;Elliptic Curve Cryptography&lt;/h1&gt;

&lt;p&gt;The btcsuite library includes,
&lt;a href=&#34;https://github.com/btcsuite/btcd/tree/master/btcec&#34;&gt;btcec&lt;/a&gt;, an implementation of the
ECDSC algorithm using the
&lt;a href=&#34;https://en.bitcoin.it/wiki/Secp256k1&#34;&gt;secp256k1&lt;/a&gt; elliptic curve used by
bitcoin.&lt;/p&gt;

&lt;p&gt;Examine the
&lt;a href=&#34;https://github.com/btcsuite/btcd/blob/master/btcec/btcec.go&#34;&gt;btcec.go&lt;/a&gt; code.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;problem&#34;&gt;
&lt;strong&gt;Problem 4.&lt;/strong&gt; Find the &lt;span class=&#34;math&#34;&gt;&lt;em&gt;y&lt;/em&gt;&lt;sup&gt;2&lt;/sup&gt; =
  &lt;em&gt;x&lt;/em&gt;&lt;sup&gt;3&lt;/sup&gt; + 7&lt;/span&gt; curve in this code.  (For your answer, just
  submit the line numbers for the code that tests if a given point is on the curve.)
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Elliptic curves for cryptography needs really big numbers.  The modulus for the &lt;code&gt;secp256k1&lt;/code&gt; curve is found on &lt;a href=&#34;https://github.com/btcsuite/btcd/blob/BTCD_0_11_1_BETA/btcec/btcec.go#L909&#34;&gt;line 929&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; secp256k1.P = fromHex(&amp;quot;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This should be the value &lt;span class=&#34;math&#34;&gt;2&lt;sup&gt;256&lt;/sup&gt; - 2&lt;sup&gt;32&lt;/sup&gt; - 2&lt;sup&gt;9&lt;/sup&gt; - 2&lt;sup&gt;8&lt;/sup&gt; - 2&lt;sup&gt;7&lt;/sup&gt; - 2&lt;sup&gt;6&lt;/sup&gt; - 2&lt;sup&gt;4&lt;/sup&gt; - 1.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;problem&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problem 5.&lt;/strong&gt; Verify that the modulus used as &lt;code&gt;secp256k1.P&lt;/code&gt; in
  &lt;code&gt;btcec.go&lt;/code&gt; is correct.  You can do this either using
  &lt;a href=&#34;https://golang.org/pkg/math/big/&#34;&gt;math/big&lt;/a&gt;, Go&amp;rsquo;s bit integer library
  to do computations on such large numbers, or by computing it by hand.
  (For your answer, just show how you verified the modulus.  Including a
  snippet of code is fine.)&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;h2 id=&#34;generating-a-key-pair:939ea9b9cc2ea0226c5f2d7200883cc7&#34;&gt;Generating a Key Pair&lt;/h2&gt;

&lt;p&gt;We have provided code in &lt;code&gt;keypair.go&lt;/code&gt; that generates a bitcoin key pair.
You can try running this by running &lt;code&gt;go run keypair.go&lt;/code&gt; (or you can
compile it with &lt;code&gt;go build keypair.go&lt;/code&gt; and then run the resulting
executable &lt;code&gt;keypair&lt;/code&gt;).  It will print out the generated private key and
corresponding public bitcoin address.  (Try running it a few times to
see that it produces a different key pair each time.)&lt;/p&gt;

&lt;p&gt;Keys for ECDSC are generated by choosing a random private key, &lt;span
class=&#34;math&#34;&gt;&lt;em&gt;k&lt;/em&gt;&lt;/span&gt;, and finding the corresponding public key by
&amp;ldquo;multiplying&amp;rdquo; it by &lt;span class=&#34;math&#34;&gt;&lt;em&gt;G&lt;/em&gt;&lt;/span&gt;, the generator point.
(Multiplication here is not standard multiplication, but multiplication
on the elliptic curve, as discussed in &lt;a href=&#34;No page found with path or logical name &#34;classes/class3.md&#34;.
&#34;&gt;Class 3&lt;/a&gt;.)  The point &lt;span
class=&#34;math&#34;&gt;&lt;em&gt;G&lt;/em&gt;&lt;/span&gt; is defined by &lt;a href=&#34;https://github.com/btcsuite/btcd/blob/BTCD_0_11_1_BETA/btcec/btcec.go#L912&#34;&gt;lines
912-3&lt;/a&gt;):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;secp256k1.Gx = fromHex(&amp;quot;79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798&amp;quot;)
secp256k1.Gy = fromHex(&amp;quot;483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB10D4B8&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The resulting point is the public key.  It is easy to derive the public
key from the private key, but believed to be hard to learn anything
useful about the private key from the public key.  (The belief that it
is hard to reverse the elliptic curve multiplication is based on the
assumption that it is hard to compute discrete logarithms, which is not
proven, but underlies much of modern cryptography.)&lt;/p&gt;

&lt;p&gt;The code for generating a new keypair is in &lt;a href=&#34;https://github.com/CryptocurrencyCabal/ps1/blob/master/keypair.go#L20&#34;&gt;keypair.go&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func generateKeyPair() (*btcec.PublicKey, *btcec.PrivateKey) {
   priv, err := btcec.NewPrivateKey(btcec.S256())
   if err != nil {
       // There was an error. Log it and bail out
       log.Fatal(err)
   }
   return priv.PubKey(), priv
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The important work is the
&lt;a href=&#34;https://github.com/btcsuite/btcd/blob/BTCD_0_11_1_BETA/btcec/privkey.go#L38&#34;&gt;NewPrivateKey&lt;/a&gt;
function.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;problem&#34;&gt;
&lt;strong&gt;Problem 5.&lt;/strong&gt; What are &lt;em&gt;all&lt;/em&gt; the things you need to trust if you are
going to send money to the key generated by running &lt;code&gt;keypair.go&lt;/code&gt;?  You
should assume that you are an ultra-paranoid multi-billionaire who
intends to transfer her entire fortune to the generated address.&lt;br /&gt;
    &lt;/div&gt;&lt;/p&gt;

&lt;h2 id=&#34;generating-a-vanity-address:939ea9b9cc2ea0226c5f2d7200883cc7&#34;&gt;Generating a Vanity Address&lt;/h2&gt;

&lt;p&gt;Anyone can have a bitcoin address like
&lt;code&gt;1H7tu2qUAyyr5aX1WA17eyvbetAGyqxfKZ&lt;/code&gt; or
&lt;code&gt;1L3iGYBD5wbiki2SYUT5wmupy4TTgmEBg3&lt;/code&gt;, but suppose you want a bitcoin
address that includes the name of your cat or your birthday.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;problem&#34;&gt;
&lt;strong&gt;Problem 6.&lt;/strong&gt; Define a function, &lt;code&gt;func
generateVanityAddress(pattern string) (*btcec.PublicKey,
*btcec.PrivateKey)&lt;/code&gt; where &lt;code&gt;pattern&lt;/code&gt; is a regular expression.  It should
return a valid key pair where the corresponding public address &lt;a href=&#34;http://golang.org/pkg/regexp/#MatchString&#34;&gt;matches
the pattern&lt;/a&gt;.&lt;br /&gt;
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;You should be able to use your function to generate an address that
includes the digits of pi in sequence:
&lt;code&gt;generateVanityAddress(&amp;quot;3.*1.*4.*1.*5.*9.*&amp;quot;)&lt;/code&gt; or contains &lt;code&gt;DAVE&lt;/code&gt; without
any adjacent letters (&lt;code&gt;generateVanityAddress(&amp;quot;[0-9]DAVE[0-9]&amp;quot;)&lt;/code&gt;) in its
public bitcoin address.  In deciding how vain you want to be for the
next exercise, think about how the running time scales with the number
of strings that match the target pattern.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;problem&#34;&gt; &lt;strong&gt;Problem 7.&lt;/strong&gt; Use your &lt;code&gt;generateVanityAddress&lt;/code&gt;
function to create your own vanity address.  Its up to you to decide
what to put in your vanity address, but it should be clear that your
address is not a typical random one.  If you are extra vain, create a
address where your name appears at the beginning (after the initial
&lt;code&gt;1&lt;/code&gt;).  (Note that uppercase &amp;lsquo;O&amp;rsquo; and &amp;lsquo;I&amp;rsquo; and lowercase &amp;lsquo;l&amp;rsquo; are not used
in any address, so if your name includes these letters you will have to
be creative.)&lt;br /&gt;
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;problem&#34;&gt;
&lt;strong&gt;Problem 8.&lt;/strong&gt;   Is your vanity address more or less secure than the first address you generated?
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;There are on-line services that produce vanity addresses, like
   &lt;a href=&#34;http://bitcoinvanitygen.com/&#34;&gt;http://bitcoinvanitygen.com/&lt;/a&gt;.  You
   should contemplate briefly whether using such a site is &lt;a href=&#34;http://www.reddit.com/r/Bitcoin/comments/21foj9/funds_currently_being_stolen_from_vanity/&#34;&gt;more vain or
   stupid&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;bitcoin-transactions:939ea9b9cc2ea0226c5f2d7200883cc7&#34;&gt;Bitcoin Transactions&lt;/h1&gt;

&lt;p&gt;Having an address is not much fun without any funds!&lt;/p&gt;

&lt;p&gt;You should have received some money to the address you submitted in
&lt;a href=&#34;../../ps/ps0/ps0.md&#34;&gt;PS0&lt;/a&gt;.  For these questions, you will need to have
actual money to transfer, so be careful to make small transfers for
these questions in case something goes wrong.  (In the event that you do
lose all of your bitcoin, you can get a new transfer to an adress of
your choosing by explaining to me what you have learned about software
development and or best practices.  It is not necessary to buy your own
bitcoin, even if you lose all of the original transfer.)&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;problem&#34;&gt;
&lt;b&gt;Problem 9.&lt;/b&gt; Make a &lt;strong&gt;small&lt;/strong&gt; (e.g., 1 mBTC) transfer from
your wallet address to your vanity address.  You can do this using
your MultiBit wallet.  Find the transaction in the blockchain (you can do this by
searching for your vanity address at
&lt;a href=&#34;https://insight.bitpay.com/&#34;&gt;insight.bitpay.com&lt;/a&gt; or
&lt;a href=&#34;https://blockchain.info/&#34;&gt;blockchain.info&lt;/a&gt;). You will need the
transaction ID for the next exercise.  (For your answer, just provide the transaction ID.)
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Once you have located the transaction that sends bitcoin to your vanity
address you should notice several things.&lt;/p&gt;

&lt;p&gt;Your wallet most likely send bitcoins to your address &lt;em&gt;and&lt;/em&gt; back to a
new address.  We call this second address the &amp;lsquo;change&amp;rsquo; address. Notice
that each output has an ordered position. This index (known as the &lt;code&gt;vout&lt;/code&gt;)
along with the transaction ID lets us uniquely identify transaction
outputs. This is important if you want to use those outputs in a new
transaction.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;problem&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problem 10.&lt;/strong&gt; Transfer some bitcoin from your vanity address to someone
else in the class (you can use one of the addresses you identified in
Problem 2). To do this you can run &lt;code&gt;spend.go&lt;/code&gt; in ps1. You can provide
the parameters needed for the transaction at the command line (it is not
necessary to modify the code).&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;If done correctly the script should look this when executed:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt; go run spend.go \
    -txid=&amp;quot;6bf98ac2e1a25ea9c2951bb6a40262e054514236f864a3414c16fe6b3a5f3f62&amp;quot; \
    -vout=0 \
    -privkey=&amp;quot;8d66a9f85c4f737b231d1af0bd917c8e02f05d616f26c41f269a194a10c29029&amp;quot; \
    -toaddress=&amp;quot;1DTFjSGeij6woxyaJFaYLMzciKCYP83ZNB&amp;quot;

Here is your raw bitcoin transaction:
0100000001623f5f3a6bfe164c41a364f836425154e06202a4b61b95c2a95ea2e1c28af96b000000006a47304402202487724e5e42e60b5d8d98636797339b09db8c70452959cf9c48a0be1a45aba302203465c00d34a190dd1294c9c1561af7c0bcc2b0d452ae74b6d126ad06e0f03624012103c4a967e4e04f32f6b25b723c4d994bcc5f1f6db2cd7757d25643af0d1a1b4c1effffffff01905f0100000000001976a91488989f2c91337ad5241abedeafe8ed96fa28940488ac00000000
The sending api responded with:
{&amp;quot;txid&amp;quot;:&amp;quot;8d1687cc05cd3264c8d41acf19efcd08ecd44b5b57d3105fe081fdfd4baa6b0b&amp;quot;}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Notice that when the command above is run with these parameters it only
works
&lt;a href=&#34;https://blockchain.info/tx/8d1687cc05cd3264c8d41acf19efcd08ecd44b5b57d3105fe081fdfd4baa6b0b&#34;&gt;once&lt;/a&gt;. If
you tried to run it again or send the coins somewhere else the script
would fail.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;problem&#34;&gt; &lt;b&gt;Problem 11.&lt;/b&gt; Try to double spend the same
bitcoin.  Figure out as much as you can about what happens when the
double spend transactions are attempted.  See if you can get a
transaction to appear on the &lt;a href=&#34;https://blockchain.info/double-spends&#34;&gt;list of double
spends&lt;/a&gt;.  See how close you can get to obtaining two verified
transactions spending the same coin (e.g., can you achieve two
transactions with at least one confirmation each?)&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Please don&amp;rsquo;t try to actually rip anyone off; only attempt double
spending with your own addresses (or those of willing classmates).  You
are not expected to actually be able to double-spend successfully (if
this were easy, bitcoin would not work well as a currency!), but should
be able to learn something by attemting to do this.&lt;/p&gt;

&lt;h3 id=&#34;submission-1:939ea9b9cc2ea0226c5f2d7200883cc7&#34;&gt;Submission&lt;/h3&gt;

&lt;p&gt;Follow the submission instructions at the beginning of this page by
8:29pm on Tuesday, 15 September.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Getting Started with Github</title>
      <link>http://bitcoin-class.org/tools/github/</link>
      <pubDate>Tue, 20 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://bitcoin-class.org/tools/github/</guid>
      <description>

&lt;h1 id=&#34;getting-started-with-github:93ed8abeb42c248f3c551d1cb44159d4&#34;&gt;Getting Started with Github&lt;/h1&gt;

&lt;p&gt;For this course you will need to use &lt;a href=&#34;http://github.com&#34;&gt;github&lt;/a&gt; to
manage your code and submit your assignments.  &lt;a href=&#34;http://gitscm.com/&#34;&gt;Git&lt;/a&gt;
is a widely used version control system originally developed by Linus
Torvalds for use in managing development of the Linux operating system
kernel.  Github is company that provides free web-hosting for git
repositories.&lt;/p&gt;

&lt;p&gt;Follow the instructions below to get started using git and set up the
repository you will use for this class (we&amp;rsquo;ll talk more about git in
class, but this should be enough to get started):&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Register for a student github account: &lt;a href=&#34;https://github.com/edu&#34;&gt;https://github.com/edu&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Note: you need to do this even if you already have a public github
  account, unless you have a paid account to support non-public
  repositories.  With the student account, you will be able to have
  non-public repositories for free.&lt;/p&gt;

&lt;p&gt;You will need to verify your email address (which must be a .edu
  address), and then go back to the
  &lt;a href=&#34;https://github.com/edu&#34;&gt;https://github.com/edu&lt;/a&gt; page to fill in a
  form to request a student account.  You should then receive a
  &amp;ldquo;Powerup get!&amp;rdquo; message from github, and be able to create private
  repositories with your account.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Set up git on the machine you will use for course assignments. Follow the instructions here:
  &lt;a href=&#34;https://help.github.com/articles/set-up-git&#34;&gt;https://help.github.com/articles/set-up-git&lt;/a&gt;.
  Follow the instructions to download and install a git client for your OS
  (&lt;a href=&#34;http://mac.github.com/&#34;&gt;Mac&lt;/a&gt;,
  &lt;a href=&#34;http://windows.github.com/&#34;&gt;Windows&lt;/a&gt;).&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;using-git-for-ccc:93ed8abeb42c248f3c551d1cb44159d4&#34;&gt;Using git for CCC&lt;/h1&gt;

&lt;p&gt;For some of the assignments in this course, we will provide starting
code in a git repository and you will need to use separate private
repository for each assignment.  (After the assignment is due, you can
make this repository public, both to share it as you wish, and to free
up another private repository since the number of private repositories
you get with your free education account is limited.)&lt;/p&gt;

&lt;p&gt;Typically, you need to fetch the code skeleton from the respective
public repository of the course every time before you start working.&lt;/p&gt;

&lt;p&gt;The general process of working on projects is to (we&amp;rsquo;ll go through each
step in detail below):&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Create a private repository on github.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Clone&lt;/strong&gt; the repository, so you have a local working copy.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Get the code skeleton from the course repo, merge it into your
working copy, and push to the main repository.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Edit code and text files in your local copy.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;push&lt;/strong&gt; the local changes to the main repository.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As you do the assignment, you should commit and push your changes regularly.&lt;/p&gt;

&lt;h2 id=&#34;setting-up-the-repository:93ed8abeb42c248f3c551d1cb44159d4&#34;&gt;Setting up the Repository&lt;/h2&gt;

&lt;p&gt;Let&amp;rsquo;s take &lt;a href=&#34;http://bitcoin-class.org/ps/ps1/&#34;&gt;PS1&lt;/a&gt; as an example. Here&amp;rsquo;s what you should do.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;1. Create a new repository named &lt;code&gt;ps1&lt;/code&gt;.&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Visit &lt;a href=&#34;https://github.com/repositories/new&#34;&gt;https://github.com/repositories/new&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Select &amp;ldquo;Private&amp;rdquo; for the type of repository.  (If you got a student discount correctly, this should be available for free.  If it asks you for
      a credit card, go back to step 1 of &lt;a href=&#34;|filename|github.md&#34;&gt;setting up github&lt;/a&gt;.)&lt;/li&gt;
&lt;li&gt;Keep the &amp;ldquo;Initialize this repository with a README&amp;rdquo; unchecked, since you will fetch it later from a public repository.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;2. Clone the empty private repository to your working
environment.&lt;/b&gt; Instead of &lt;em&gt;mygithubname&lt;/em&gt; below, use your github
username.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:::text
git clone https://github.com/mygithubname/ps1.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you haven&amp;rsquo;t set up SSH keys for github, you&amp;rsquo;ll need to enter your
github username and password.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;3. Fetch the code skeleton from the course repository to your private
repository.&lt;/b&gt; Enter the working directory of your empty repository and
add a remote repository named &lt;code&gt;starting&lt;/code&gt;, merge the code, and push it to
your private repository by executing:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:::text
git remote add starting git@github.com:CryptoCurrencyCabal/ps1.git
git pull starting master
git push --tags origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;working-with-files:93ed8abeb42c248f3c551d1cb44159d4&#34;&gt;Working with Files&lt;/h2&gt;

&lt;p&gt;Now you can write your own code in editor and save it to files. You can see what files have changed by running:
&lt;code&gt;git status&lt;/code&gt;.  You should see something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:::text
# On branch master
# Untracked files:
#   (use &amp;quot;git add &amp;lt;file&amp;gt;...&amp;quot; to include in what will be committed)
#
#   break_daves_key.go
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In this example, nothing has been added to commit but untracked files
are present.&lt;/p&gt;

&lt;p&gt;To add the files to the main repository:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:::text
git add break_daves_key.go
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You should try running &lt;code&gt;git status&lt;/code&gt; again to see the files that will be
committed.  Note that add stages the file in its current state!  If you
modify the file after the add, the version of the file when you did the
add is the version that will be committed.&lt;/p&gt;

&lt;p&gt;Then,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:::text
git commit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;commits the staged files to the main repository.  This will launch and
editor for you to enter a commit message.  You can use &lt;code&gt;-m&lt;/code&gt; to provide a
message at the command line instead:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:::text
git commit -m &#39;I am no longer afraid of commitment!&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Your actual commit messages you use should be &lt;strong&gt;clear&lt;/strong&gt; and &lt;strong&gt;useful&lt;/strong&gt;.
It is tempting to use &lt;a href=&#34;http://whatthecommit.com/&#34;&gt;lazy commit message&lt;/a&gt;,
but you will regret this as your projects get more complex and code
breaks in mysterious ways.&lt;/p&gt;

&lt;p&gt;If you want to skip the two-stage commit, you can do:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:::text
git commit -a
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;to automatically add all new and changed files to the commit.&lt;/p&gt;

&lt;p&gt;At this point, the changes are stored in your local repository, but not
yet in the main repository.  Once you have changes you want to push to
the main repository:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:::text
git push
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After this, all the changes are now pushed to the main repository at
github.  Visit your repository in github to see the result.&lt;/p&gt;

&lt;p&gt;This seems like a lot of steps, but by providing a full local repository
and making the steps of staging and pushing to the remote repository
explicit, git provides developers with a lot of control over
repositories that becomes very useful when several (or many) developers
are working on the same project and trying to combine each others
changes (or recover from mistakes).&lt;/p&gt;

&lt;p&gt;There are many resources for learning more about git.  The free book,
&lt;a href=&#34;http://git-scm.com/book/en/&#34;&gt;Pro Git&lt;/a&gt; by Scott Chacon is recommended.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Registration</title>
      <link>http://bitcoin-class.org/registration/</link>
      <pubDate>Wed, 26 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>http://bitcoin-class.org/registration/</guid>
      <description>

&lt;h1 id=&#34;course-registration:38a8983f478dea556d71617301415c7f&#34;&gt;Course Registration&lt;/h1&gt;

&lt;p&gt;&lt;div class=&#34;due&#34;&gt;
Due: 8:29pm on Saturday, 29 August
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;To register for the course, you need to &lt;strong&gt;setup a bitcoin wallet&lt;/strong&gt; (so
don&amp;rsquo;t wait until the last minute to do this).&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://multibit.org/&#34;&gt;MultiBit HD&lt;/a&gt; is a good choice for this.  See
&lt;a href=&#34;https://bitcoin.org/en/choose-your-wallet&#34;&gt;https://bitcoin.org/en/choose-your-wallet&lt;/a&gt;
for information on bitcoin wallets.  Be aware that you probably do not
have time to download the full blockchain before this assignment is due,
so need to use a &lt;em&gt;lightweight wallet&lt;/em&gt; (we will learn what this means
later in the class).&lt;/p&gt;

&lt;p&gt;After creating a wallet, you should find the &lt;em&gt;Recieving Address&lt;/em&gt; which
you will need for one of the questions.  If you used MultiBit HD, you
will see this by clicking &amp;ldquo;Request&amp;rdquo; (to request payment), and copy the
&amp;ldquo;Recipient Address&amp;rdquo;.  It should be a string like,
&lt;code&gt;19WmbY4nDcjAEv6wb5rcd5E6MutVMXBZzy&lt;/code&gt;.  Note that your wallet may create
several recipient addresses, so you won&amp;rsquo;t see the same address each time
you do this.&lt;/p&gt;

&lt;p&gt;It is not necessary now, or at any time during this class, for you to
actually buy bitcoins with your own money.  If you are inclined to do
this, be careful, and don&amp;rsquo;t use any funds you cannot afford to lose!&lt;/p&gt;

&lt;p&gt;Submit the form below (also avaible as &lt;a href=&#34;https://docs.google.com/forms/d/1taP-16YrkyfNMjZxDkz5dF3BTaFd5wrDdIcZPq7OYmE/viewform?usp=send_form&#34;&gt;direct link&lt;/a&gt;):&lt;/p&gt;

&lt;iframe src=&#34;https://docs.google.com/forms/d/1taP-16YrkyfNMjZxDkz5dF3BTaFd5wrDdIcZPq7OYmE/viewform?embedded=true&#34; width=&#34;760&#34; height=&#34;800&#34; frameborder=&#34;0&#34; marginheight=&#34;0&#34; marginwidth=&#34;0&#34;&gt;Loading...&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Syllabus</title>
      <link>http://bitcoin-class.org/syllabus/</link>
      <pubDate>Sat, 22 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>http://bitcoin-class.org/syllabus/</guid>
      <description>

&lt;h1 id=&#34;syllabus:051025d606153e159a2b11ffecb897d5&#34;&gt;Syllabus&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Meetings:&lt;/strong&gt; Mondays and Wednesdays, 2:00-3:15pm in Olsson 120.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Teachers:&lt;/strong&gt; &lt;a href=&#34;http://www.cs.virginia.edu/evans&#34;&gt;David Evans&lt;/a&gt; and &lt;a href=&#34;http://www.cs.virginia.edu/~sza4uq/&#34;&gt;Samee
  Zahur&lt;/a&gt;&lt;br /&gt;
&lt;strong&gt;Assistant:&lt;/strong&gt; &lt;a href=&#34;https://www.linkedin.com/pub/ori-shimony/b7/913/665&#34;&gt;Ori Shimony&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Office Hours:&lt;/strong&gt; Mondays 5-6:30pm (Ori, Rice 442); Wednesdays 3:15-4:30pm (Samee, Rice 442); Thursdays 2:30-3:30pm (Dave, Rice 507).  Office hours will be updated on the &lt;a href=&#34;https://www.google.com/calendar/embed?src=rmjagdrnmu3a9h2q5199lg4t28%40group.calendar.google.com&amp;amp;ctz=America/New_York&#34;&gt;course calendar&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Site:&lt;/strong&gt; &lt;a href=&#34;http://bitcoin-class.org&#34;&gt;http://bitcoin-class.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;hanging&#34;&gt; &lt;strong&gt;Readings:&lt;/strong&gt; We will not follow a textbook
closely, but will have several readings from two books (both of which
are freely available):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Andreas M. Antonopoulos,
&lt;a href=&#34;https://github.com/aantonop/bitcoinbook&#34;&gt;&lt;em&gt;Mastering Bitcoin: Unlocking Digital
Cryptocurrencies&lt;/em&gt;&lt;/a&gt;.  (You can
use the free version of the book available at
&lt;a href=&#34;https://github.com/aantonop/bitcoinbook&#34;&gt;https://github.com/aantonop/bitcoinbook&lt;/a&gt;,
but would probably benefit from buying the &lt;a href=&#34;http://www.amazon.com/Mastering-Bitcoin-Unlocking-Digital-Crypto-Currencies/dp/1449374042&#34;&gt;printed
version&lt;/a&gt;).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Arvind Narayanan, Joseph Bonneau, Edward Felten, Andrew Miller, Steven
Goldfeder. &lt;a href=&#34;https://piazza.com/princeton/spring2015/btctech/resources&#34;&gt;&lt;em&gt;Bitcoin and Cryptocurrency
Technologies&lt;/em&gt;&lt;/a&gt;.
This is a new book under development by a team at Princeton University.
(There are also lecture videos and slides that correspond to the book.)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In addition to those books, we will have several readings from both
general audience publications, technical documents, and research papers.&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;h2 id=&#34;overview:051025d606153e159a2b11ffecb897d5&#34;&gt;Overview&lt;/h2&gt;

&lt;p&gt;For the past 10,000 years, humans have been seeking better ways to store
and transfer value.  &lt;em&gt;Cryptocurrencies&lt;/em&gt; (most notably bitcoin), provide
a way to do this using bits alone without any centralized authority.  In
this course, we will learn about the cryptographic foundations for
cryptocurrencies; networking, software, hardware, and security issues
relevant to designing and implementing a cryptocurrency, and consider
the economic, legal, and political issues raised by cryptocurrencies.&lt;/p&gt;

&lt;h2 id=&#34;expected-background:051025d606153e159a2b11ffecb897d5&#34;&gt;Expected Background&lt;/h2&gt;

&lt;p&gt;Students entering this course are expected to be comfortable reading,
designing, and writing complex programs that involve thousands of lines
of code distributed over many modules.  You should be fairly comfortable
with math, at least enough to analyze probabilities.&lt;/p&gt;

&lt;p&gt;You should be comfortable learning how to use a new programming language
features and APIs by reading their documentation (or source code when no
documentation is available), and not be surprised when you are expected
to learn a new language on your own or to seek documentation beyond what
was provided in class.&lt;/p&gt;

&lt;p&gt;Students are &lt;strong&gt;not expected&lt;/strong&gt; to have significant previous experience with
cryptography (although such background will certainly be helpful).&lt;/p&gt;

&lt;p&gt;Some specific things we expect of students entering this course:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;You should have some experience programming in at least one
programming language, and not be afraid of needing to learn new
languages.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;You have written at least one program with over 1000 lines of code.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;You should understand basic probability and be able to figure out
things like the probability that 100 tosses of a fair coin do not
result in any tails.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;You should understand at least as much about complexity and
computability as is covered in &lt;a href=&#34;http://dori-mic.org&#34;&gt;&lt;em&gt;Dori-Mic and the Universal
Machine&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;You should find computing exciting and delighting, and believe you can
use computing to make the world a better place.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you do not satisfy any of these expectations, that doesn&amp;rsquo;t mean you
cannot take the class, but you need to let one of the course teachers
know about it at the beginning of the semester.&lt;/p&gt;

&lt;h2 id=&#34;honor-pledge:051025d606153e159a2b11ffecb897d5&#34;&gt;Honor Pledge&lt;/h2&gt;

&lt;p&gt;This course focuses on how to establish trust among distrusting people
using mathematics, computing, and networking.  As a student at
Mr. Jefferson&amp;rsquo;s University, you are intrinsically trusted.&lt;/p&gt;

&lt;p&gt;We take advantage of this trust to provide a better learning environment
for everyone.  In particular, students in this class are expected to
follow these rules:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;b&gt;I will not lie, cheat or steal.&lt;/b&gt; If I am unsure whether something
would be considered lying, cheating or stealing, I will ask before doing
it.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;b&gt;I will carefully read and follow the collaboration policy on each
assignment.&lt;/b&gt; I will not abuse resources, including any submissions or
solutions for assignments from last semester&amp;rsquo;s version of this course,
that would be clearly detrimental to my own learning.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In addition to the honor rules, students in this class are also expected
to follow these behaviors:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;b&gt;I will do what I can to help my fellow classmates learn.&lt;/b&gt; &lt;em&gt;Except
when specifically instructed not to&lt;/em&gt;, this means when other students ask
me for help, I will attempt to provide it. I will look at their answers
and discuss what I think is good or bad about their answers. I will help
others improve their work, but will not give them my answers directly. I
will try to teach them what they need to know to discover solutions
themselves.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;b&gt;I will ask for help.&lt;/b&gt; I will make a reasonable effort to do things
on my own first (or with my partners for group assignment), but will ask
my classmates or the course staff for help before getting overly
frustrated.  There are many ways to ask for help including the course
website and office hours.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;b&gt;I grant the course staff permission to reproduce and distribute
excerpts from my submissions for teaching purposes.&lt;/b&gt; If may opt-out
of this by adding a comment to your code, but without an explicit
opt-out comment we assume you agree to it.  Excerpts will be used
anonymously when illustrating a misunderstanding or common problem, and
with credit when showing an interesting or exemplary answer.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;b&gt;I will not invest money I cannot afford to lose in
cryptocurrencies.&lt;/b&gt; The main topic of this course is cryptocurrencies,
and students will be encouraged to gain experience using bitcoin to
conduct real transactions (but will not be expected to spend any
personal money on bitcoin).  Please be aware that bitcoin is very
volatile, and that you could lose all the money in your bitcoin wallet
if you make a programming error or lose your key. It would be foolish
and reckless to convert any money you would be upset about losing into a
cryptocurrency.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;b&gt;I will provide useful feedback.&lt;/b&gt; I realize that this is a new and
experimental course, and it is important that I let the course staff
know what they need to improve the course. I will not wait until the
end of the course to make the course staff aware of any problems. I
will provide feedback either anonymously or by contacting the course
staff directly. &lt;b&gt;I will fill out all requested surveys honestly and
thoroughly&lt;/b&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;assignments:051025d606153e159a2b11ffecb897d5&#34;&gt;Assignments&lt;/h2&gt;

&lt;p&gt;The course will have one midterm, four problem sets, one final project,
and a (discretionary) final exam.  In addition, there will be several
check-ups (short tests in class, with opportunities to revise and
improve answers after discussion) and short assignments that may involve
reading assignments and posting answers and questions on the course
website.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Exams.&lt;/strong&gt; The midterm is Monday, 19 October.  The final exam is
scheduled for Friday, 11 December (2-5pm).  This time will be used to
schedule short oral exams for students who have not already demonstrated
strong understanding of the course topics.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problem Sets.&lt;/strong&gt; The problem sets will involve writing programs and
solving problems to understand transactions in bitcoin (Problem Set 1),
bitcoin nodes and mining (Problem Set 2), blockchain analysis (Problem
Set 3), and alternate cryptocurrencies (Problem Set 4).  For most of
these assignments, you will be encouraged to work with one or two other
people in a small team.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Final Project.&lt;/strong&gt; For the final project, you are free to work on
anything relevant to cryptocurrencies.  Some suggestions for project
ideas will be posted on the course website.  Students who have ambitious
ideas for a project may be able to arrange with the course staff to
expand the project to substitute for other assignments (such as Problem
Set 4).&lt;/p&gt;

&lt;h2 id=&#34;schedule:051025d606153e159a2b11ffecb897d5&#34;&gt;Schedule&lt;/h2&gt;

&lt;p&gt;A tenative and (continually) updated schedule is available as a &lt;a href=&#34;https://www.google.com/calendar/embed?src=rmjagdrnmu3a9h2q5199lg4t28%40group.calendar.google.com&amp;amp;ctz=America/New_York&#34;&gt;Google
calendar&lt;/a&gt;.
(You can view this calendar on the course site, or incorporate in as
iCal calendar into your own calendar using &lt;a href=&#34;https://www.google.com/calendar/ical/rmjagdrnmu3a9h2q5199lg4t28%40group.calendar.google.com/public/basic.ics&#34;&gt;this
link&lt;/a&gt;.
Except when noted otherwise, assignments are due at &lt;b&gt;8:29pm&lt;/b&gt; on the
due date.&lt;/p&gt;

&lt;p&gt;The main expected due dates:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Saturday, 29 August: &lt;strong&gt;Registration&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Monday, 7 September: &lt;strong&gt;Checkup 1&lt;/strong&gt; (in class)&lt;/li&gt;
&lt;li&gt;Tuesday, 15 September: &lt;strong&gt;Problem Set 1: Bitcoin Transactions&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Monday, 21 September: &lt;strong&gt;Checkup 2&lt;/strong&gt; (in class)&lt;/li&gt;
&lt;li&gt;Friday, 2 October: &lt;strong&gt;Problem Set 2: Nodes and Mining&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Monday, 19 October: &lt;strong&gt;Midterm Exam&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Tuesday, 27 October: &lt;strong&gt;Problem Set 3: Blockchain Analysis&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Tuesday, 17 November: &lt;strong&gt;Problem Set 4: Alternate Cryptocurrencies&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Sunday, 22 November: &lt;strong&gt;Project Proposal&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Monday, 7 December: Last class&lt;/li&gt;
&lt;li&gt;Friday, 11 December: &lt;strong&gt;Final Exam&lt;/strong&gt; (discretionary)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Dates shown here are subject to change based on how the semester
progresses, but with ample warning.&lt;/p&gt;

&lt;h2 id=&#34;grading:051025d606153e159a2b11ffecb897d5&#34;&gt;Grading&lt;/h2&gt;

&lt;p&gt;We prefer to spend our time focused as much as possible on &lt;em&gt;teaching&lt;/em&gt;,
and as little as possible on &lt;em&gt;grading&lt;/em&gt;.  The assignments in this class
are designed to maximize &lt;em&gt;learning&lt;/em&gt;, rather than primarily for
&lt;em&gt;assessment&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;That said, we understand that students do need to be assigned grades at
the end of the semester, and sometimes grades can be a powerful and
effective motivator as well as a useful way to measure progress and
understanding.&lt;/p&gt;

&lt;p&gt;Grades will be determined based on your performance on all the class
assignments and class contributions (including postings on the course
site).  Some assignments may be graded by randomly looking at selected
answers, rather than reading everything submitted.&lt;/p&gt;

&lt;p&gt;There is no set weighting among these things, and in general, if there
is some combination of the above that demonstrates that you have gotten
what we hope out of the class then you will receive an A grade.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Office Hours Schedule</title>
      <link>http://bitcoin-class.org/announcements/officehours/</link>
      <pubDate>Fri, 28 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>http://bitcoin-class.org/announcements/officehours/</guid>
      <description>&lt;p&gt;Ori&amp;rsquo;s office hours have been moved to 5-6:30pm Monday (in Rice 442).
All of our office hours are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ori, Mondays 5-6:30pm in Rice 442&lt;/li&gt;
&lt;li&gt;Samee, 3:30-4:30pm in Rice 442&lt;/li&gt;
&lt;li&gt;Dave, 2:30-3:30pm in Rice 507&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you can&amp;rsquo;t make the scheduled office hours, send email to arrange another time.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Class 1: What is Money?</title>
      <link>http://bitcoin-class.org/classes/class1/</link>
      <pubDate>Wed, 26 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>http://bitcoin-class.org/classes/class1/</guid>
      <description>

&lt;h2 id=&#34;schedule:e795e40ef5a742faa33766b4d984e8c7&#34;&gt;Schedule&lt;/h2&gt;

&lt;p&gt;&lt;div class=&#34;todo&#34;&gt;
Before &lt;strong&gt;8:29pm Saturday&lt;/strong&gt; (29 August):&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Read:&lt;/strong&gt; &lt;a href=&#34;http://bitcoin-class.org/syllabus&#34;&gt;Course Syllabus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Setup&lt;/strong&gt; a bitcoin wallet (see &lt;a href=&#34;http://bitcoin-class.org/registration&#34;&gt;Registration&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Submit &lt;a href=&#34;http://bitcoin-class.org/registration&#34;&gt;Registration&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Before &lt;strong&gt;Monday&amp;rsquo;s class&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Read:&lt;/strong&gt;
&lt;a href=&#34;https://github.com/aantonop/bitcoinbook/blob/develop/ch01.asciidoc&#34;&gt;&lt;em&gt;Chapter 1: Introduction&lt;/em&gt;&lt;/a&gt;
and
&lt;a href=&#34;https://github.com/aantonop/bitcoinbook/blob/develop/ch02.asciidoc&#34;&gt;&lt;em&gt;Chapter 2: How Bitcoin Works&lt;/em&gt;&lt;/a&gt;
from Andreas M. Antonopoulos, &lt;a href=&#34;https://github.com/aantonop/bitcoinbook&#34;&gt;&lt;em&gt;Mastering Bitcoin: Unlocking Digital
Cryptocurrencies&lt;/em&gt;&lt;/a&gt; book (also
available &lt;a href=&#34;http://www.amazon.com/Mastering-Bitcoin-Unlocking-Digital-Crypto-Currencies/dp/1449374042&#34;&gt;in
print&lt;/a&gt;).&lt;br /&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;center&gt;
&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/key/md9EiU6QZoWroa&#34;
width=&#34;476&#34; height=&#34;400&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34;
marginheight=&#34;0&#34; scrolling=&#34;no&#34;&gt;&lt;/iframe&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;caption&#34;&gt;
Note: ink markings may not appear in the
embedded viewer.  To see them, &lt;a href=&#34;http://bitcoin-class.org/classes/class1-post.pptx&#34;&gt;download the slides&lt;/a&gt;.
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;/center&gt;&lt;/p&gt;

&lt;h2 id=&#34;notes:e795e40ef5a742faa33766b4d984e8c7&#34;&gt;Notes&lt;/h2&gt;

&lt;p&gt;What is currency?&lt;/p&gt;

&lt;div class=&#34;biggap&#34;&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Every commodity admits two uses: (1) its proper use, (2) its use as an article of exchange.&lt;/em&gt;&lt;br /&gt;
Aristotle&amp;rsquo;s &lt;a href=&#34;https://play.google.com/books/reader?id=1J7N4eAKuhwC&amp;amp;printsec=frontcover&amp;amp;output=reader&amp;amp;hl=en&amp;amp;pg=GBS.PR13&#34;&gt;&lt;em&gt;Politics&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;What properties should a currency have?&lt;/p&gt;

&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;

&lt;p&gt;What is a &lt;em&gt;fiat currency&lt;/em&gt;?&lt;/p&gt;

&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;All these pieces of paper are, issued with as much solemnity and authority as if they were of pure gold or silver&amp;hellip; and indeed everybody takes them readily, for wheresoever a person may go throughout the Great Kaan&amp;rsquo;s dominions he shall find these pieces of paper current, and shall be able to transact all sales and purchases of goods by means of them just as well as if they were coins of pure gold.&lt;/em&gt;&lt;br /&gt;
Macro Polo (on Yuan Dynasty paper money, 13th century)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Was salt a fiat currency as used by the Romans?  Was salt a fiat currency as used by the Han Dynasty?&lt;/p&gt;

&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;http://sinosphere.blogs.nytimes.com/2014/11/21/chinas-millenniums-old-salt-monopoly-no-match-for-economic-reform/&#34;&gt;&lt;em&gt;China’s Millenniums-Old Salt Monopoly No Match for Economic Reform&lt;/em&gt;&lt;/a&gt;, New York Times, 21 November 2014.&lt;/p&gt;

&lt;h2 id=&#34;designing-a-digital-currency:e795e40ef5a742faa33766b4d984e8c7&#34;&gt;Designing a Digital Currency&lt;/h2&gt;

&lt;p&gt;What are the drawbacks of using a centralized bank to record transactions?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;What race conditions could occur when you make a purchase with a credit card today?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;What is recorded in the bitcoin ledger?
&lt;div class=&#34;gap&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;h2 id=&#34;discussion-questions:e795e40ef5a742faa33766b4d984e8c7&#34;&gt;Discussion Questions&lt;/h2&gt;

&lt;p&gt;How well does US paper money work as a currency?&lt;/p&gt;

&lt;p&gt;Why are there &lt;a href=&#34;https://angel.co/cryptocurrency-2&#34;&gt;over 800 cryptocurrency startups&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;How big do you expect the bitcoin blockchain to be on the last day of
class (December 7, 2:00pm)?  (closest answer wins!)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cryptocurrency Cabal</title>
      <link>http://bitcoin-class.org/main/</link>
      <pubDate>Wed, 26 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>http://bitcoin-class.org/main/</guid>
      <description>

&lt;h2 id=&#34;welcome-to-cryptocurrency-cabal:379caad01b6ea305187be199bcac1370&#34;&gt;Welcome to Cryptocurrency Cabal!&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;First Class:&lt;/strong&gt; Wednesday, 26 August 2015&lt;br /&gt;
&lt;strong&gt;Location:&lt;/strong&gt; Olsson 120&lt;br /&gt;
&lt;strong&gt;Teachers:&lt;/strong&gt; &lt;a href=&#34;http://www.cs.virginia.edu/evans&#34;&gt;David Evans&lt;/a&gt; and &lt;a href=&#34;http://www.cs.virginia.edu/~sza4uq/&#34;&gt;Samee Zahur&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;More information will be posted here soon.  Until then, see the
&lt;a href=&#34;http://bitcoin-class.org/syllabus/&#34;&gt;Syllabus&lt;/a&gt; and &lt;a href=&#34;0/&#34;&gt;Last Semester&amp;rsquo;s
Course&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Inside the Fight Over Bitcoin’s Future</title>
      <link>http://bitcoin-class.org/news/bitcoinxt/</link>
      <pubDate>Sun, 30 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>http://bitcoin-class.org/news/bitcoinxt/</guid>
      <description>&lt;p&gt;There&amp;rsquo;s an article in the New Yorker, &lt;a href=&#34;http://www.newyorker.com/business/currency/inside-the-fight-over-bitcoins-future&#34;&gt;&lt;em&gt;Inside the Fight Over Bitcoin’s
Future&lt;/em&gt;&lt;/a&gt;,
25 August 2015 (by Maria Bustillos) about the split over the
increasingly heated debate in the bitcoin community over the maximum
size of a block.&lt;/p&gt;

&lt;p&gt;The current maximum size accepted by the Bitcoin Core node
software is 1MB (which means the network can support only approximately
7 transactions per second).  There are lots of proposed solutions to
this, including increasing the block size, but they are controversial
and also raise lots of issues about how to make decisions like this for
a decentralized system.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bitcoin Technology Piques Interest on Wall St.</title>
      <link>http://bitcoin-class.org/news/nyt/</link>
      <pubDate>Fri, 28 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>http://bitcoin-class.org/news/nyt/</guid>
      <description>&lt;p&gt;New York Times, &lt;a href=&#34;http://www.nytimes.com/2015/08/31/business/dealbook/bitcoin-technology-piques-interest-on-wall-st.html&#34;&gt;&lt;em&gt;Bitcoin Technology Piques Interest on Wall St.&lt;/em&gt;&lt;/a&gt;, 28 August 2015 (by Nathaniel Popper).&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&amp;hellip; the innovations that helped turn Bitcoin into the most popular virtual currency are now being viewed as a potentially enormous disruptive force for several industries, including accounting, music and journalism. Nowhere, though, are more money and resources being spent on the technology than on Wall Street — the very industry that Bitcoin was created to circumvent.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Ombuds: Using Bitcoin to make online messages &#39;immutable&#39;</title>
      <link>http://bitcoin-class.org/news/ombuds/</link>
      <pubDate>Fri, 21 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>http://bitcoin-class.org/news/ombuds/</guid>
      <description>&lt;p&gt;There&amp;rsquo;s an article about the Ombuds project created by Alex Kuck and
Nick Skelsey to use the bitcoin blockchain for communications:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.journalism.co.uk/news/ombuds-using-bitcoin-to-make-online-messages-immutable-/s2/a566167/&#34;&gt;&lt;em&gt;Ombuds: Using Bitcoin to make online messages &amp;lsquo;immutable&amp;rsquo;&lt;/em&gt;&lt;/a&gt;, Journalism.co.uk, 20 August 2015.&lt;/p&gt;

&lt;p&gt;Alex and Nick graduated from UVa in Spring 2015, and helped develop the
&lt;a href=&#34;http://bitcoin-class.org/0/&#34;&gt;first offering of this course&lt;/a&gt;, including creating the PointCoin
cryptocurrency.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>